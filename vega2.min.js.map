{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/bin.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/csv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/formats/tsv.js","node_modules/datalib/src/import/infer-types.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/loaders.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/index.js","node_modules/datalib/src/log.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/summary.js","node_modules/datalib/src/template.js","node_modules/datalib/src/tree.js","node_modules/datalib/src/truncate.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/GroupBy.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js","src/util/quickselect.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./core/View","./dataflow/Datasource","./dataflow/Graph","./dataflow/Node","./dataflow/changeset","./parse/spec","./scene/Builder","./scene/GroupBuilder","./transforms/index","./util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"bisectLeft","x","lo","hi","mid","cmp","opt","precision","v","eps","maxb","maxbins","base","div","mins","minstep","logb","Math","log","level","ceil","min","max","span","step","pow","round","nbins","steps","floor","start","stop","unit",5,"gen","repeat","val","Array","zeroes","range","arguments","Infinity","j","random","uniform","delta","samples","map","integer","b","undefined","normal","mean","stdev","next","rds","c","y","sqrt",6,"d3","data","format","d","csv","toString",7,"json","tsv","topojson","treejson","./csv","./json","./topojson","./treejson","./tsv",8,"isObject","JSON","property","accessor","../../util",9,"obj","feature","objects","features","mesh",10,"tree","toTable","children","../../tree",11,12,"tests","bool","isBoolean","date","isNaN","Date","num","isDate","values","types","type","test","splice","../util",13,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","idx","lastIndexOf","load","callback","error","err","slice","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",14,"read","keys","formats","reduce","out","isString","isFunction","extend","./load","./read",15,"cols","parsers","clen","infer","PARSERS","number","boolean","./formats","./infer-types",16,"dl","bin","summary","template","truncate","msg","LOG","silent","ERR","./bin","./generate","./import/load","./import/loaders","./import/read","./log","./stats","./summary","./template","./truncate","./util",17,"prepare","now","join","console",18,"stats","unique","results","isArray","counts","count","distinct","nulls","median","filter","isNotNull","sort","half","variance","M2","skew","avg","med","std","minmax","minIndex","maxIndex","entropy","p","H","LN2","normalized","profile","sd","vals",19,"printSummary","profiles","str","forEach","field","printCategoricalProfile","printQuantitativeProfile","list","top","concat","fields",20,"text","src","source","Function","bind","context","variable","index","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","fn","stringCast","filters","split","prop","shift","trim","pidx","args","indexOf","template_format","time","template_escapes","pattern","fmt","format_map","clearFormatCache","'","\\","\r","\n"," "," ",21,"root","childrenField","parentField","visit","node","parent","table","FIELDS",22,"truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","pos","word","ellipsis","u_truncateOnWord","l1","l2",23,"util_escape_str","escape_str_re","stderr","Object","prototype","isNumber","parseFloat","isFinite","array","stringify","identity","duplicate","equal","k","toMap","keystr","apply","mutator","comparator","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","String","string","searchString","_process",24,"./lib/heap",25,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","result","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","clear","empty","size","clone","heap","toArray","insert","front","has","copy","factory",26,"bounds","union","x1","Number","MAX_VALUE","y1","x2","y2","set","add","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",27,"Model","_defs","_predicates","_scene","graph","_node","_builder","predicates","m","proto","defs","pipeline","predicate","renderer","disconnect","marks","connect","fire","cs","create","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",28,"parseStreams","canvas","svg","Transition","debug","el","model","_el","_model","_width","__width","_height","__height","_autopad","_padding","left","bottom","right","_viewport","_renderer","_handler","_io","initialize","parentNode","_strict","padding","pad","resize","autopad","inset","autopadInset","update","viewport","_build","render","prevHandler","h","select","remove","append","attr","style","Renderer","Handler","handlers","handler","trans","duration","ease","reflow","_renderNode","router","evaluate","input","items","ds","revises","finalize","last","../parse/streams","../render/canvas/index","../render/svg/index","../scene/Transition","../util/config","../util/debug",29,"Collector","init","_data","collector","mod","rem","ids","_id","../util/constants","./Node","./changeset",30,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","tuple","prev","ingest","where","func","idMap","unshift","output","listener","dest","_srcMap","derive","listeners","./Collector","./tuple",31,"_stamp","_rank","_signals","doNotPropagate","signal","forEachNode","branch","Signal","db","signalValues","sg","value","signalRef","ref","schedule","rank","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","signals","SIGNALS","reevaluate","run","./Datasource","./Signal",32,"REEVAL","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","q","cur","foundSending","reeval",33,"_value",34,"reset_prev",35,"datum","tuple_id","reset",36,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","raw","Identifier","id","hasOwnProperty","Program","MemberExpression","computed","object","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","key","ExpressionStatement","expression","./constants","./functions",37,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",38,"fncall","cast","DATE","STRING","REGEXP","abs","acos","asin","atan","atan2","exp","tan","datetime","day","year","month","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseInt","upper","lower","substring","if",39,"parser","./codegen","./parser",40,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","options","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",41,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",42,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",43,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","stream","startRule",44,"eval","../expression",45,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",46,"parseProperties","parseMark","mark","props","delay","./properties",47,"./mark",48,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",49,50,"parseSignal","parseOperands","decl","arg","pred","parseComparator","ops","parseLogical","parseIn","parseScale","scope","invert","=","==","!=",">",">=","<","<=","and","&&","or","||","in",51,"compile","names","vars","valueRef","DEPS","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","sgRef","fRef","sRef","fieldRef","scaleRef","band","mult","z","xx","color","yy","zz","nested","fr",52,"dep","./expr",53,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",54,"changset","selector","START","MIDDLE","END","view","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",55,"tx","../transforms/index",56,"eventName","_active","_handlers","_canvas","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","getContext","gx","gy","marktype","picker","./marks",57,"scaleCanvas","ctx","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","setAttribute","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","setTransform","element","pendingImages","bb2","bb","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",58,"./Handler","./Renderer",59,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","px","py","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",60,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","th","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",61,"svgHandler","__data__","_svg","dom","removeEventListener",62,"clipping","updateDefs","all","dgrad","dclip","each","grd","cr","renderItems",63,"dup",64,"yh","styleProps","styles","setProperty","removeProperty","arc_path","area_path","line_path","symbol_path","setAttributeNS","removeAttribute","textContent","clip_id","group_bg","cssClass","cls","tag","nest","drawMark","evts","grps","childNodes","notG","mark_id","center",65,"Bounder","_mark","GROUP","../util/bounds",66,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","Encoder","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",67,"enc","EMPTY",68,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",69,"hasPropertySet","cousin","iidx","midx","touch",70,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","singleton","stat","group_by","MIN","MAX","order","DESC","SINGLETON","domainMin","domainMax","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",71,"updates","elapsed","curr","calcBounds","skip","interp","timer",72,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","extent","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",73,"GroupBy","Transform","addParameters","sum","var","varp","stdevp","_fieldsDef","_Aggregators","_singleton","meas","aggs","measures","_reset","_keys","_gb","_new_cell","agg","cell","_add","_cell","flg","MOD_CELL","_rem","get","_cells","./GroupBy","./Transform","./measures",74,"BatchTransform","batchTransform",75,"Bin","default",76,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",77,"Facet","_new_tuple","_mod","ADD_CELL",78,"Filter","_skip","../parse/expr",79,"Fold","rst","get_tuple","accessors","dlen","fold",80,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",81,"Formula",82,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",83,"GeoPath","geojson","./Geo",84,"gb","groupBy",85,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",86,"Parameter","_type","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","isExpr",87,"Pie","ones","./BatchTransform",88,"Sort","by",89,"Stack","groupby","sortby","partition","groups",90,"params","_parameters","./Parameter",91,"Treemap","sticky","mode","treemap",92,"Unique","as",93,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",94,"aggregate","linkpath","formula","geopath","pie","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Unique","./Zip",95,"measure","resolve","collect","req","ctr","quickselect","v_new","v_old","_counts","../util/quickselect",96,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",97,"svgNamespace","utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20",98,"sentinel","COUNT","ASC",99,100,"swap","pivot"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};\n},{\"./core/View\":28,\"./dataflow/Datasource\":30,\"./dataflow/Graph\":31,\"./dataflow/Node\":32,\"./dataflow/changeset\":34,\"./parse/spec\":53,\"./scene/Builder\":66,\"./scene/GroupBuilder\":68,\"./transforms/index\":94,\"./util/config\":97,\"datalib\":16}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n},{}],5:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeroes = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n},{}],6:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],7:[function(require,module,exports){\nmodule.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};\n},{\"./csv\":6,\"./json\":8,\"./topojson\":9,\"./treejson\":10,\"./tsv\":11}],8:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":23}],9:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":8}],10:[function(require,module,exports){\nvar tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};\n},{\"../../tree\":21,\"./json\":8}],11:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\nvar util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};\n},{\"../util\":23}],13:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":23,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],14:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":23,\"./load\":13,\"./read\":15}],15:[function(require,module,exports){\nvar util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.infer = infer;\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;\n},{\"../util\":23,\"./formats\":7,\"./infer-types\":12}],16:[function(require,module,exports){\nvar dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n\n},{\"./bin\":4,\"./generate\":5,\"./import/load\":13,\"./import/loaders\":14,\"./import/read\":15,\"./log\":17,\"./stats\":18,\"./summary\":19,\"./template\":20,\"./truncate\":22,\"./util\":23}],17:[function(require,module,exports){\nvar LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;\n},{}],18:[function(require,module,exports){\nvar util = require('./util');\nvar stats = {};\n\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\nstats.skew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.entropy = function(counts) {\n  var i, p, s = 0, H = 0;\n  for (i=0; i<counts.length; ++i) {\n    s += counts[i];\n  }\n  if (s === 0) return 0;\n  for (i=0; i<counts.length; ++i) {\n    p = counts[i] / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\nstats.entropy.normalized = function(counts) {\n  var H = stats.entropy(counts);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  median = (vals.length % 2)\n   ? vals[half]\n   : (vals[half-1] + vals[half]) / 2.0;\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    median:   median,\n    stdev:    sd,\n    skew:     sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;\n},{\"./util\":23}],19:[function(require,module,exports){\nvar util = require('./util');\nvar stats = require('./stats');\n\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"skew:     \" + p.skew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}\n},{\"./stats\":18,\"./util\":23}],20:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./truncate\":22,\"./util\":23}],21:[function(require,module,exports){\nvar FIELDS = {\n  parent: \"parent\",\n  children: \"children\"\n};\n\nfunction toTable(root, childrenField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  parentField = parentField || FIELDS.parent;\n  var table = [];\n  \n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fields: FIELDS\n};\n},{}],22:[function(require,module,exports){\nmodule.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n},{}],23:[function(require,module,exports){\n(function (process){\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return !isNaN(parseFloat(obj)) && isFinite(obj);\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n}).call(this,require('_process'))\n\n},{\"_process\":3}],24:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":25}],25:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],26:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],27:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":31,\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../scene/GroupBuilder\":68,\"datalib\":16}],28:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../parse/streams\":54,\"../render/canvas/index\":58,\"../render/svg/index\":63,\"../scene/Transition\":71,\"../util/config\":97,\"../util/debug\":99,\"datalib\":16}],29:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":98,\"../util/debug\":99,\"./Node\":32,\"./changeset\":34}],30:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":98,\"../util/debug\":99,\"./Collector\":29,\"./Node\":32,\"./changeset\":34,\"./tuple\":35,\"datalib\":16}],31:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!arguments.length) name = dl.keys(this._signals);\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":98,\"../util/debug\":99,\"./Datasource\":30,\"./Signal\":33,\"./changeset\":34,\"datalib\":16,\"heap\":24}],32:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":98,\"datalib\":16}],33:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;\n},{\"./Node\":32,\"./changeset\":34}],34:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":98}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":98,\"datalib\":16}],36:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":37,\"./functions\":38,\"datalib\":16}],37:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],38:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":16}],39:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":36,\"./parser\":40}],40:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],41:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":72,\"../util/config\":97,\"datalib\":16}],42:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n},{\"../util/config\":97,\"./modify\":48,\"./transforms\":55,\"datalib\":16}],43:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":39,\"datalib\":16}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":97,\"../util/constants\":98,\"datalib\":16}],46:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":51,\"datalib\":16}],47:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":46}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":32,\"../dataflow/tuple\":35,\"../util/constants\":98,\"../util/debug\":99,\"datalib\":16}],49:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":16}],50:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":16}],51:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"../util/config\":97,\"datalib\":16}],52:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":98,\"./expr\":44}],53:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n},{\"../core/Model\":27,\"../core/View\":28,\"../parse/data\":42,\"../parse/interactors\":45,\"../parse/marks\":47,\"../parse/padding\":49,\"../parse/predicates\":50,\"../parse/signals\":52,\"datalib\":16}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? graph.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../util/constants\":98,\"./events\":43,\"./expr\":44,\"datalib\":16}],55:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":94,\"datalib\":16}],56:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":59,\"datalib\":16}],57:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26,\"../../util/config\":97,\"./marks\":59,\"datalib\":16}],58:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":56,\"./Renderer\":57}],59:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":26,\"../../util/bounds\":96,\"../../util/config\":97,\"./path\":60}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26}],61:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":16}],62:[function(require,module,exports){\nvar dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n},{\"./marks\":64,\"datalib\":16}],63:[function(require,module,exports){\narguments[4][58][0].apply(exports,arguments)\n},{\"./Handler\":61,\"./Renderer\":62,\"dup\":58}],64:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":97,\"datalib\":16}],65:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":32,\"../util/bounds\":96,\"../util/constants\":98,\"../util/debug\":99}],66:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../parse/data\":42,\"../util/constants\":98,\"../util/debug\":99,\"./Bounder\":65,\"./Encoder\":67,\"./Item\":69,\"datalib\":16}],67:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db, i, len, item;\n\n  db = graph.data().reduce(function(db, ds) { \n    return (db[ds.name()] = ds.values(), db);\n  }, {});\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    if(exit)   encode.call(this, exit,   item, input.trans), db, sg; \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg);\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, this._model.predicates());\n}\n\n// If update property set uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n  return Node.prototype.reevaluate.call(this, pulse) || (update ? update.reflow : false);\n};\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":32,\"../util/constants\":98,\"../util/debug\":99}],68:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":29,\"../dataflow/Node\":32,\"../parse/axes\":41,\"../util/constants\":98,\"../util/debug\":99,\"./Builder\":66,\"./Scale\":70,\"datalib\":16}],69:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],70:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../transforms/Aggregate\":73,\"../util/config\":97,\"../util/constants\":98,\"../util/debug\":99,\"datalib\":16}],71:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":35,\"../util/bounds\":96,\"../util/constants\":98}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n},{\"../dataflow/tuple\":35,\"../parse/mark\":46,\"../util/config\":97,\"datalib\":16}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":98,\"../util/debug\":99,\"./GroupBy\":84,\"./Transform\":90,\"./measures\":95,\"datalib\":16}],74:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":29,\"./Transform\":90}],75:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n},{\"../dataflow/tuple\":35,\"./Transform\":90,\"datalib\":16}],76:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":29,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":99,\"./Transform\":90}],77:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":98,\"../util/debug\":99,\"./GroupBy\":84,\"./Transform\":90}],78:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":34,\"../parse/expr\":44,\"../util/constants\":98,\"../util/debug\":99,\"./Transform\":90}],79:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":99,\"./Transform\":90}],80:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Transform\":90}],81:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":35,\"../parse/expr\":44,\"../util/constants\":98,\"../util/debug\":99,\"./Transform\":90}],82:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Transform\":90,\"datalib\":16}],83:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Geo\":82,\"./Transform\":90,\"datalib\":16}],84:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":98,\"./Transform\":90}],85:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":35,\"./Transform\":90}],86:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":44,\"../util/constants\":98,\"datalib\":16}],87:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":74,\"./Transform\":90,\"datalib\":16}],88:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":44,\"../util/debug\":99,\"./Transform\":90,\"datalib\":16}],89:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":74,\"./Transform\":90,\"datalib\":16}],90:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":32,\"../util/constants\":98,\"./Parameter\":86}],91:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":74,\"./Transform\":90,\"datalib\":16}],92:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":35,\"../util/debug\":99,\"./GroupBy\":84,\"./Transform\":90}],93:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":29,\"../util/debug\":99,\"./Transform\":90,\"datalib\":16}],94:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":73,\"./Bin\":75,\"./Cross\":76,\"./Facet\":77,\"./Filter\":78,\"./Fold\":79,\"./Force\":80,\"./Formula\":81,\"./Geo\":82,\"./GeoPath\":83,\"./LinkPath\":85,\"./Pie\":87,\"./Sort\":88,\"./Stack\":89,\"./Treemap\":91,\"./Unique\":92,\"./Zip\":93}],95:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":35,\"../util/constants\":98,\"../util/quickselect\":100,\"datalib\":16}],96:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":26,\"../render/canvas/path\":60,\"./config\":97}],97:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],98:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],99:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":97}],100:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"datalib\":16}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeroes = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n","module.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n","var tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n","var util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.infer = infer;\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;","var dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n","var LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;","var util = require('./util');\nvar stats = {};\n\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\nstats.skew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.entropy = function(counts) {\n  var i, p, s = 0, H = 0;\n  for (i=0; i<counts.length; ++i) {\n    s += counts[i];\n  }\n  if (s === 0) return 0;\n  for (i=0; i<counts.length; ++i) {\n    p = counts[i] / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\nstats.entropy.normalized = function(counts) {\n  var H = stats.entropy(counts);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  median = (vals.length % 2)\n   ? vals[half]\n   : (vals[half-1] + vals[half]) / 2.0;\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    median:   median,\n    stdev:    sd,\n    skew:     sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar stats = require('./stats');\n\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"skew:     \" + p.skew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n","var FIELDS = {\n  parent: \"parent\",\n  children: \"children\"\n};\n\nfunction toTable(root, childrenField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  parentField = parentField || FIELDS.parent;\n  var table = [];\n  \n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fields: FIELDS\n};","module.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","var u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return !isNaN(parseFloat(obj)) && isFinite(obj);\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!arguments.length) name = dl.keys(this._signals);\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? graph.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db, i, len, item;\n\n  db = graph.data().reduce(function(db, ds) { \n    return (db[ds.name()] = ds.values(), db);\n  }, {});\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    if(exit)   encode.call(this, exit,   item, input.trans), db, sg; \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg);\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, this._model.predicates());\n}\n\n// If update property set uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n  return Node.prototype.reevaluate.call(this, pulse) || (update ? update.reflow : false);\n};\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};","var dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};"],"sourceRoot":"/source/"}