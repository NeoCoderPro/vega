{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/bin.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/csv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/formats/tsv.js","node_modules/datalib/src/import/infer-types.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/loaders.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/index.js","node_modules/datalib/src/log.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/summary.js","node_modules/datalib/src/template.js","node_modules/datalib/src/tree.js","node_modules/datalib/src/truncate.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg-headless/Renderer.js","src/render/svg-headless/index.js","src/render/svg-headless/svg.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/GroupBy.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js","src/util/quickselect.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./core/View","./dataflow/Datasource","./dataflow/Graph","./dataflow/Node","./dataflow/changeset","./parse/spec","./scene/Builder","./scene/GroupBuilder","./transforms/index","./util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"bisectLeft","x","lo","hi","mid","cmp","opt","precision","v","eps","maxb","maxbins","base","div","mins","minstep","logb","Math","log","level","ceil","min","max","span","step","pow","round","nbins","steps","floor","start","stop","unit",5,"gen","repeat","val","Array","zeros","range","arguments","Infinity","j","random","uniform","delta","samples","map","integer","b","undefined","normal","mean","stdev","next","rds","c","y","sqrt",6,"d3","data","format","d","csv","toString",7,"json","tsv","topojson","treejson","./csv","./json","./topojson","./treejson","./tsv",8,"isObject","isBuffer","JSON","property","accessor","../../util",9,"obj","feature","objects","features","mesh",10,"tree","toTable","children","../../tree",11,12,"tests","bool","isBoolean","date","isNaN","Date","num","isDate","values","types","type","test","splice","../util",13,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","idx","lastIndexOf","load","callback","error","err","slice","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",14,"read","keys","formats","reduce","out","isString","isFunction","extend","./load","./read",15,"cols","parsers","clen","infer","PARSERS","number","boolean","./formats","./infer-types",16,"dl","bin","summary","template","truncate","msg","LOG","silent","ERR","./bin","./generate","./import/load","./import/loaders","./import/read","./log","./stats","./summary","./template","./truncate","./util",17,"prepare","now","join","console",18,"stats","unique","results","isArray","counts","count","distinct","nulls","median","filter","isNotNull","sort","half","variance","M2","modeskew","avg","med","std","minmax","minIndex","maxIndex","dot","sum","rank","mu","comparator","tie","p","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","abs","m","R","M","entropy","H","N","LN2","normalized","mutual","z","px","py","I","profile","sd","h2","iqr","vals",19,"printSummary","profiles","str","forEach","field","printCategoricalProfile","printQuantitativeProfile","list","top","concat","fields",20,"text","src","source","Function","bind","context","variable","index","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","stringCast","filters","split","prop","shift","trim","pidx","args","indexOf","template_format","time","template_escapes","pattern","fmt","format_map","clearFormatCache","'","\\","\r","\n"," "," ",21,"root","childrenField","parentField","visit","node","parent","table","FIELDS",22,"truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","pos","word","ellipsis","u_truncateOnWord","l1","l2",23,"util_escape_str","escape_str_re","stderr","Object","prototype","isNumber","parseFloat","isFinite","Buffer","array","stringify","identity","duplicate","equal","k","toMap","keystr","apply","mutator","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","String","string","searchString","_process","buffer",24,"./lib/heap",25,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","result","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","clear","empty","size","clone","heap","toArray","insert","front","has","copy","factory",26,"bounds","union","x1","Number","MAX_VALUE","y1","x2","y2","set","add","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",27,"Model","_defs","_predicates","_scene","graph","_node","_builder","predicates","proto","defs","pipeline","predicate","renderer","disconnect","marks","connect","fire","cs","create","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",28,"parseStreams","canvas","svg","svgx","Transition","debug","el","model","_el","_model","_width","__width","_height","__height","_autopad","_padding","left","bottom","right","_viewport","_renderer","_handler","_io","initialize","parentNode","_strict","padding","pad","resize","autopad","inset","autopadInset","update","viewport","_build","render","prevHandler","h","select","remove","append","attr","style","Renderer","Handler","handlers","handler","trans","duration","ease","reflow","_renderNode","router","evaluate","input","items","ds","revises","finalize","last","../parse/streams","../render/canvas/index","../render/svg-headless/index","../render/svg/index","../scene/Transition","../util/config","../util/debug",29,"Collector","init","_data","collector","mod","rem","ids","_id","../util/constants","./Node","./changeset",30,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","tuple","prev","ingest","where","func","idMap","unshift","output","listener","dest","_srcMap","derive","listeners","./Collector","./tuple",31,"_stamp","_rank","_signals","doNotPropagate","signal","forEachNode","branch","Signal","signalValues","sg","value","signalRef","ref","schedule","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","signals","SIGNALS","reevaluate","run","./Datasource","./Signal",32,"REEVAL","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","q","cur","foundSending","reeval",33,"_value",34,"reset_prev",35,"datum","tuple_id","reset",36,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","raw","Identifier","id","hasOwnProperty","Program","MemberExpression","computed","object","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","key","ExpressionStatement","expression","./constants","./functions",37,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",38,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","atan2","tan","datetime","day","year","month","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseInt","upper","lower","substring","if",39,"parser","./codegen","./parser",40,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","options","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",41,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",42,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",43,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","stream","startRule",44,"eval","../expression",45,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",46,"parseProperties","parseMark","mark","props","delay","./properties",47,"./mark",48,"signalName","db","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",49,50,"parseSignal","parseOperands","decl","arg","pred","parseComparator","ops","parseLogical","parseIn","=","==","!=",">",">=","<","<=","and","&&","or","||","in",51,"compile","names","vars","valueRef","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","isColor","colorRef","grp","GROUP_VARS","invert","band","mult","xx","color","yy","zz","mark.group.width","mark.group.height",52,"dep","./expr",53,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",54,"changset","selector","START","MIDDLE","END","view","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",55,"tx","../transforms/index",56,"eventName","_active","_handlers","_canvas","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","getContext","gx","gy","marktype","picker","./marks",57,"scaleCanvas","ctx","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","setAttribute","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","setTransform","element","pendingImages","bb2","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",58,"./Handler","./Renderer",59,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",60,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","th","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",61,"SVGBuilder","./svg",62,63,"tag","close","escape_text","escape_font","group_bg","styl","class","clip_id","clipping","arc_path","area_path_h","area_path_v","line_path","symbol_path","xlink:href","text-anchor","cssClass","cls","xw","yh","styleProps","styles","_gid","_text","head","foot","svgNamespace","buildDefs","all","dgrad","dclip","stop-color","meta","MARKS","sty","nest","center",64,"svgHandler","__data__","_svg","dom","removeEventListener",65,"updateDefs","each","grd","cr","renderItems","nested",66,"dup",67,"setProperty","removeProperty","area_path","setAttributeNS","removeAttribute","textContent","drawMark","evts","grps","childNodes","notG","mark_id",68,"Bounder","_mark","GROUP","../util/bounds",69,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","Encoder","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",70,"enc","EMPTY",71,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",72,"hasPropertySet","cousin","iidx","midx","touch",73,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","singleton","stat","group_by","MIN","MAX","order","DESC","SINGLETON","domainMin","domainMax","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",74,"updates","elapsed","curr","calcBounds","skip","interp","timer",75,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","extent","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",76,"GroupBy","Transform","addParameters","var","varp","stdevp","_fieldsDef","_Aggregators","_singleton","meas","aggs","measures","_reset","_keys","_gb","_new_cell","agg","cell","_add","_cell","flg","MOD_CELL","_rem","get","_cells","./GroupBy","./Transform","./measures",77,"BatchTransform","batchTransform",78,"Bin","default",79,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",80,"Facet","_new_tuple","_mod","ADD_CELL",81,"Filter","_skip","../parse/expr",82,"Fold","rst","get_tuple","accessors","dlen","fold",83,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",84,"Formula",85,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",86,"GeoPath","geojson","./Geo",87,"gb","groupBy",88,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",89,"Parameter","_type","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","isExpr",90,"Pie","ones","./BatchTransform",91,"Sort","by",92,"Stack","groupby","sortby","partition","groups",93,"params","_parameters","./Parameter",94,"Treemap","sticky","mode","treemap",95,"Unique","as",96,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",97,"aggregate","linkpath","formula","geopath","pie","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Unique","./Zip",98,"measure","resolve","collect","req","ctr","quickselect","v_new","v_old","_counts","../util/quickselect",99,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",100,"utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20",101,"sentinel","COUNT","ASC",102,103,"swap","pivot"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};\n},{\"./core/View\":28,\"./dataflow/Datasource\":30,\"./dataflow/Graph\":31,\"./dataflow/Node\":32,\"./dataflow/changeset\":34,\"./parse/spec\":53,\"./scene/Builder\":69,\"./scene/GroupBuilder\":71,\"./transforms/index\":97,\"./util/config\":100,\"datalib\":16}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n},{}],5:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};\n},{}],6:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],7:[function(require,module,exports){\nmodule.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};\n},{\"./csv\":6,\"./json\":8,\"./topojson\":9,\"./treejson\":10,\"./tsv\":11}],8:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data)\n    ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":23}],9:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":8}],10:[function(require,module,exports){\nvar tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};\n},{\"../../tree\":21,\"./json\":8}],11:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\nvar util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};\n},{\"../util\":23}],13:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":23,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],14:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":23,\"./load\":13,\"./read\":15}],15:[function(require,module,exports){\nvar util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.infer = infer;\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;\n},{\"../util\":23,\"./formats\":7,\"./infer-types\":12}],16:[function(require,module,exports){\nvar dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n\n},{\"./bin\":4,\"./generate\":5,\"./import/load\":13,\"./import/loaders\":14,\"./import/read\":15,\"./log\":17,\"./stats\":18,\"./summary\":19,\"./template\":20,\"./truncate\":22,\"./util\":23}],17:[function(require,module,exports){\nvar LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;\n},{}],18:[function(require,module,exports){\nvar util = require('./util');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Count the number of non-null values.\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Count the number of null or undefined values.\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of values.\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum and maximum of an array of values.\n// Output: '{min: x, max: y}'\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\n// Find the integer index of the first-observed minimum value.\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\n// Find the integer index of the first-observed maximum value.\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error(\"Array lengths must match.\");\n    }\n    for (i=0; i<values.length; ++i) {\n      sum += values[i] * a[i];\n    }\n  } else {  \n    for (i=0; i<values.length; ++i) {\n      sum += a(values[i]) * b(values[i]);\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  var a = values.map(function(v, i) {\n      return {\n        idx: i,\n        val: (f ? f(v) : v)\n      };\n    })\n    .sort(util.comparator(\"val\"));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(b) : a,\n  a = fn ? values.map(a) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, a) : stats.rank(values),\n      rb = b ? stats.rank(values, b) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(a) : values,\n      Y = b ? values.map(b) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      n = values.length, s = 0, d, i;\n\n  if (e === 2 || e === undefined) {\n    for (i=0; i<n; ++i) {\n      d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n      s += d*d;\n    }\n    return Math.sqrt(s); \n  } else {\n    for (i=0; i<n; ++i) {\n      d = Math.abs(f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]));\n      s += Math.pow(d, e);\n    }\n    return Math.pow(s, 1/e);\n  }\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  var i, p, s = 0, H = 0, N = counts.length;\n  for (i=0; i<N; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<N; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\n// Compute the normalized Shannon entropy (log base 2) of an array of counts.\nstats.entropy.normalized = function(counts, f) {\n  var H = stats.entropy(counts, f);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\n// Compute the mutual information between two discrete variables.\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.entropy.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(a) : values,\n      y = counts ? values.map(b) : a,\n      z = counts ? values.map(counts) : b;\n\n  var px = {},\n\t    py = {},\n\t    i, xx, yy, zz, s = 0, t, N = z.length, p, I = 0;\n\n\tfor (i=0; i<N; ++i) {\n\t  px[x[i]] = 0;\n\t  py[y[i]] = 0;\n  }\n\n\tfor (i=0; i<N; ++i) {\n\t\tpx[x[i]] += z[i];\n\t\tpy[y[i]] += z[i];\n\t\ts += z[i];\n\t}\n\n\tt = 1 / (s * Math.LN2);\n\tfor (i=0; i<N; ++i) {\n\t\tif (z[i] === 0) continue;\n\t\tp = (s * z[i]) / (px[x[i]] * py[y[i]]);\n\t\tI += z[i] * t * Math.log(p);\n\t}\n\n\treturn I;\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      iqr = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half, h, h2;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median and iqr\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  if (vals.length % 2) {\n    median = vals[half];\n    h2 = Math.floor((half+1)/2);\n    if ((half+1) % 2) {\n      iqr = [vals[h2], vals[half + h2]];\n    } else {\n      iqr = [\n        (vals[h2-1]      + vals[h2])      / 2.0,\n        (vals[half+h2-1] + vals[half+h2]) / 2.0\n      ];\n    }\n  } else {\n    median = (vals[half-1] + vals[half]) / 2.0;\n    h2 = Math.floor(half/2);\n    if (vals.length % 4) {\n      iqr = [\n        (0.75*vals[h2]        + 0.25*vals[h2+1]),\n        (0.25*vals[half+h2-1] + 0.75*vals[half+h2])\n      ];\n    } else {\n      iqr = [\n        (0.25*vals[h2-1]      + 0.75*vals[h2]),\n        (0.75*vals[half+h2-1] + 0.25*vals[half+h2])\n      ];\n    }\n  }\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   median,\n    iqr:      iqr,\n    modeskew: sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;\n},{\"./generate\":5,\"./util\":23}],19:[function(require,module,exports){\nvar util = require('./util');\nvar stats = require('./stats');\n\n// Compute profiles for all variables in a data set.\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"modeskew: \" + p.modeskew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}\n},{\"./stats\":18,\"./util\":23}],20:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./truncate\":22,\"./util\":23}],21:[function(require,module,exports){\nvar FIELDS = {\n  parent: \"parent\",\n  children: \"children\"\n};\n\nfunction toTable(root, childrenField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  parentField = parentField || FIELDS.parent;\n  var table = [];\n  \n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fields: FIELDS\n};\n},{}],22:[function(require,module,exports){\nmodule.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n},{}],23:[function(require,module,exports){\n(function (process){\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return !isNaN(parseFloat(obj)) && isFinite(obj);\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\nu.isBuffer = function(obj) {\n  var Buffer = require('buffer').Buffer;\n  return (Buffer && Buffer.isBuffer) ? Buffer.isBuffer(obj) : false;\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n}).call(this,require('_process'))\n\n},{\"_process\":3,\"buffer\":2}],24:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":25}],25:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],26:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],27:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":31,\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../scene/GroupBuilder\":71,\"datalib\":16}],28:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    svgx = require('../render/svg-headless/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (type === \"canvas\") type = canvas;\n  else if (type === \"svg\") type = svg;\n  else if (type === \"svg-headless\") type = svgx;\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n  }\n\n  if (el) {\n    // clear pre-existing container\n    d3.select(el).select(\"div.vega\").remove();\n    \n    // add div container\n    this._el = el = d3.select(el)\n      .append(\"div\")\n      .attr(\"class\", \"vega\")\n      .style(\"position\", \"relative\")\n      .node();\n    if (v._viewport) {\n      d3.select(el)\n        .style(\"width\",  (v._viewport[0] || w)+\"px\")\n        .style(\"height\", (v._viewport[1] || h)+\"px\")\n        .style(\"overflow\", \"auto\");\n    }\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  if (el) {\n    // input handler\n    prevHandler = v._handler;\n    v._handler = new this._io.Handler()\n      .initialize(el, pad, v)\n      .model(v._model);\n\n    if (prevHandler) {\n      prevHandler.handlers().forEach(function(h) {\n        v._handler.on(h.type, h.handler);\n      });\n    } else {\n      // Register event listeners for signal stream definitions.\n      parseStreams(this);\n    }\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../parse/streams\":54,\"../render/canvas/index\":58,\"../render/svg-headless/index\":62,\"../render/svg/index\":66,\"../scene/Transition\":74,\"../util/config\":100,\"../util/debug\":102,\"datalib\":16}],29:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":101,\"../util/debug\":102,\"./Node\":32,\"./changeset\":34}],30:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":101,\"../util/debug\":102,\"./Collector\":29,\"./Node\":32,\"./changeset\":34,\"./tuple\":35,\"datalib\":16}],31:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  if(arguments.length === 1) return this._data[name];\n  return (this._data[name] = new Datasource(this, name, facet)\n    .pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":101,\"../util/debug\":102,\"./Datasource\":30,\"./Signal\":33,\"./changeset\":34,\"datalib\":16,\"heap\":24}],32:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":101,\"datalib\":16}],33:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;\n},{\"./Node\":32,\"./changeset\":34}],34:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":101}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":101,\"datalib\":16}],36:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":37,\"./functions\":38,\"datalib\":16}],37:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],38:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":16}],39:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":36,\"./parser\":40}],40:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],41:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":75,\"../util/config\":100,\"datalib\":16}],42:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n\n},{\"../util/config\":100,\"./modify\":48,\"./transforms\":55,\"datalib\":16}],43:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":39,\"datalib\":16}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":100,\"../util/constants\":101,\"datalib\":16}],46:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":51,\"datalib\":16}],47:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":46}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":32,\"../dataflow/tuple\":35,\"../util/constants\":101,\"../util/debug\":102,\"datalib\":16}],49:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":16}],50:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+dl.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":16}],51:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: dl.keys(deps.signals),\n      scales: dl.keys(deps.scales),\n      data: dl.keys(deps.data)\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+dl.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n  var isColor = name===\"fill\" || name===\"stroke\";\n  var signals = [];\n\n  if (isColor) {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, signalRef = null;\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = dl.field(ref.signal);\n    val = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  // get field reference for enclosing group\n  if (ref.group != null) {\n    var grp = \"group.datum\";\n    if (dl.isString(ref.group)) {\n      grp = GROUP_VARS[ref.group]\n        ? \"group.\" + ref.group\n        : \"group.datum[\"+dl.field(ref.group).map(dl.str).join(\"][\")+\"]\";\n    }\n  }\n\n  // get data field value\n  if (ref.field != null) {\n    if (dl.isString(ref.field)) {\n      val = \"item.datum[\"+dl.field(ref.field).map(dl.str).join(\"][\")+\"]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n    } else if(ref.field.signal) {\n      signalRef = dl.field(ref.field.signal);\n      val = \"item.datum[signals[\"+signalRef.map(dl.str).join(\"][\")+\"]]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n      signals.push(signalRef.shift());\n    } else {\n      val = \"this.util.accessor(group.datum[\"\n          + dl.field(ref.field.group).map(dl.str).join(\"][\")\n          + \"])(item.datum)\";\n    }\n  } else if (ref.group != null) {\n    val = grp;\n  }\n\n  if (ref.scale != null) {\n    var scale = null;\n    if(dl.isString(ref.scale)) {\n      scale = dl.str(ref.scale);\n    } else if(ref.scale.signal) {\n      signalRef = dl.field(ref.scale.signal);\n      scale = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\";\n      signals.push(signalRef.shift());\n    } else {\n      scale = (ref.scale.group ? \"group\" : \"item\")\n        + \".datum[\" + dl.str(ref.scale.group || ref.scale.field) + \"]\";\n    }\n\n    scale = \"group.scale(\" + scale + \")\";\n    if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"../util/config\":100,\"datalib\":16}],52:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":101,\"./expr\":44}],53:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n\n},{\"../core/Model\":27,\"../core/View\":28,\"../parse/data\":42,\"../parse/interactors\":45,\"../parse/marks\":47,\"../parse/padding\":49,\"../parse/predicates\":50,\"../parse/signals\":52,\"datalib\":16}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../util/constants\":101,\"./events\":43,\"./expr\":44,\"datalib\":16}],55:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":97,\"datalib\":16}],56:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":59,\"datalib\":16}],57:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26,\"../../util/config\":100,\"./marks\":59,\"datalib\":16}],58:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":56,\"./Renderer\":57}],59:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":26,\"../../util/bounds\":99,\"../../util/config\":100,\"./path\":60}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26}],61:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":100,\"./svg\":63,\"datalib\":16}],62:[function(require,module,exports){\nmodule.exports = {\n  Renderer: require('./Renderer')\n};\n\n},{\"./Renderer\":61}],63:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":100,\"datalib\":16}],64:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":16}],65:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":67,\"datalib\":16}],66:[function(require,module,exports){\narguments[4][58][0].apply(exports,arguments)\n},{\"./Handler\":64,\"./Renderer\":65,\"dup\":58}],67:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":100,\"datalib\":16}],68:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":32,\"../util/bounds\":99,\"../util/constants\":101,\"../util/debug\":102}],69:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../parse/data\":42,\"../util/constants\":101,\"../util/debug\":102,\"./Bounder\":68,\"./Encoder\":70,\"./Item\":72,\"datalib\":16}],70:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      i, len, item;\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans);\n    if(exit)   encode.call(this, exit,   item, input.trans); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans);\n    if(update) encode.call(this, update, item, input.trans);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, stamp) {\n  var model = this._model,\n      enc = prop.encode,\n      sg = this._graph.signalValues(prop.signals||[]),\n      db = (prop.data||[]).reduce(function(db, ds) { \n        return db[ds] = model.data(ds).values(), db;\n      }, {});\n\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, model.predicates());\n}\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":32,\"../util/constants\":101,\"../util/debug\":102}],71:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":29,\"../dataflow/Node\":32,\"../parse/axes\":41,\"../util/constants\":101,\"../util/debug\":102,\"./Builder\":69,\"./Scale\":73,\"datalib\":16}],72:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],73:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.group) return dl.accessor(f.group)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../transforms/Aggregate\":76,\"../util/config\":100,\"../util/constants\":101,\"../util/debug\":102,\"datalib\":16}],74:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":35,\"../util/bounds\":99,\"../util/constants\":101}],75:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {group: \"mark.group.height\", mult: -sign}\n      : {group: \"mark.group.width\", mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"../parse/mark\":46,\"../util/config\":100,\"datalib\":16}],76:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":101,\"../util/debug\":102,\"./GroupBy\":87,\"./Transform\":93,\"./measures\":98,\"datalib\":16}],77:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":29,\"./Transform\":93}],78:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n},{\"../dataflow/tuple\":35,\"./Transform\":93,\"datalib\":16}],79:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":29,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":102,\"./Transform\":93}],80:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":101,\"../util/debug\":102,\"./GroupBy\":87,\"./Transform\":93}],81:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":34,\"../parse/expr\":44,\"../util/constants\":101,\"../util/debug\":102,\"./Transform\":93}],82:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":102,\"./Transform\":93}],83:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Transform\":93}],84:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":35,\"../parse/expr\":44,\"../util/constants\":101,\"../util/debug\":102,\"./Transform\":93}],85:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Transform\":93,\"datalib\":16}],86:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./Geo\":85,\"./Transform\":93,\"datalib\":16}],87:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":101,\"./Transform\":93}],88:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":35,\"./Transform\":93}],89:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":44,\"../util/constants\":101,\"datalib\":16}],90:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":77,\"./Transform\":93,\"datalib\":16}],91:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":44,\"../util/debug\":102,\"./Transform\":93,\"datalib\":16}],92:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":77,\"./Transform\":93,\"datalib\":16}],93:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":32,\"../util/constants\":101,\"./Parameter\":89}],94:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"./BatchTransform\":77,\"./Transform\":93,\"datalib\":16}],95:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":35,\"../util/debug\":102,\"./GroupBy\":87,\"./Transform\":93}],96:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":29,\"../util/debug\":102,\"./Transform\":93,\"datalib\":16}],97:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":76,\"./Bin\":78,\"./Cross\":79,\"./Facet\":80,\"./Filter\":81,\"./Fold\":82,\"./Force\":83,\"./Formula\":84,\"./Geo\":85,\"./GeoPath\":86,\"./LinkPath\":88,\"./Pie\":90,\"./Sort\":91,\"./Stack\":92,\"./Treemap\":94,\"./Unique\":95,\"./Zip\":96}],98:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":35,\"../util/constants\":101,\"../util/quickselect\":103,\"datalib\":16}],99:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":26,\"../render/canvas/path\":60,\"./config\":100}],100:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],101:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],102:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":100}],103:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"datalib\":16}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeros(n).map(f); };\n\treturn f;\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n","module.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data)\n    ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n","var tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n","var util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.infer = infer;\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;","var dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n","var LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;","var util = require('./util');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Count the number of non-null values.\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Count the number of null or undefined values.\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of values.\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum and maximum of an array of values.\n// Output: '{min: x, max: y}'\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\n// Find the integer index of the first-observed minimum value.\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\n// Find the integer index of the first-observed maximum value.\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error(\"Array lengths must match.\");\n    }\n    for (i=0; i<values.length; ++i) {\n      sum += values[i] * a[i];\n    }\n  } else {  \n    for (i=0; i<values.length; ++i) {\n      sum += a(values[i]) * b(values[i]);\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  var a = values.map(function(v, i) {\n      return {\n        idx: i,\n        val: (f ? f(v) : v)\n      };\n    })\n    .sort(util.comparator(\"val\"));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(b) : a,\n  a = fn ? values.map(a) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, a) : stats.rank(values),\n      rb = b ? stats.rank(values, b) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(a) : values,\n      Y = b ? values.map(b) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      n = values.length, s = 0, d, i;\n\n  if (e === 2 || e === undefined) {\n    for (i=0; i<n; ++i) {\n      d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n      s += d*d;\n    }\n    return Math.sqrt(s); \n  } else {\n    for (i=0; i<n; ++i) {\n      d = Math.abs(f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]));\n      s += Math.pow(d, e);\n    }\n    return Math.pow(s, 1/e);\n  }\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  var i, p, s = 0, H = 0, N = counts.length;\n  for (i=0; i<N; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<N; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\n// Compute the normalized Shannon entropy (log base 2) of an array of counts.\nstats.entropy.normalized = function(counts, f) {\n  var H = stats.entropy(counts, f);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\n// Compute the mutual information between two discrete variables.\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.entropy.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(a) : values,\n      y = counts ? values.map(b) : a,\n      z = counts ? values.map(counts) : b;\n\n  var px = {},\n\t    py = {},\n\t    i, xx, yy, zz, s = 0, t, N = z.length, p, I = 0;\n\n\tfor (i=0; i<N; ++i) {\n\t  px[x[i]] = 0;\n\t  py[y[i]] = 0;\n  }\n\n\tfor (i=0; i<N; ++i) {\n\t\tpx[x[i]] += z[i];\n\t\tpy[y[i]] += z[i];\n\t\ts += z[i];\n\t}\n\n\tt = 1 / (s * Math.LN2);\n\tfor (i=0; i<N; ++i) {\n\t\tif (z[i] === 0) continue;\n\t\tp = (s * z[i]) / (px[x[i]] * py[y[i]]);\n\t\tI += z[i] * t * Math.log(p);\n\t}\n\n\treturn I;\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      iqr = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half, h, h2;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median and iqr\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  if (vals.length % 2) {\n    median = vals[half];\n    h2 = Math.floor((half+1)/2);\n    if ((half+1) % 2) {\n      iqr = [vals[h2], vals[half + h2]];\n    } else {\n      iqr = [\n        (vals[h2-1]      + vals[h2])      / 2.0,\n        (vals[half+h2-1] + vals[half+h2]) / 2.0\n      ];\n    }\n  } else {\n    median = (vals[half-1] + vals[half]) / 2.0;\n    h2 = Math.floor(half/2);\n    if (vals.length % 4) {\n      iqr = [\n        (0.75*vals[h2]        + 0.25*vals[h2+1]),\n        (0.25*vals[half+h2-1] + 0.75*vals[half+h2])\n      ];\n    } else {\n      iqr = [\n        (0.25*vals[h2-1]      + 0.75*vals[h2]),\n        (0.75*vals[half+h2-1] + 0.25*vals[half+h2])\n      ];\n    }\n  }\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   median,\n    iqr:      iqr,\n    modeskew: sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar stats = require('./stats');\n\n// Compute profiles for all variables in a data set.\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"modeskew: \" + p.modeskew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n","var FIELDS = {\n  parent: \"parent\",\n  children: \"children\"\n};\n\nfunction toTable(root, childrenField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  parentField = parentField || FIELDS.parent;\n  var table = [];\n  \n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fields: FIELDS\n};","module.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","var u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return !isNaN(parseFloat(obj)) && isFinite(obj);\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\nu.isBuffer = function(obj) {\n  var Buffer = require('buffer').Buffer;\n  return (Buffer && Buffer.isBuffer) ? Buffer.isBuffer(obj) : false;\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    svgx = require('../render/svg-headless/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (type === \"canvas\") type = canvas;\n  else if (type === \"svg\") type = svg;\n  else if (type === \"svg-headless\") type = svgx;\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n  }\n\n  if (el) {\n    // clear pre-existing container\n    d3.select(el).select(\"div.vega\").remove();\n    \n    // add div container\n    this._el = el = d3.select(el)\n      .append(\"div\")\n      .attr(\"class\", \"vega\")\n      .style(\"position\", \"relative\")\n      .node();\n    if (v._viewport) {\n      d3.select(el)\n        .style(\"width\",  (v._viewport[0] || w)+\"px\")\n        .style(\"height\", (v._viewport[1] || h)+\"px\")\n        .style(\"overflow\", \"auto\");\n    }\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  if (el) {\n    // input handler\n    prevHandler = v._handler;\n    v._handler = new this._io.Handler()\n      .initialize(el, pad, v)\n      .model(v._model);\n\n    if (prevHandler) {\n      prevHandler.handlers().forEach(function(h) {\n        v._handler.on(h.type, h.handler);\n      });\n    } else {\n      // Register event listeners for signal stream definitions.\n      parseStreams(this);\n    }\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  if(arguments.length === 1) return this._data[name];\n  return (this._data[name] = new Datasource(this, name, facet)\n    .pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+dl.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: dl.keys(deps.signals),\n      scales: dl.keys(deps.scales),\n      data: dl.keys(deps.data)\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+dl.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n  var isColor = name===\"fill\" || name===\"stroke\";\n  var signals = [];\n\n  if (isColor) {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, signalRef = null;\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = dl.field(ref.signal);\n    val = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  // get field reference for enclosing group\n  if (ref.group != null) {\n    var grp = \"group.datum\";\n    if (dl.isString(ref.group)) {\n      grp = GROUP_VARS[ref.group]\n        ? \"group.\" + ref.group\n        : \"group.datum[\"+dl.field(ref.group).map(dl.str).join(\"][\")+\"]\";\n    }\n  }\n\n  // get data field value\n  if (ref.field != null) {\n    if (dl.isString(ref.field)) {\n      val = \"item.datum[\"+dl.field(ref.field).map(dl.str).join(\"][\")+\"]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n    } else if(ref.field.signal) {\n      signalRef = dl.field(ref.field.signal);\n      val = \"item.datum[signals[\"+signalRef.map(dl.str).join(\"][\")+\"]]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n      signals.push(signalRef.shift());\n    } else {\n      val = \"this.util.accessor(group.datum[\"\n          + dl.field(ref.field.group).map(dl.str).join(\"][\")\n          + \"])(item.datum)\";\n    }\n  } else if (ref.group != null) {\n    val = grp;\n  }\n\n  if (ref.scale != null) {\n    var scale = null;\n    if(dl.isString(ref.scale)) {\n      scale = dl.str(ref.scale);\n    } else if(ref.scale.signal) {\n      signalRef = dl.field(ref.scale.signal);\n      scale = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\";\n      signals.push(signalRef.shift());\n    } else {\n      scale = (ref.scale.group ? \"group\" : \"item\")\n        + \".datum[\" + dl.str(ref.scale.group || ref.scale.field) + \"]\";\n    }\n\n    scale = \"group.scale(\" + scale + \")\";\n    if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n","module.exports = {\n  Renderer: require('./Renderer')\n};\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      i, len, item;\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans);\n    if(exit)   encode.call(this, exit,   item, input.trans); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans);\n    if(update) encode.call(this, update, item, input.trans);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, stamp) {\n  var model = this._model,\n      enc = prop.encode,\n      sg = this._graph.signalValues(prop.signals||[]),\n      db = (prop.data||[]).reduce(function(db, ds) { \n        return db[ds] = model.data(ds).values(), db;\n      }, {});\n\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, model.predicates());\n}\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.group) return dl.accessor(f.group)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {group: \"mark.group.height\", mult: -sign}\n      : {group: \"mark.group.width\", mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};","var dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};"],"sourceRoot":"/source/"}