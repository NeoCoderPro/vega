{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/aggregate/aggregator.js","node_modules/datalib/src/aggregate/collector.js","node_modules/datalib/src/aggregate/groupby.js","node_modules/datalib/src/aggregate/measures.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/bins/histogram.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/dsv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/import/readers.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/index.js","node_modules/datalib/src/print.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/template.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/HeadlessView.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg-headless/Renderer.js","src/render/svg-headless/index.js","src/render/svg-headless/svg.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Facetor.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Zip.js","src/transforms/index.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./src/core/View","./src/dataflow/Datasource","./src/dataflow/Graph","./src/dataflow/Node","./src/dataflow/changeset","./src/parse/spec","./src/scene/Builder","./src/scene/GroupBuilder","./src/transforms/index","./src/util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"Aggregator","_cells","_aggr","_stream","summarize_args","fields","isArray","ops","array","Measures","Collector","Flags","ADD_CELL","MOD_CELL","proto","prototype","stream","v","key","_key","$","groupby","dims","_dims","map","d","isString","get","isFunction","summarize","m","j","op","as","aggr","measures","create","_assign","count","*","object","value","accessors","clear","_keys","x","k","Array","keystr","keys","_cell","_newcell","cell","num","tuple","_newtuple","flag","aggs","collect","data","_ingest","identity","add","rem","result","set","changes","mod","execute","input","insert","remove","../util","./collector","./measures",5,"_add","_rem","stats","REM","values","lut","toMap","hasOwnProperty","_f","extent","_ext","index","min","max","quartile","_q","q1","q2","q3","../stats",6,"args","reduce","arguments","concat","./aggregator",7,"measure","base","out","extend","init","idx","resolve","agg","helper","types","req","forEach","str","vals","sort","b","accessor","mutator","all","ctr","slice","Function","assign","distinct","isValid","v_new","v_old","undefined","missing","valid","sum","mean","average","variance","variancep","stdev","stdevp","median","argmin","argmax","modeskew",8,"bins","opt","step","level","minstep","precision","eps","maxb","maxbins","logb","Math","log","div","span","steps","bisect","ceil","pow","round","floor","start","stop","unit","lo","hi","mid","cmp","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","raw","../time-units",9,"$bin","options","$func","histogram","numerical","categorical","type","qtype","ext","h","gen","range","isFinite","unique","c","counts","comparator","integer","number","../generate","../import/type","./bins",10,"repeat","val","zeros","Infinity","random","uniform","samples","normal","next","rds","y","sqrt",11,"dsv","format","header","join","delimiter","d3","delim","fmt","../../util",12,"json","topojson","treejson","csv","tsv","./dsv","./json","./topojson","./treejson",13,"isObject","isBuffer","JSON","property",14,"obj","feature","objects","features","mesh",15,"toTable","root","childrenField","visit","node","table","children",16,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","test","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","lastIndexOf","load","callback","error","err","indexOf","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","filename","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",17,"read","formats","cols","parsers","clen","inferAll","duplicate","annotation","./formats","./type",18,"./load","./read",19,"TYPES","isDate","isNumber","isBoolean","typeAll","infer","TESTS","splice","PARSERS","boolean","string","isNaN","Date",20,"dl","print","template","timeunits","./aggregate/groupby","./bins/bins","./bins/histogram","./generate","./import/load","./import/read","./import/readers","./import/type","./print","./stats","./template","./time-units","./util",21,"printQuantitativeProfile","p","printCategoricalProfile","list","top","FMT","POS","separator","minwidth","maxwidth","limit","lens","head","truncate","pad","tmpl","summary","__summary__","field",22,"results","filter","quantile","q","H","delta","M2","avg","med","std","dot","Number","rank","mu","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","L2","abs","R","M","entropy","LN2","mutual","z","px","py","I","info","profile","sd",23,"text","src","source","bind","context","variable","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","stringCast","filters","split","prop","shift","trim","pidx","template_format","time","template_escapes","pattern","format_map","clearFormatCache","'","\\","\r","\n"," "," ",24,"STEPS","entries","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps",25,"util_escape_str","escape_str_re","strrep","truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","Buffer","stderr","FNAME","namedfunc","stringify","equal","String","toString","Object","apply","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","searchString","pos","padchar","word","ellipsis","l1","l2","_process","buffer",26,"./lib/heap",27,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","empty","size","clone","heap","toArray","front","has","copy","factory",28,"bounds","union","x1","MAX_VALUE","y1","x2","y2","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",29,"canvas","svg","HeadlessView","model","_el","_type","_renderers","_canvas","renderer","canvasAsync","wait","pendingImages","view","render","_renderer","initialize","_width","_height","_padding","_viewport","left","right","bottom","_io","Renderer","initSVG","initCanvas","Canvas","tw","th","ctx","getContext","setAttribute","setTransform","resize","../render/canvas/index","../render/svg-headless/index","../util/debug","./View",30,"Model","_defs","_predicates","_scene","_node","_builder","predicates","defs","pipeline","predicate","disconnect","marks","connect","fire","cs","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",31,"streaming","ds","_model","listener","streamer","_streamer","_changeset","api","signals","_api","update","build","_renderNode","router","evaluate","debug","trans","items","revises","finalize","last","parseStreams","Encoder","Transition","el","__width","__height","_autopad","_handler","dataValues","signal","setter","signalValues","reflow","_strict","padding","autopad","inset","autopadInset","viewport","_build","prevHandler","parentNode","select","append","attr","style","Handler","handlers","handler","duration","ease","props","listeners","onSignal","offSignal","../parse/streams","../render/svg/index","../scene/Encoder","../scene/Transition","../util/config","./HeadlessView",32,"graph","_data","collector","ids","_id","../util/constants","./Node","./changeset",33,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","prev","ingest","where","func","idMap","unshift","output","dest","_srcMap","derive","./Collector","./tuple",34,"_signals","forEachNode","branch","Signal","_stamp","_rank","doNotPropagate","db","names","sg","signalRef","ref","schedule","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","SIGNALS","reevaluate","run","./Datasource","./Signal",35,"REEVAL","FIELDS","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","bool","cur","foundSending","reeval",36,"_value","_handlers",37,"reset_prev",38,"datum","tuple_id","has_prev","reset",39,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","Identifier","id","Program","MemberExpression","computed","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","ExpressionStatement","expression","./constants","./functions",40,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",41,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","atan2","tan","now","datetime","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",42,"parser","./codegen","./parser",43,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",44,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",45,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",46,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","startRule",47,"eval","../expression",48,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",49,"parseProperties","parseMark","mark","delay","./properties",50,"./mark",51,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",52,53,"parseSignal","parseOperands","decl","arg","pred","parseComparator","parseLogical","parseIn","parseScale","scope","invert","=","==","!=",">",">=","<","<=","and","&&","or","||","in",54,"compile","vars","valueRef","DEPS","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","sgRef","fRef","sRef","fieldRef","scaleRef","band","mult","xx","color","yy","zz","nested","fr",55,"dep","./expr",56,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",57,"changset","selector","START","MIDDLE","END","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",58,"tx","../transforms/index",59,"eventName","_active","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","gx","gy","marktype","picker","./marks",60,"scaleCanvas","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","element","bb2","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",61,"./Handler","./Renderer",62,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",63,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",64,"SVGBuilder","./svg",65,66,"tag","close","escape_text","escape_font","group_bg","styl","class","clip_id","clipping","arc_path","area_path_h","area_path_v","line_path","symbol_path","xlink:href","text-anchor","cssClass","cls","xw","yh","styleProps","styles","_gid","_text","foot","svgNamespace","buildDefs","dgrad","dclip","stop-color","meta","MARKS","sty","nest","center",67,"svgHandler","__data__","_svg","dom","removeEventListener",68,"updateDefs","each","grd","cr","renderItems",69,"dup",70,"setProperty","removeProperty","area_path","setAttributeNS","removeAttribute","textContent","drawMark","evts","grps","childNodes","notG","mark_id",71,"Bounder","_mark","GROUP","../util/bounds",72,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",73,"preds","enc","EMPTY",74,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",75,"hasPropertySet","cousin","iidx","midx","touch",76,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","Aggregate","vg_dataref","stat","MIN","MAX","order","DESC","vg_key","min_vg_dataref","max_vg_dataref","domainMin","domainMax","LOG","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",77,"updates","elapsed","curr","calcBounds","skip","interp","timer",78,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",79,"Transform","addParameters","_fieldsDef","Facetor","_reset","./Facetor","./Transform",80,"BatchTransform","batchTransform",81,"Bin","default","bin",82,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",83,"Facet","../parse/transforms","./Aggregate",84,"disconnect_cell","prev_cell",85,"Filter","_skip","../parse/expr",86,"Fold","rst","get_tuple","dlen","fold",87,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",88,"Formula",89,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",90,"GeoPath","geojson","./Geo",91,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",92,"Parameter","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","isExpr",93,"Pie","ones","./BatchTransform",94,"Sort","by",95,"Stack","sortby","partition","groups",96,"params","_parameters","./Parameter",97,"Treemap","sticky","mode","treemap",98,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",99,"aggregate","linkpath","formula","geopath","pie","zip","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Zip",100,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",101,"utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20",102,"sentinel","SINGLETON","COUNT","ASC",103,"console"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};\n},{\"./src/core/View\":31,\"./src/dataflow/Datasource\":33,\"./src/dataflow/Graph\":34,\"./src/dataflow/Node\":35,\"./src/dataflow/changeset\":37,\"./src/parse/spec\":56,\"./src/scene/Builder\":72,\"./src/scene/GroupBuilder\":74,\"./src/transforms/index\":99,\"./src/util/config\":101,\"datalib\":20}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nvar util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        f.get && util.$(f.get) || util.$(f.name), // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this;\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nproto.accessors = function(fields) {\n  var aggr = this._aggr, i, n, f;\n  for (i=0, n=aggr.length; i<n; ++i) {\n    if ((f = fields[aggr[i].name])) {\n      aggr[i].measures.prototype.get = util.$(f);\n    }\n  }\n  return this;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._keys = function(x) {\n  var d = this._dims,\n      n = d.length,\n      k = Array(n), i;\n  for (i=0; i<n; ++i) { k[i] = d[i].get(x); }\n  return {key: util.keystr(k), keys: k};\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._newcell(x, k));\n};\n\nproto._newcell = function(x, k) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, k),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for(i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto.add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (cell.collect) cell.data.add(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (cell.collect) cell.data.rem(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  for (var i=0; i<input.length; ++i) {\n    this.add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this.rem(input[i]);\n  }\n  return this;\n};\n\nmodule.exports = Aggregator;\n},{\"../util\":25,\"./collector\":5,\"./measures\":7}],5:[function(require,module,exports){\nvar util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\nproto.min = function(f) { return this.extent(f)[0]; };\nproto.max = function(f) { return this.extent(f)[1]; };\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\nproto.q1 = function(f) { return this.quartile(f)[0]; };\nproto.q2 = function(f) { return this.quartile(f)[1]; };\nproto.q3 = function(f) { return this.quartile(f)[2]; };\n\nmodule.exports = Collector;\n},{\"../stats\":22,\"../util\":25}],6:[function(require,module,exports){\nvar util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = Array.prototype.reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n},{\"../util\":25,\"./aggregator\":4}],7:[function(require,module,exports){\nvar util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'this.argmin = null;',\n    set:  'this.argmin || cell.data.min(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'this.argmax = null;',\n    set:  'this.argmax || cell.data.max(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? this.get(cell.data.min(this.get)) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? this.get(cell.data.max(this.get)) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;\n},{\"../stats\":22,\"../util\":25}],8:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":24,\"../util\":25}],9:[function(require,module,exports){\nvar stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f), c = u.counts;\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n},{\"../generate\":10,\"../import/type\":19,\"../stats\":22,\"../util\":25,\"./bins\":8}],10:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],11:[function(require,module,exports){\n(function (global){\nvar util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util\":25}],12:[function(require,module,exports){\nvar dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n},{\"./dsv\":11,\"./json\":13,\"./topojson\":14,\"./treejson\":15}],13:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":25}],14:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":13}],15:[function(require,module,exports){\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n},{\"./json\":13}],16:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":25,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],17:[function(require,module,exports){\nvar util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n},{\"../util\":25,\"./formats\":12,\"./type\":19}],18:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":25,\"./load\":16,\"./read\":17}],19:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":25}],20:[function(require,module,exports){\nvar util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;\n},{\"./aggregate/groupby\":6,\"./bins/bins\":8,\"./bins/histogram\":9,\"./generate\":10,\"./import/load\":16,\"./import/read\":17,\"./import/readers\":18,\"./import/type\":19,\"./print\":21,\"./stats\":22,\"./template\":23,\"./time-units\":24,\"./util\":25}],21:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n},{\"./import/type\":19,\"./stats\":22,\"./template\":23,\"./util\":25}],22:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var a, b, x, y, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":10,\"./import/type\":19,\"./util\":25}],23:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util\":25}],24:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],25:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":24,\"_process\":3,\"buffer\":2}],26:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":27}],27:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],28:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],29:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../render/canvas/index\":61,\"../render/svg-headless/index\":65,\"../util/debug\":103,\"./View\":31,\"datalib\":20}],30:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":34,\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../scene/GroupBuilder\":74,\"datalib\":20}],31:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../parse/streams\":57,\"../render/canvas/index\":61,\"../render/svg/index\":69,\"../scene/Encoder\":73,\"../scene/Transition\":77,\"../util/config\":101,\"../util/debug\":103,\"./HeadlessView\":29,\"datalib\":20}],32:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Node\":35,\"./changeset\":37}],33:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Collector\":32,\"./Node\":35,\"./changeset\":37,\"./tuple\":38,\"datalib\":20}],34:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Datasource\":33,\"./Signal\":36,\"./changeset\":37,\"datalib\":20,\"heap\":26}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":102,\"datalib\":20}],36:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;\n},{\"./Node\":35,\"./changeset\":37}],37:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":102}],38:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\n// Spoof the previous tuple\nfunction prev(t) {\n  return dl.extend(dl.duplicate(t), t._prev);\n}\n\nfunction has_prev(t) {\n  return t._prev && t._prev !== C.SENTINEL;\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   prev,\n  set_prev: set_prev,\n  has_prev: has_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":102,\"datalib\":20}],39:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":40,\"./functions\":41,\"datalib\":20}],40:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],41:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":20}],42:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":39,\"./parser\":43}],43:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":78,\"../util/config\":101,\"datalib\":20}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n\n},{\"../util/config\":101,\"./modify\":51,\"./transforms\":58,\"datalib\":20}],46:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],47:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":42,\"datalib\":20}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":101,\"../util/constants\":102,\"datalib\":20}],49:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":54,\"datalib\":20}],50:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":49}],51:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":35,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],52:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":20}],53:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":20}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../util/config\":101,\"datalib\":20}],55:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":102,\"./expr\":47}],56:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n\n},{\"../core/Model\":30,\"../core/View\":31,\"../parse/data\":45,\"../parse/interactors\":48,\"../parse/marks\":50,\"../parse/padding\":52,\"../parse/predicates\":53,\"../parse/signals\":55,\"datalib\":20}],57:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../util/constants\":102,\"./events\":46,\"./expr\":47,\"datalib\":20}],58:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  \n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":99,\"datalib\":20}],59:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":62,\"datalib\":20}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28,\"../../util/config\":101,\"./marks\":62,\"datalib\":20}],61:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":59,\"./Renderer\":60}],62:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":28,\"../../util/bounds\":100,\"../../util/config\":101,\"./path\":63}],63:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28}],64:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"./svg\":66,\"datalib\":20}],65:[function(require,module,exports){\nmodule.exports = {\n  Renderer: require('./Renderer')\n};\n\n},{\"./Renderer\":64}],66:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"datalib\":20}],67:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":20}],68:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":70,\"datalib\":20}],69:[function(require,module,exports){\narguments[4][61][0].apply(exports,arguments)\n},{\"./Handler\":67,\"./Renderer\":68,\"dup\":61}],70:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"datalib\":20}],71:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":100,\"../util/constants\":102,\"../util/debug\":103}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../parse/data\":45,\"../util/constants\":102,\"../util/debug\":103,\"./Bounder\":71,\"./Encoder\":73,\"./Item\":75,\"datalib\":20}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":100,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],74:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":32,\"../dataflow/Node\":35,\"../parse/axes\":44,\"../util/constants\":102,\"../util/debug\":103,\"./Builder\":72,\"./Scale\":76,\"datalib\":20}],75:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],76:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      aggr = cache ? cache.aggr() : null,  // dl.Aggregator\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph)\n    cache.groupby.set(cache, [])\n      .summarize.set(cache, {});\n\n    aggr = cache.aggr();\n    if(uniques && sort) {\n      aggr.summarize({ \"vg_dataref\": [sort.stat] })\n    } else if(!uniques) {\n      aggr.summarize({ \"vg_dataref\": [C.MIN, C.MAX] })\n    }\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      aggr.accessors({ \"vg_dataref\": sort ? (r.sort || sort.field) : \"_id\" });\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        aggr.groupby({ name: \"vg_key\", get: dl.accessor(fields[j]) });\n        cache.evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        aggr.accessors({ \"vg_dataref\": fields[j] });\n        cache.evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = aggr.result();\n  if (uniques) {\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + sort.stat + \"_vg_dataref\";\n      sort = dl.comparator(sort);\n      data = data.sort(sort);\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return data.map(function(d) { return d.vg_key; });\n  } else {\n    data = data[0];\n    return (data === null) ? [] : [data.min_vg_dataref, data.max_vg_dataref];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../transforms/Aggregate\":79,\"../util/config\":101,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],77:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":38,\"../util/bounds\":100,\"../util/constants\":102}],78:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../parse/mark\":49,\"../util/config\":101,\"datalib\":20}],79:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor'),\n    tpl = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"}\n  });\n\n  this._fieldsDef = [];\n  this._aggr = null;  // dl.Aggregator\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new Transform());\n\nproto.summarize = {\n  set: function(transform, summarize) {\n    var i, len, f, fields, name, ops, signals = {};\n    if(!dl.isArray(fields = summarize)) { // Object syntax from dl\n      fields = [];\n      for (name in summarize) {\n        ops = util.array(summarize[name]);\n        fields.push({name: name, ops: ops});\n      }\n    }\n\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._aggr = null;\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.aggr = function() {\n  if(this._aggr) return this._aggr;\n\n  var graph = this._graph,\n      groupby = this.groupby.get(graph).fields;\n\n  var fields = this._fieldsDef.map(function(field) {\n    var f = dl.duplicate(field);\n    f.name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    f.ops  = f.ops.signal ? graph.signalRef(f.ops.signal) : dl.array(f.ops).map(function(o) {\n      return o.signal ? graph.signalRef(o.signal) : o;\n    });\n\n    return f;\n  });\n\n  var aggr = this._aggr = new Facetor()\n    .key(\"_id\")\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  return aggr;\n};\n\nproto._reset = function(input, output) {\n  output.rem.push.apply(output.rem, this.aggr().result());\n  this.aggr().clear();\n  this._aggr = null;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  var output = changeset.create(input);\n  if(reset) this._reset(input, output);\n\n  var aggr = this.aggr();\n\n  input.add.forEach(aggr.add.bind(aggr));\n\n  input.mod.forEach(function(x) {\n    if(reset) {\n      aggr.add(x);  // Signal change triggered reflow\n    } else if(tpl.has_prev(x)) {\n      aggr.mod(x);\n    }\n  });\n\n  input.rem.forEach(function(x) {\n    aggr.rem(tpl.has_prev(x) ? tpl.prev(x) : x);\n  });\n\n  return aggr.changes(input, output);\n}\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"./Facetor\":84,\"./Transform\":96,\"datalib\":20}],80:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":32,\"./Transform\":96}],81:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],82:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":32,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":103,\"./Transform\":96}],83:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar proto = (Facet.prototype = Object.create(Aggregate.prototype));\n\nproto.pipeline = {\n  set: function(facet, pipeline) {\n    facet._pipeline = pipeline;\n    return facet;\n  },\n  get: function(model, facet) {\n    var parse = require('../parse/transforms');\n    return facet._pipeline.map(function(t) { return parse(model, t) });\n  }\n};\n\nproto.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nmodule.exports = Facet;\n},{\"../parse/transforms\":58,\"./Aggregate\":79,\"./Transform\":96}],84:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facetor() {\n  Aggregator.constructor.call(this);\n  this._facet = null;\n}\n\nvar Aggregator = dl.groupby();\nvar proto = (Facetor.prototype = Object.create(Aggregator));\n\nproto.facet = function(f) {\n  if(!arguments.length) return this._facet;\n  return (this._facet = f, this);\n};\n\nproto.pipeline = function(p) {\n  if(!arguments.length) return this._pipeline;\n  return (this._pipeline = p, this);\n};\n\nproto._ingest = function(t) { \n  return tuple.ingest(t, null) \n};\n\nproto._assign = tuple.set;\n\nfunction disconnect_cell(facet) {\n  debug({}, [\"deleting cell\", this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nproto._newcell = function(x, k) {\n  var cell  = Aggregator._newcell.call(this, x, k),\n      facet = this._facet,\n      tuple = cell.tuple,\n      graph, pipeline;\n\n  if(this._facet !== null) {\n    graph = facet._graph;\n    pipeline = facet.pipeline.get(graph, facet);\n    cell.ds  = graph.data(\"vg_\"+tuple._id, pipeline, tuple);\n    cell.delete = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x, k) {\n  var t = Aggregator._newtuple.call(this, x, k);\n  if(this._facet !== null) {\n    tuple.set(t, \"key\", k.key);\n    tuple.set(t, \"keys\", k.keys);\n  }\n  return t;\n};\n\nproto.clear = function() {\n  if(this._facet !== null) for (var k in this._cells) {\n    this._cells[k].delete(this._facet);\n  }\n  return Aggregator.clear.call(this);\n};\n\nproto.add = function(x) {\n  var cell = this._cell(x);\n  Aggregator.add.call(this, x);\n  if(this._facet !== null) cell.ds._input.add.push(x);\n};\n\nproto.mod = function(x) {\n  var prev = tuple.prev(x),\n      prev_cell = this._cell(prev),\n      cell = this._cell(x);\n\n  if(prev_cell === cell) {\n    Aggregator.rem.call(this, prev);\n    Aggregator.add.call(this, x);\n    if(this._facet !== null) cell.ds._input.mod.push(x); // Propagate tuples\n  } else {\n    this.rem(prev);\n    this.add(x);\n  }\n};\n\nproto.rem = function(x) {\n  var cell = this._cell(x);\n  Aggregator.rem.call(this, x);\n  if(this._facet !== null) cell.ds._input.rem.push(x);  \n};\n\nproto.changes = function(input, output) {\n  var aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === C.MOD_CELL) {\n        output.rem.push(cell.tuple);\n      }\n      if(this._facet !== null) cell.delete(this._facet);\n      delete this._cells[k];\n    } else {\n      if(this._facet !== null) {\n        // propagate sort, signals, fields, etc.\n        changeset.copy(input, cell.ds._input);\n      }\n\n      if (flag & C.ADD_CELL) {\n        output.add.push(cell.tuple);\n      } else if (flag & C.MOD_CELL) {\n        output.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = Facetor;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],85:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":37,\"../parse/expr\":47,\"../util/constants\":102,\"../util/debug\":103,\"./Transform\":96}],86:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":103,\"./Transform\":96}],87:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],88:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":38,\"../parse/expr\":47,\"../util/constants\":102,\"../util/debug\":103,\"./Transform\":96}],89:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],90:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Geo\":89,\"./Transform\":96,\"datalib\":20}],91:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],92:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":47,\"../util/constants\":102,\"datalib\":20}],93:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],94:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":47,\"../util/debug\":103,\"./Transform\":96,\"datalib\":20}],95:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],96:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":35,\"../util/constants\":102,\"./Parameter\":92}],97:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],98:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":32,\"../util/debug\":103,\"./Transform\":96,\"datalib\":20}],99:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":79,\"./Bin\":81,\"./Cross\":82,\"./Facet\":83,\"./Filter\":85,\"./Fold\":86,\"./Force\":87,\"./Formula\":88,\"./Geo\":89,\"./GeoPath\":90,\"./LinkPath\":91,\"./Pie\":93,\"./Sort\":94,\"./Stack\":95,\"./Treemap\":97,\"./Zip\":98}],100:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":28,\"../render/canvas/path\":63,\"./config\":101}],101:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],102:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],103:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":101}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        f.get && util.$(f.get) || util.$(f.name), // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this;\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nproto.accessors = function(fields) {\n  var aggr = this._aggr, i, n, f;\n  for (i=0, n=aggr.length; i<n; ++i) {\n    if ((f = fields[aggr[i].name])) {\n      aggr[i].measures.prototype.get = util.$(f);\n    }\n  }\n  return this;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._keys = function(x) {\n  var d = this._dims,\n      n = d.length,\n      k = Array(n), i;\n  for (i=0; i<n; ++i) { k[i] = d[i].get(x); }\n  return {key: util.keystr(k), keys: k};\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._newcell(x, k));\n};\n\nproto._newcell = function(x, k) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, k),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for(i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto.add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (cell.collect) cell.data.add(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].add(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (cell.collect) cell.data.rem(x);\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name].rem(x);\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  for (var i=0; i<input.length; ++i) {\n    this.add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this.rem(input[i]);\n  }\n  return this;\n};\n\nmodule.exports = Aggregator;","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\nproto.min = function(f) { return this.extent(f)[0]; };\nproto.max = function(f) { return this.extent(f)[1]; };\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\nproto.q1 = function(f) { return this.quartile(f)[0]; };\nproto.q2 = function(f) { return this.quartile(f)[1]; };\nproto.q3 = function(f) { return this.quartile(f)[2]; };\n\nmodule.exports = Collector;","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = Array.prototype.reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'this.argmin = null;',\n    set:  'this.argmin || cell.data.min(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'this.argmax = null;',\n    set:  'this.argmax || cell.data.max(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? this.get(cell.data.min(this.get)) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? this.get(cell.data.max(this.get)) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f), c = u.counts;\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n","var json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;","var util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values and associated counts.\n// Output: an array of unique values, in observed order\n// The array includes an additional 'counts' property,\n// which is a hash from unique values to occurrence counts.\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var a, b, x, y, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\n// Spoof the previous tuple\nfunction prev(t) {\n  return dl.extend(dl.duplicate(t), t._prev);\n}\n\nfunction has_prev(t) {\n  return t._prev && t._prev !== C.SENTINEL;\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   prev,\n  set_prev: set_prev,\n  has_prev: has_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  \n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n","module.exports = {\n  Renderer: require('./Renderer')\n};\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      aggr = cache ? cache.aggr() : null,  // dl.Aggregator\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph)\n    cache.groupby.set(cache, [])\n      .summarize.set(cache, {});\n\n    aggr = cache.aggr();\n    if(uniques && sort) {\n      aggr.summarize({ \"vg_dataref\": [sort.stat] })\n    } else if(!uniques) {\n      aggr.summarize({ \"vg_dataref\": [C.MIN, C.MAX] })\n    }\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      aggr.accessors({ \"vg_dataref\": sort ? (r.sort || sort.field) : \"_id\" });\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        aggr.groupby({ name: \"vg_key\", get: dl.accessor(fields[j]) });\n        cache.evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        aggr.accessors({ \"vg_dataref\": fields[j] });\n        cache.evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = aggr.result();\n  if (uniques) {\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + sort.stat + \"_vg_dataref\";\n      sort = dl.comparator(sort);\n      data = data.sort(sort);\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return data.map(function(d) { return d.vg_key; });\n  } else {\n    data = data[0];\n    return (data === null) ? [] : [data.min_vg_dataref, data.max_vg_dataref];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor'),\n    tpl = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"}\n  });\n\n  this._fieldsDef = [];\n  this._aggr = null;  // dl.Aggregator\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new Transform());\n\nproto.summarize = {\n  set: function(transform, summarize) {\n    var i, len, f, fields, name, ops, signals = {};\n    if(!dl.isArray(fields = summarize)) { // Object syntax from dl\n      fields = [];\n      for (name in summarize) {\n        ops = util.array(summarize[name]);\n        fields.push({name: name, ops: ops});\n      }\n    }\n\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._aggr = null;\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.aggr = function() {\n  if(this._aggr) return this._aggr;\n\n  var graph = this._graph,\n      groupby = this.groupby.get(graph).fields;\n\n  var fields = this._fieldsDef.map(function(field) {\n    var f = dl.duplicate(field);\n    f.name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    f.ops  = f.ops.signal ? graph.signalRef(f.ops.signal) : dl.array(f.ops).map(function(o) {\n      return o.signal ? graph.signalRef(o.signal) : o;\n    });\n\n    return f;\n  });\n\n  var aggr = this._aggr = new Facetor()\n    .key(\"_id\")\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  return aggr;\n};\n\nproto._reset = function(input, output) {\n  output.rem.push.apply(output.rem, this.aggr().result());\n  this.aggr().clear();\n  this._aggr = null;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  var output = changeset.create(input);\n  if(reset) this._reset(input, output);\n\n  var aggr = this.aggr();\n\n  input.add.forEach(aggr.add.bind(aggr));\n\n  input.mod.forEach(function(x) {\n    if(reset) {\n      aggr.add(x);  // Signal change triggered reflow\n    } else if(tpl.has_prev(x)) {\n      aggr.mod(x);\n    }\n  });\n\n  input.rem.forEach(function(x) {\n    aggr.rem(tpl.has_prev(x) ? tpl.prev(x) : x);\n  });\n\n  return aggr.changes(input, output);\n}\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar proto = (Facet.prototype = Object.create(Aggregate.prototype));\n\nproto.pipeline = {\n  set: function(facet, pipeline) {\n    facet._pipeline = pipeline;\n    return facet;\n  },\n  get: function(model, facet) {\n    var parse = require('../parse/transforms');\n    return facet._pipeline.map(function(t) { return parse(model, t) });\n  }\n};\n\nproto.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nmodule.exports = Facet;","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facetor() {\n  Aggregator.constructor.call(this);\n  this._facet = null;\n}\n\nvar Aggregator = dl.groupby();\nvar proto = (Facetor.prototype = Object.create(Aggregator));\n\nproto.facet = function(f) {\n  if(!arguments.length) return this._facet;\n  return (this._facet = f, this);\n};\n\nproto.pipeline = function(p) {\n  if(!arguments.length) return this._pipeline;\n  return (this._pipeline = p, this);\n};\n\nproto._ingest = function(t) { \n  return tuple.ingest(t, null) \n};\n\nproto._assign = tuple.set;\n\nfunction disconnect_cell(facet) {\n  debug({}, [\"deleting cell\", this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nproto._newcell = function(x, k) {\n  var cell  = Aggregator._newcell.call(this, x, k),\n      facet = this._facet,\n      tuple = cell.tuple,\n      graph, pipeline;\n\n  if(this._facet !== null) {\n    graph = facet._graph;\n    pipeline = facet.pipeline.get(graph, facet);\n    cell.ds  = graph.data(\"vg_\"+tuple._id, pipeline, tuple);\n    cell.delete = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x, k) {\n  var t = Aggregator._newtuple.call(this, x, k);\n  if(this._facet !== null) {\n    tuple.set(t, \"key\", k.key);\n    tuple.set(t, \"keys\", k.keys);\n  }\n  return t;\n};\n\nproto.clear = function() {\n  if(this._facet !== null) for (var k in this._cells) {\n    this._cells[k].delete(this._facet);\n  }\n  return Aggregator.clear.call(this);\n};\n\nproto.add = function(x) {\n  var cell = this._cell(x);\n  Aggregator.add.call(this, x);\n  if(this._facet !== null) cell.ds._input.add.push(x);\n};\n\nproto.mod = function(x) {\n  var prev = tuple.prev(x),\n      prev_cell = this._cell(prev),\n      cell = this._cell(x);\n\n  if(prev_cell === cell) {\n    Aggregator.rem.call(this, prev);\n    Aggregator.add.call(this, x);\n    if(this._facet !== null) cell.ds._input.mod.push(x); // Propagate tuples\n  } else {\n    this.rem(prev);\n    this.add(x);\n  }\n};\n\nproto.rem = function(x) {\n  var cell = this._cell(x);\n  Aggregator.rem.call(this, x);\n  if(this._facet !== null) cell.ds._input.rem.push(x);  \n};\n\nproto.changes = function(input, output) {\n  var aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === C.MOD_CELL) {\n        output.rem.push(cell.tuple);\n      }\n      if(this._facet !== null) cell.delete(this._facet);\n      delete this._cells[k];\n    } else {\n      if(this._facet !== null) {\n        // propagate sort, signals, fields, etc.\n        changeset.copy(input, cell.ds._input);\n      }\n\n      if (flag & C.ADD_CELL) {\n        output.add.push(cell.tuple);\n      } else if (flag & C.MOD_CELL) {\n        output.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = Facetor;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  zip:        require('./Zip')\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};"],"sourceRoot":"/source/"}