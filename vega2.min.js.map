{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/aggregate/aggregator.js","node_modules/datalib/src/aggregate/collector.js","node_modules/datalib/src/aggregate/groupby.js","node_modules/datalib/src/aggregate/measures.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/bins/histogram.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/dsv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/import/readers.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/index.js","node_modules/datalib/src/print.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/template.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/HeadlessView.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/background.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/legends.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg-headless/Renderer.js","src/render/svg-headless/index.js","src/render/svg-headless/svg.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/scene/legend.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/GroupBy.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/Bounds.js","src/util/Gradient.js","src/util/boundscalc.js","src/util/config.js","src/util/constants.js","src/util/debug.js","src/util/quickselect.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./src/core/View","./src/dataflow/Datasource","./src/dataflow/Graph","./src/dataflow/Node","./src/dataflow/changeset","./src/parse/spec","./src/scene/Builder","./src/scene/GroupBuilder","./src/transforms/index","./src/util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"Aggregator","_cells","_aggr","_stream","summarize_args","fields","isArray","ops","array","Measures","Collector","Flags","ADD_CELL","MOD_CELL","proto","prototype","stream","v","key","_key","$","groupby","dims","_dims","map","d","isString","get","isFunction","clear","summarize","_count","m","j","op","as","aggr","identity","measures","create","_assign","count","*","object","value","_cellkey","x","k","String","_cell","_newcell","cell","num","tuple","_newtuple","flag","aggs","collect","data","_ingest","_add","add","_rem","rem","_mod","curr","prev","cell0","cell1","isObject","result","values","set","_rems","changes","mod","execute","input","insert","_consolidate","remove","../util","./collector","./measures",5,"_last","stats","REM","_get","Array","toMap","hasOwnProperty","extent","_ext","index","argmin","argmax","min","Infinity","max","quartile","_q","q1","q2","q3","../stats",6,"args","reduce","arguments","concat","./aggregator",7,"measure","base","out","extend","init","idx","resolve","agg","helper","types","req","forEach","str","vals","sort","b","accessor","mutator","all","ctr","slice","Function","assign","distinct","isValid","v_new","v_old","undefined","missing","valid","sum","mean","average","variance","variancep","stdev","stdevp","median","modeskew",8,"bins","opt","step","level","minstep","precision","eps","maxb","maxbins","logb","Math","log","div","span","steps","bisect","ceil","pow","round","floor","start","stop","unit","lo","hi","mid","cmp","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","raw","../time-units",9,"$bin","options","$func","histogram","numerical","categorical","type","qtype","ext","h","gen","range","isFinite","unique","c","comparator","integer","number","../generate","../import/type","./bins",10,"repeat","val","zeros","random","uniform","samples","normal","next","rds","y","sqrt",11,"dsv","format","header","join","delimiter","d3","delim","fmt","../../util",12,"json","topojson","treejson","csv","tsv","./dsv","./json","./topojson","./treejson",13,"isBuffer","JSON","property",14,"obj","feature","objects","features","mesh",15,"toTable","root","childrenField","visit","node","table","children",16,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","test","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","lastIndexOf","load","callback","error","err","indexOf","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","filename","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",17,"read","formats","cols","parsers","clen","inferAll","duplicate","keys","annotation","./formats","./type",18,"./load","./read",19,"TYPES","isDate","isNumber","isBoolean","typeAll","infer","TESTS","splice","PARSERS","boolean","string","isNaN","Date",20,"dl","print","template","timeunits","./aggregate/groupby","./bins/bins","./bins/histogram","./generate","./import/load","./import/read","./import/readers","./import/type","./print","./stats","./template","./time-units","./util",21,"printQuantitativeProfile","p","printCategoricalProfile","list","top","FMT","POS","separator","minwidth","maxwidth","limit","lens","head","truncate","pad","tmpl","summary","__summary__","field",22,"results","filter","quantile","q","H","delta","M2","avg","med","std","dot","Number","rank","mu","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","L2","abs","R","M","entropy","counts","LN2","mutual","z","px","py","I","info","profile","sd",23,"text","src","source","bind","context","variable","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","stringCast","filters","split","prop","shift","trim","pidx","template_format","time","template_escapes","pattern","format_map","clearFormatCache","'","\\","\r","\n"," "," ",24,"STEPS","entries","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps",25,"util_escape_str","escape_str_re","strrep","truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","Buffer","stderr","FNAME","namedfunc","stringify","equal","keystr","toString","Object","apply","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","searchString","pos","padchar","word","ellipsis","l1","l2","_process","buffer",26,"./lib/heap",27,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","empty","size","clone","heap","toArray","front","has","copy","factory",28,"canvas","svg","HeadlessView","width","height","model","_el","_type","_renderers","_canvas","renderer","canvasAsync","wait","pendingImages","view","render","_renderer","initialize","_width","_height","_padding","bg","_bgcolor","_viewport","left","right","bottom","_io","Renderer","initSVG","initCanvas","Canvas","tw","th","ctx","getContext","setAttribute","setTransform","resize","background","../render/canvas/index","../render/svg-headless/index","../util/debug","./View",29,"Model","_defs","_predicates","_scene","_node","_builder","predicates","defs","pipeline","predicate","disconnect","marks","connect","fire","cs","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",30,"streaming","ds","_model","listener","streamer","_streamer","_changeset","api","signals","_api","update","build","_renderNode","router","evaluate","debug","trans","items","revises","finalize","last","parseStreams","Encoder","Transition","el","__width","__height","_autopad","_handler","dataValues","signal","setter","signalValues","reflow","_strict","bgcolor","padding","autopad","bounds","inset","autopadInset","x1","y1","x2","y2","viewport","_build","prevHandler","parentNode","select","append","attr","style","Handler","handlers","handler","duration","ease","props","listeners","onSignal","offSignal","../parse/streams","../render/svg/index","../scene/Encoder","../scene/Transition","../util/config","./HeadlessView",31,"graph","_data","collector","ids","_id","../util/constants","./Node","./changeset",32,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","ingest","where","func","idMap","unshift","output","dest","_srcMap","derive","./Collector","./tuple",33,"_signals","forEachNode","branch","Signal","_stamp","_rank","doNotPropagate","db","names","sg","signalRef","ref","schedule","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","SIGNALS","reevaluate","run","./Datasource","./Signal",34,"REEVAL","FIELDS","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","bool","cur","foundSending","reeval",35,"_value","_handlers",36,"reset_prev",37,"datum","tuple_id","reset",38,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","Identifier","id","Program","MemberExpression","computed","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","ExpressionStatement","expression","./constants","./functions",39,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",40,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","atan2","cos","sin","tan","now","datetime","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",41,"parser","./codegen","./parser",42,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",43,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","tickCount","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",44,"rgb",45,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",46,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","startRule",47,"eval","../expression",48,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",49,"legends","lgnd","legend","shape","fill","stroke","labelProperties","legendProperties","symbolProperties","symbols","gradientProperties","gradient","../scene/legend",50,"parseProperties","parseMark","mark","delay","./properties",51,"./mark",52,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",53,54,"parseSignal","parseOperands","decl","arg","pred","parseComparator","parseLogical","parseIn","parseScale","scope","invert","=","==","!=",">",">=","<","<=","and","&&","or","||","in",55,"compile","vars","valueRef","DEPS","xc","yc","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","sgRef","fRef","sRef","fieldRef","scaleRef","band","mult","xx","color","yy","zz","nested","fr",56,"parseSignals","exprVal","dep","./expr",57,"parseBg","parsePadding","parseMarks","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/background","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",58,"changset","selector","START","MIDDLE","END","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events","./signals",59,"tx","../transforms/index",60,"eventName","_active","_down","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","mousedown","click","DOMMouseScroll","gx","gy","marktype","picker","./marks",61,"scaleCanvas","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","translate","getBounds","union","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","element","bb2","save","draw","encloses","clearRect","fillStyle","fillRect","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../util/Bounds","../../util/config",62,"./Handler","./Renderer",63,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","opacity","globalAlpha","fillOpacity","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","intersects","drawRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","angle","rotate","dx","dy","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","axisItems","legendItems","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","isPointInStroke","isPointInPath","symbol","../../util/boundscalc","./path",64,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","th0","th1","th_arc","segments","th2","th3","cx","cy","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",65,"SVGBuilder","./svg",66,67,"tag","close","escape_text","escape_font","group_bg","styl","class","clip_id","clipping","arc_path","area_path_h","area_path_v","line_path","symbol_path","xlink:href","text-anchor","cssClass","cls","xw","yh","styleProps","styles","_gid","_text","foot","svgNamespace","buildDefs","dgrad","dclip","stop-color","meta","MARKS","sty","nest","center",68,"svgHandler","__data__","_svg","dom","removeEventListener",69,"updateDefs","each","grd","cr","renderItems",70,"dup",71,"setProperty","removeProperty","setAttributeNS","removeAttribute","textContent","drawMark","evts","grps","childNodes","notG","mark_id",72,"Bounder","_mark","ilen","hasLegends","GROUP","_legendPositions","../util/boundscalc","./Encoder",73,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Item",74,"preds","enc","EMPTY",75,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","buildLegends","MARK","parseAxes","parseLegends","buildGroup","inherit","axisDef","AXIS","legendDef","LEGEND","Scale","acc","group_id","../dataflow/Collector","../parse/axes","../parse/legends","./Builder","./Scale",76,"hasPropertySet","cousin","iidx","midx","touch",77,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","outer","outerPadding","dataRef","RANGE","DOMAIN","bandWidth","bw","space","points","rangeRoundPoints","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","singleton","stat","group_by","MIN","MAX","order","DESC","SINGLETON","domainMin","domainMax","LOG","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",78,"updates","elapsed","skip","interp","timer",79,"getTickFormatString","tickFormatString","buildTickFormat","fmtStr","buildTicks","major","minor","vg_axisSubdivide","label","axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tdata","vg_axisOrients","subticks","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","ofx","ofy","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",80,"discrete","ordinalDef","o_legend_def","tickArguments","symbolSize","spacing","labelStyle","labelFontSize","sz","titles","vg_legendTitle","vg_legendSymbols","vg_vLegendLabels","vg_legendSymbolExtend","symbolStyle","legendStyle","vg_legendPosition","quantDef","q_legend_def","gradientStyle","gradientWidth","layout","vg_legendGradient","vg_hLegendLabels","Gradient","gp","gh","hh","tp","formatString","vg_legendOrients","lh","cfg","symbolShape","symbolColor","symbolStrokeWidth","labelColor","labelFont","labelAlign","labelBaseline","gradientHeight","gradientStrokeColor","gradientStrokeWidth","../parse/properties","../util/Gradient",81,"GroupBy","Transform","addParameters","var","varp","_fieldsDef","_Aggregators","_singleton","meas","_reset","_keys","_gb","_new_cell","flg","./GroupBy","./Transform",82,"BatchTransform","batchTransform",83,"Bin","default","bin",84,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",85,"Facet","_new_tuple",86,"Filter","_skip","../parse/expr",87,"Fold","rst","get_tuple","accessors","dlen","fold",88,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",89,"Formula",90,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",91,"GeoPath","geojson","./Geo",92,"gb","groupBy",93,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",94,"Parameter","_accessors","_resolution","arrayType","dataType","fieldType","exprType","isData","isField","sources","isExpr",95,"Pie","ones","./BatchTransform",96,"Sort","by",97,"Stack","sortby","partition","groups",98,"params","_parameters","./Parameter",99,"Treemap","sticky","mode","treemap",100,"Unique",101,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",102,"aggregate","linkpath","formula","geopath","pie","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Unique","./Zip",103,"quickselect","_counts","../util/quickselect",104,"MAX_VALUE","expand",105,"vg_gradient_id",106,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../render/canvas/path","../util/Bounds","./config",107,"utc","labelOffset","lab","hcl","hsl","category10","category20",108,"sentinel","COUNT","ASC",109,"console",110,"swap","pivot"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};\n},{\"./src/core/View\":30,\"./src/dataflow/Datasource\":32,\"./src/dataflow/Graph\":33,\"./src/dataflow/Node\":34,\"./src/dataflow/changeset\":36,\"./src/parse/spec\":57,\"./src/scene/Builder\":73,\"./src/scene/GroupBuilder\":75,\"./src/transforms/index\":102,\"./src/util/config\":107,\"datalib\":20}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nvar util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x));\n};\n\nproto._newcell = function(x) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      if (cell.collect) {\n        cell.data.values();\n      }\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n},{\"../util\":25,\"./collector\":5,\"./measures\":7}],5:[function(require,module,exports){\nvar util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return (this._get = null, this._add);\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._get = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m ? get(m) : +Infinity;\n};\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n},{\"../stats\":22,\"../util\":25}],6:[function(require,module,exports){\nvar util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n},{\"../util\":25,\"./aggregator\":4}],7:[function(require,module,exports){\nvar util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;\n},{\"../stats\":22,\"../util\":25}],8:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":24,\"../util\":25}],9:[function(require,module,exports){\nvar stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n},{\"../generate\":10,\"../import/type\":19,\"../stats\":22,\"../util\":25,\"./bins\":8}],10:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],11:[function(require,module,exports){\n(function (global){\nvar util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util\":25}],12:[function(require,module,exports){\nvar dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n},{\"./dsv\":11,\"./json\":13,\"./topojson\":14,\"./treejson\":15}],13:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":25}],14:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":13}],15:[function(require,module,exports){\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n},{\"./json\":13}],16:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":25,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],17:[function(require,module,exports){\nvar util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n},{\"../util\":25,\"./formats\":12,\"./type\":19}],18:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":25,\"./load\":16,\"./read\":17}],19:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":25}],20:[function(require,module,exports){\nvar util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;\n},{\"./aggregate/groupby\":6,\"./bins/bins\":8,\"./bins/histogram\":9,\"./generate\":10,\"./import/load\":16,\"./import/read\":17,\"./import/readers\":18,\"./import/type\":19,\"./print\":21,\"./stats\":22,\"./template\":23,\"./time-units\":24,\"./util\":25}],21:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n},{\"./import/type\":19,\"./stats\":22,\"./template\":23,\"./util\":25}],22:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":10,\"./import/type\":19,\"./util\":25}],23:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\ntemplate.source = source;\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util\":25}],24:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],25:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":24,\"_process\":3,\"buffer\":2}],26:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":27}],27:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],28:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding,\n      bg = this._bgcolor;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad, bg);\n  } else {\n    this.initCanvas(w, h, pad, bg);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad, bg) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + (pad ? pad.left + pad.right : 0),\n      th = h + (pad ? pad.top + pad.bottom : 0),\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n  this._renderer.background(bg);\n};\n\nprototype.initSVG = function(w, h, pad, bg) {\n  var tw = w + (pad ? pad.left + pad.right : 0),\n      th = h + (pad ? pad.top + pad.bottom : 0);\n      \n  // configure renderer\n  this._renderer.initialize(this._el, tw, th, pad, bg);\n};\n\nmodule.exports = HeadlessView;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../render/canvas/index\":62,\"../render/svg-headless/index\":66,\"../util/debug\":109,\"./View\":30,\"datalib\":20}],29:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":33,\"../dataflow/Node\":34,\"../dataflow/changeset\":36,\"../scene/GroupBuilder\":75,\"datalib\":20}],30:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._bgcolor = null;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.background = function(bgcolor) {\n  if (!arguments.length) return this._bgcolor;\n  if (this._bgcolor !== bgcolor) {\n    this._bgcolor = bgcolor;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding, bg = v._bgcolor;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad, bg);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .background(defs.background)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":34,\"../dataflow/changeset\":36,\"../parse/streams\":58,\"../render/canvas/index\":62,\"../render/svg/index\":70,\"../scene/Encoder\":74,\"../scene/Transition\":78,\"../util/config\":107,\"../util/debug\":109,\"./HeadlessView\":28,\"datalib\":20}],31:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":108,\"../util/debug\":109,\"./Node\":34,\"./changeset\":36}],32:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":108,\"../util/debug\":109,\"./Collector\":31,\"./Node\":34,\"./changeset\":36,\"./tuple\":37,\"datalib\":20}],33:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":108,\"../util/debug\":109,\"./Datasource\":32,\"./Signal\":35,\"./changeset\":36,\"datalib\":20,\"heap\":26}],34:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":108,\"datalib\":20}],35:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;\n},{\"./Node\":34,\"./changeset\":36}],36:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":108}],37:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":108,\"datalib\":20}],38:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":39,\"./functions\":40,\"datalib\":20}],39:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],40:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":20}],41:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":38,\"./parser\":42}],42:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],43:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // axis tick count\n  axis.tickCount(def.ticks || config.axis.ticks);\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":79,\"../util/config\":107,\"datalib\":20}],44:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function parseBg(bg) {\n  // return null if input is null or undefined\n  if (bg == null) return null;\n  // run through d3 rgb to sanity check\n  return d3.rgb(bg) + \"\";  \n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n\n},{\"../util/config\":107,\"./modify\":52,\"./transforms\":59,\"datalib\":20}],46:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],47:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":41,\"datalib\":20}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":107,\"../util/constants\":108,\"datalib\":20}],49:[function(require,module,exports){\nvar lgnd = require('../scene/legend'),\n    config = require('../util/config');\n\nfunction legends(model, spec, legends, group) {\n  (spec || []).forEach(function(def, index) {\n    legends[index] = legends[index] || lgnd(model);\n    legend(def, index, legends[index], group);\n  });\n};\n\nfunction legend(def, index, legend, group) {\n  // legend scales\n  legend.size  (def.size   ? group.scale(def.size)   : null);\n  legend.shape (def.shape  ? group.scale(def.shape)  : null);\n  legend.fill  (def.fill   ? group.scale(def.fill)   : null);\n  legend.stroke(def.stroke ? group.scale(def.stroke) : null);\n\n  // legend orientation\n  if (def.orient) legend.orient(def.orient);\n\n  // legend offset\n  if (def.offset != null) legend.offset(def.offset);\n\n  // legend title\n  legend.title(def.title || null);\n\n  // legend values\n  legend.values(def.values || null);\n\n  // legend label formatting\n  legend.format(def.format !== undefined ? def.format : null);\n\n  // style properties\n  var p = def.properties;\n  legend.titleProperties(p && p.title || {});\n  legend.labelProperties(p && p.labels || {});\n  legend.legendProperties(p && p.legend || {});\n  legend.symbolProperties(p && p.symbols || {});\n  legend.gradientProperties(p && p.gradient || {});\n}\n\nmodule.exports = legends;\n},{\"../scene/legend\":80,\"../util/config\":107}],50:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":55,\"datalib\":20}],51:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":50}],52:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":34,\"../dataflow/tuple\":37,\"../util/constants\":108,\"../util/debug\":109,\"datalib\":20}],53:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":20}],54:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":20}],55:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.xc) {\n    if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.xc - o.width/2));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.xc);\";\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n\n  if (vars.yc) {\n    if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.yc - o.height/2));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.yc);\";\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.template !== undefined) {\n    val = dl.template.source(ref.template, \"item.datum\");\n  }\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"../util/config\":107,\"datalib\":20}],56:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nfunction parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init);\n\n    if(s.init && s.init.expr) {\n      s.init.expr = expr(s.init.expr);\n      signal.value(exprVal(model, s.init));\n    }\n\n    if(s.expr) {\n      s.expr = expr(s.expr);\n      signal.evaluate = function(input) {\n        signal.value(exprVal(model, s));\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, s.expr.signals);\n      s.expr.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n\nfunction exprVal(model, spec) {\n  var e = spec.expr,\n      val = expr.eval(model, e.fn, null, null, null, null, e.signals);\n  return spec.scale ? scale(model, spec, val) : val;\n}\n\nparseSignals.scale = function scale(model, spec, value) {\n  var def = spec.scale,\n      name  = def.name || def.signal || def,\n      scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n  if(!scope || !scope.scale) {\n    scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n  }\n\n  var scale = scope.scale(name);\n  if(!scale) return value;\n  return def.invert ? scale.invert(value) : scale(value);\n}\n\nmodule.exports = parseSignals;\n},{\"../util/constants\":108,\"./expr\":47}],57:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parseBg = require('../parse/background'),\n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      background: parseBg(spec.background),\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n\n},{\"../core/Model\":29,\"../core/View\":30,\"../parse/background\":44,\"../parse/data\":45,\"../parse/interactors\":48,\"../parse/marks\":51,\"../parse/padding\":53,\"../parse/predicates\":54,\"../parse/signals\":56,\"datalib\":20}],58:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    parseSignals = require('./signals'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = parseSignals.scale(model, spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = parseSignals.scale(model, h.spec, val);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":34,\"../dataflow/changeset\":36,\"../util/constants\":108,\"./events\":46,\"./expr\":47,\"./signals\":56,\"datalib\":20}],59:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":102,\"datalib\":20}],60:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._down = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mouseup\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousedown\");\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"click\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\nprototype.mousedown = function(evt) {\n  this._down = this._active;\n  this.fire(\"mousedown\", evt);\n};\n\nprototype.click = function(evt) {\n  if (this._down === this._active) {\n    this.fire(\"click\", evt);\n    this._down = null;\n  }\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":63,\"datalib\":20}],61:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../util/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._bgcolor = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad, bgcolor) {\n  this._el = el;\n\n  this.background(bgcolor);\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.background = function(bgcolor) {\n  this._bgcolor = bgcolor;\n  return this;\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  this.clear(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      this.clear(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.clear = function(x, y, w, h) {\n  var g = this._ctx;\n\n  g.clearRect(x, y, w, h);\n  if (this._bgcolor != null) {\n    g.fillStyle = this._bgcolor;\n    g.fillRect(x, y, w, h); \n  }\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  if (dl.isNode) {\n    renderer._imgload += 1;\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      renderer._imgload -= 1;\n      if (err) { dl.error(err); return; }\n      dl.log(\"LOAD IMAGE: \" + uri);\n      image.src = data;\n      image.loaded = true;\n    });\n  } else {\n    image = new Image();\n    url = dl.load.sanitizeUrl(dl.extend({url: uri}, config.load));\n    if (!url) { return; }\n    renderer._imgload += 1;\n    image.onload = function() {\n      dl.log(\"LOAD IMAGE: \" + url);\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/Bounds\":104,\"../../util/config\":107,\"./marks\":63,\"datalib\":20}],62:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":60,\"./Renderer\":61}],63:[function(require,module,exports){\nvar Bounds = require('../../util/Bounds'),\n    boundsCalc = require('../../util/boundscalc'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../util/Bounds\":104,\"../../util/boundscalc\":106,\"../../util/config\":107,\"./path\":64}],64:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../util/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area;\n  \n  if (o.orient === \"horizontal\") {\n    area = d3.svg.area()\n      .y(function(d) { return d.y; })\n      .x0(function(d) { return d.x; })\n      .x1(function(d) { return d.x + d.width; });\n  } else {\n    area = d3.svg.area()\n      .x(function(d) { return d.x; })\n      .y1(function(d) { return d.y; })\n      .y0(function(d) { return d.y + d.height; });\n  }\n  \n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/Bounds\":104}],65:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":107,\"./svg\":67,\"datalib\":20}],66:[function(require,module,exports){\nmodule.exports = {\n  Renderer: require('./Renderer')\n};\n\n},{\"./Renderer\":65}],67:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.load.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":107,\"datalib\":20}],68:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":20}],69:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad, bgcolor) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n\n  if (bgcolor != null) {\n    this._svg.style(\"background-color\", bgcolor);\n  }\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":71,\"datalib\":20}],70:[function(require,module,exports){\narguments[4][62][0].apply(exports,arguments)\n},{\"./Handler\":68,\"./Renderer\":69,\"dup\":62}],71:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = dl.load.sanitizeUrl(dl.extend({url: o.url}, config.load));\n  \n  if (url) {\n    this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  }\n\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index) {\n  var p = drawMark(g, scene, index, \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++);\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++);\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":107,\"datalib\":20}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder = require('./Encoder'),\n    bounds = require('../util/boundscalc'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n  var i, ilen, j, jlen, group, legend;\n      hasLegends = this._mark.marktype == C.GROUP \n        && dl.array(this._mark.def.legends).length > 0;\n\n  bounds.mark(this._mark, null, !hasLegends);\n\n  if(hasLegends) {\n    for(i=0, ilen=this._mark.items.length; i<ilen; ++i) {\n      group = this._mark.items[i];\n      group._legendPositions = null;\n      for(j=0, jlen=group.legendItems.length; j<jlen; ++j) {\n        legend = group.legendItems[j];\n        Encoder.update(this._graph, input.trans, \"vg_legendPosition\", legend.items);\n        bounds.mark(legend, null, true);\n      }\n    }\n\n    bounds.mark(this._mark, null, true);\n  }\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":34,\"../util/boundscalc\":106,\"../util/constants\":108,\"../util/debug\":109,\"./Encoder\":74,\"datalib\":20}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":34,\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../parse/data\":45,\"../util/constants\":108,\"../util/debug\":109,\"./Bounder\":72,\"./Encoder\":74,\"./Item\":76,\"datalib\":20}],74:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/boundscalc'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":34,\"../util/boundscalc\":106,\"../util/constants\":108,\"../util/debug\":109,\"datalib\":20}],75:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    parseLegends = require('../parse/legends'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n\n  scales = (def.legends||[]).reduce(function(acc, x) {\n    return (acc[x.size || x.shape || x.fill || x.stroke], acc);\n  }, scales);\n\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = dl.array(this._def.marks).length > 0,\n      hasAxes = dl.array(this._def.axes).length > 0,\n      hasLegends = dl.array(this._def.legends).length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n    if(hasLegends) buildLegends.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }\n\n    // Update legend data defs\n    if(hasLegends) {\n      parseLegends(builder._graph, builder._def.legends, group.legends, group);\n      group.legends.forEach(function(l, i) { l.def() });\n    }   \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n\n  group.legends = group.legends || [];\n  group.legendItems = group.legendItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nfunction buildLegends(input, group) {\n  var legends = group.legends,\n      legendItems = group.legendItems,\n      builder = this;\n\n  parseLegends(this._graph, this._def.legends, legends, group);\n  legends.forEach(function(l, i) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke(),\n        def = l.def(),\n        b = null;\n\n    legendItems[i] = {group: group, legendDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, legendItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.LEGEND, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":31,\"../dataflow/Node\":34,\"../parse/axes\":43,\"../parse/legends\":49,\"../util/constants\":108,\"../util/debug\":109,\"./Builder\":73,\"./Scale\":77,\"datalib\":20}],76:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],77:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      dataDrivenRange = false,\n      pad = def.padding || 0,\n      outer = def.outerPadding == null ? pad : def.outerPadding,\n      domain, sort, str, refs;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  // width-defined range\n  if (def.bandWidth) {\n    var bw = def.bandWidth,\n        len = domain.length,\n        start = rng[0] || 0,\n        space = def.points ? (pad*bw) : (pad*bw*(len-1) + 2*outer);\n    rng = [start, start + (bw * len + space)];\n  }\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points && (def.round || def.round == null)) {\n    scale.rangeRoundPoints(rng, pad);\n  } else if (def.points) {\n    scale.rangePoints(rng, pad);\n  } else if (def.round || def.round == null) {\n    scale.rangeRoundBands(rng, pad, outer);\n  } else {\n    scale.rangeBands(rng, pad, outer);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = dl.duplicate(def.range).map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":34,\"../dataflow/changeset\":36,\"../transforms/Aggregate\":81,\"../util/config\":107,\"../util/constants\":108,\"../util/debug\":109,\"datalib\":20}],78:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    boundsCalc = require('../util/boundscalc'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    boundsCalc.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":37,\"../util/boundscalc\":106,\"../util/constants\":108}],79:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickSubdivide = 0,\n      tickCount = config.axis.ticks,\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines:  null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title:  null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  }\n\n  function ingest(d) { return {data: d}; };\n\n  function getTickFormatString() {\n    return tickFormatString || (scale.type === 'log' ? \".1s\" : null);\n  }\n  \n  function buildTickFormat() {\n    var fmtStr = getTickFormatString();\n    if (scale.tickFormat) {\n      return scale.tickFormat(tickCount, fmtStr);\n    } else if (fmtStr) {\n      return ((scale.type === 'time')\n        ? d3.time.format(fmtStr)\n        : d3.format(fmtStr));\n    } else {\n      return String;\n    }\n  }\n  \n  function buildTicks(fmt) {\n    var ticks = {\n      major: tickValues,\n      minor: null\n    };\n    \n    if (ticks.major == null) {\n      ticks.major = scale.ticks\n        ? scale.ticks(tickCount)\n        : scale.domain();\n    }\n  \n    ticks.minor = vg_axisSubdivide(scale, ticks.major, tickSubdivide)\n      .map(ingest);\n  \n    ticks.major = ticks.major.map(function(d) {\n      return (d = ingest(d), d.label = fmt(d.data), d);\n    });\n    \n    return ticks;\n  }\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    var fmt = buildTickFormat();\n    var ticks = buildTicks(fmt);\n    var tdata = title ? [title].map(ingest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? ticks.major : []; };\n    axisDef.marks[1].from = function() { return ticks.major; };\n    axisDef.marks[2].from = function() { return ticks.minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.tickCount = function(x) {\n    if (!arguments.length) return tickCount;\n    tickCount = x;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isArray(offset)) {\n    var ofx = offset[0],\n        ofy = offset[1];\n\n    switch (orient) {\n      case \"left\":   { tpl.set(o, 'x', -ofx); tpl.set(o, 'y', ofy); break; }\n      case \"right\":  { tpl.set(o, 'x', width + ofx); tpl.set(o, 'y', ofy); break; }\n      case \"bottom\": { tpl.set(o, 'x', ofx); tpl.set(o, 'y', height + ofy); break; }\n      case \"top\":    { tpl.set(o, 'x', ofx); tpl.set(o, 'y', -ofy); break; }\n      default:       { tpl.set(o, 'x', ofx); tpl.set(o, 'y', ofy); }\n    }\n  } else {\n    if (dl.isObject(offset)) {\n      offset = -group.scale(offset.scale)(offset.value);\n    }\n\n    switch (orient) {\n      case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n      case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n      case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n      case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n      default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n    }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"../parse/mark\":50,\"../util/config\":107,\"datalib\":20}],80:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    parseProperties = require('../parse/properties'),\n    parseMark = require('../parse/mark'),\n    Gradient = require('../util/Gradient'),\n    config = require('../util/config');\n\nfunction lgnd(model) {\n  var size = null,\n      shape = null,\n      fill = null,\n      stroke = null,\n      spacing = null,\n      values = null,\n      format = null,\n      formatString = null,\n      title = undefined,\n      orient = \"right\",\n      offset = config.legend.offset,\n      padding = config.legend.padding,\n      legendDef,\n      tickArguments = [5],\n      legendStyle = {},\n      symbolStyle = {},\n      gradientStyle = {},\n      titleStyle = {},\n      labelStyle = {},\n      m = { // Legend marks as references for updates\n        titles:  null,\n        symbols: null,\n        labels:  null,\n        gradient: null\n      };\n\n  var legend = {},\n      legendDef = {};\n\n  function reset() { legendDef.type = null; }\n  function ingest(d, i) { return {data: d, index: i} }\n\n  legend.def = function() {\n    var scale = size || shape || fill || stroke;\n    \n    format = !formatString ? null : ((scale.type === 'time')\n      ? d3.time.format(formatString)\n      : d3.format(formatString));\n    \n    if (!legendDef.type) {\n      legendDef = (scale===fill || scale===stroke) && !discrete(scale.type)\n        ? quantDef(scale)\n        : ordinalDef(scale);      \n    }\n    legendDef.orient = orient;\n    legendDef.offset = offset;\n    legendDef.padding = padding;\n    return legendDef;\n  };\n\n  function discrete(type) {\n    return type===\"ordinal\" || type===\"quantize\"\n      || type===\"quantile\" || type===\"threshold\";\n  }\n\n  function ordinalDef(scale) {\n    var def = o_legend_def(size, shape, fill, stroke);\n\n    // generate data\n    var data = (values == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : values).map(ingest);\n    var fmt = format==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : format;\n    \n    // determine spacing between legend entries\n    var fs, range, offset, pad=5, domain = d3.range(data.length);\n    if (size) {\n      range = data.map(function(x) { return Math.sqrt(size(x.data)); });\n      offset = d3.max(range);\n      range = range.reduce(function(a,b,i,z) {\n          if (i > 0) a[i] = a[i-1] + z[i-1]/2 + pad;\n          return (a[i] += b/2, a); }, [0]).map(Math.round);\n    } else {\n      offset = Math.round(Math.sqrt(config.legend.symbolSize));\n      range = spacing\n        || (fs = labelStyle.fontSize) && (fs.value + pad)\n        || (config.legend.labelFontSize + pad);\n      range = domain.map(function(d,i) {\n        return Math.round(offset/2 + i*range);\n      });\n    }\n\n    // account for padding and title size\n    var sz = padding, ts;\n    if (title) {\n      ts = titleStyle.fontSize;\n      sz += 5 + ((ts && ts.value) || config.legend.titleFontSize);\n    }\n    for (var i=0, n=range.length; i<n; ++i) range[i] += sz;\n    \n    // build scale for label layout\n    var scale = {\n      name: \"legend\",\n      type: \"ordinal\",\n      points: true,\n      domain: domain,\n      range: range\n    };\n    \n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d) {\n      d.label = fmt(d.data);\n      d.offset = offset;\n    });\n    def.scales = [ scale ];\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return data; };\n    def.marks[2].from = def.marks[1].from;\n\n    return def;\n  }\n\n  function o_legend_def(size, shape, fill, stroke) {\n    // setup legend marks\n    var titles  = m.titles  || (m.titles  = vg_legendTitle()),\n        symbols = m.symbols || (m.symbols = vg_legendSymbols()),\n        labels  = m.labels  || (m.labels  = vg_vLegendLabels());\n\n    // extend legend marks\n    vg_legendSymbolExtend(symbols, size, shape, fill, stroke);\n    \n    // add / override custom style properties\n    dl.extend(titles.properties.update,  titleStyle);\n    dl.extend(symbols.properties.update, symbolStyle);\n    dl.extend(labels.properties.update,  labelStyle);\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    labels.properties.enter.x.offset += padding + 1;\n    symbols.properties.enter.x.offset = padding + 1;\n    labels.properties.update.x.offset += padding + 1;\n    symbols.properties.update.x.offset = padding + 1;\n\n    dl.extend(legendDef, {\n      type: \"group\",\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, \"group\", legendStyle),\n        vg_legendPosition: {\n          encode: vg_legendPosition,\n          signals: [], scales:[], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, symbols, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  function quantDef(scale) {\n    var def = q_legend_def(scale),\n        dom = scale.domain(),\n        data = dom.map(ingest),\n        width = (gradientStyle.width && gradientStyle.width.value) || config.legend.gradientWidth,\n        fmt = format==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : format;\n\n    // build scale for label layout\n    var layout = {\n      name: \"legend\",\n      type: scale.type,\n      round: true,\n      zero: false,\n      domain: [dom[0], dom[dom.length-1]],\n      range: [padding, width+padding]\n    };\n    if (scale.type===\"pow\") layout.exponent = scale.exponent();\n    \n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d,i) {\n      d.label = fmt(d.data);\n      d.align = i==(data.length-1) ? \"right\" : i==0 ? \"left\" : \"center\";\n    });\n    def.scales = [ layout ];\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return [1]; };\n    def.marks[2].from = function() { return data; };\n    return def;\n  }\n  \n  function q_legend_def(scale) {\n    // setup legend marks\n    var titles = m.title || (m.title = vg_legendTitle()),\n        gradient = m.gradient || (m.gradient = vg_legendGradient()),\n        labels = m.labels || (m.labels = vg_hLegendLabels()),\n        grad = new Gradient();\n\n    // setup color gradient\n    var dom = scale.domain(),\n        min = dom[0],\n        max = dom[dom.length-1],\n        f = scale.copy().domain([min, max]).range([0,1]);\n        \n    var stops = (scale.type !== \"linear\" && scale.ticks)\n      ? scale.ticks.call(scale, 15) : dom;\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length-1]) stops.push(max);\n\n    for (var i=0, n=stops.length; i<n; ++i) {\n      grad.stop(f(stops[i]), scale(stops[i]));\n    }\n    gradient.properties.enter.fill = {value: grad};\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update, titleStyle);\n    dl.extend(gradient.properties.update, gradientStyle);\n    dl.extend(labels.properties.update, labelStyle);\n\n    // account for gradient size\n    var gp = gradient.properties, gh = gradientStyle.height,\n        hh = (gh && gh.value) || gp.enter.height.value;\n    labels.properties.enter.y.value = hh;\n    labels.properties.update.y.value = hh;\n\n    // account for title size as needed\n    if (title) {\n      var tp = titles.properties, fs = titleStyle.fontSize,\n          sz = 4 + ((fs && fs.value) || tp.enter.fontSize.value);\n      gradient.properties.enter.y.value += sz;\n      labels.properties.enter.y.value += sz;\n      gradient.properties.update.y.value += sz;\n      labels.properties.update.y.value += sz;\n    }\n    \n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    gradient.properties.enter.x.value += padding;\n    gradient.properties.enter.y.value += padding;\n    labels.properties.enter.y.value += padding;\n    gradient.properties.update.x.value += padding;\n    gradient.properties.update.y.value += padding;\n    labels.properties.update.y.value += padding;\n\n    dl.extend(legendDef, {\n      type: \"group\",\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, \"group\", legendStyle),\n        vg_legendPosition: {\n          encode: vg_legendPosition,\n          signals: [], scales: [], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, gradient, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  legend.size = function(x) {\n    if (!arguments.length) return size;\n    if (size !== x) { size = x; reset(); }\n    return legend;\n  };\n\n  legend.shape = function(x) {\n    if (!arguments.length) return shape;\n    if (shape !== x) { shape = x; reset(); }\n    return legend;\n  };\n\n  legend.fill = function(x) {\n    if (!arguments.length) return fill;\n    if (fill !== x) { fill = x; reset(); }\n    return legend;\n  };\n  \n  legend.stroke = function(x) {\n    if (!arguments.length) return stroke;\n    if (stroke !== x) { stroke = x; reset(); }\n    return legend;\n  };\n\n  legend.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return legend;\n  };\n\n  legend.format = function(x) {\n    if (!arguments.length) return formatString;\n    if (formatString !== x) {\n      formatString = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    if (spacing !== +x) { spacing = +x; reset(); }\n    return legend;\n  };\n\n  legend.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x in vg_legendOrients ? x + \"\" : config.legend.orient;\n    return legend;\n  };\n\n  legend.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = +x;\n    return legend;\n  };\n\n  legend.values = function(x) {\n    if (!arguments.length) return values;\n    values = x;\n    return legend;\n  };\n\n  legend.legendProperties = function(x) {\n    if (!arguments.length) return legendStyle;\n    legendStyle = x;\n    return legend;\n  };\n\n  legend.symbolProperties = function(x) {\n    if (!arguments.length) return symbolStyle;\n    symbolStyle = x;\n    return legend;\n  };\n\n  legend.gradientProperties = function(x) {\n    if (!arguments.length) return gradientStyle;\n    gradientStyle = x;\n    return legend;\n  };\n\n  legend.labelProperties = function(x) {\n    if (!arguments.length) return labelStyle;\n    labelStyle = x;\n    return legend;\n  };\n  \n  legend.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    titleStyle = x;\n    return legend;\n  };\n\n  legend.reset = function() { reset(); };\n\n  return legend;\n};\n\nvar vg_legendOrients = {right: 1, left: 1};\n\nfunction vg_legendPosition(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item, gx,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      pad    = item.mark.def.padding * 2,\n      lw     = ~~item.bounds.width() + (item.width ? 0 : pad),\n      lh     = ~~item.bounds.height() + (item.height ? 0 : pad),\n      pos = group._legendPositions || \n        (group._legendPositions = {right: 0.5, left: 0.5});\n\n  o.x = 0.5;\n  o.width = lw;\n  o.y = pos[orient];\n  pos[orient] += (o.height = lh);\n\n  // HACK: use to estimate group bounds during animated transition\n  if (!trans && group.bounds) {\n    group.bounds.delta = group.bounds.x2 - group.width;\n  }\n\n  switch (orient) {\n    case \"left\":  {\n      gx = group.bounds ? group.bounds.x1 : 0;\n      o.x += gx - offset - lw;\n      break;\n    };\n    case \"right\": {\n      gx = group.width;\n      if (group.bounds) gx = trans\n        ? group.width + group.bounds.delta\n        : group.bounds.x2;\n      o.x += gx + offset;\n      break;\n    };\n  }\n  \n  if (trans) trans.interpolate(item, o);\n  var enc = item.mark.def.properties.enter.encode;\n  enc.call(enc, item, group, trans);\n}\n\nfunction vg_legendSymbolExtend(mark, size, shape, fill, stroke) {\n  var e = mark.properties.enter,\n      u = mark.properties.update;\n  if (size)   e.size   = u.size   = {scale: size.scaleName,   field: \"data\"};\n  if (shape)  e.shape  = u.shape  = {scale: shape.scaleName,  field: \"data\"};\n  if (fill)   e.fill   = u.fill   = {scale: fill.scaleName,   field: \"data\"};\n  if (stroke) e.stroke = u.stroke = {scale: stroke.scaleName, field: \"data\"};\n}\n\nfunction vg_legendTitle() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        fill: {value: cfg.titleColor},\n        font: {value: cfg.titleFont},\n        fontSize: {value: cfg.titleFontSize},\n        fontWeight: {value: cfg.titleFontWeight},\n        baseline: {value: \"top\"},\n        text: {field: \"data\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_legendSymbols() {\n  var cfg = config.legend;\n  return {\n    type: \"symbol\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {field: \"offset\", mult: 0.5},\n        y: {scale: \"legend\", field: \"index\"},\n        shape: {value: cfg.symbolShape},\n        size: {value: cfg.symbolSize},\n        stroke: {value: cfg.symbolColor},\n        strokeWidth: {value: cfg.symbolStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {field: \"offset\", mult: 0.5},\n        y: {scale: \"legend\", field: \"index\"},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vg_vLegendLabels() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {field: \"offset\", offset: 5},\n        y: {scale: \"legend\", field: \"index\"},\n        fill: {value: cfg.labelColor},\n        font: {value: cfg.labelFont},\n        fontSize: {value: cfg.labelFontSize},\n        align: {value: cfg.labelAlign},\n        baseline: {value: cfg.labelBaseline},\n        text: {field: \"label\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        opacity: {value: 1},\n        x: {field: \"offset\", offset: 5},\n        y: {scale: \"legend\", field: \"index\"},\n      }\n    }\n  };\n}\n\nfunction vg_legendGradient() {\n  var cfg = config.legend;\n  return {\n    type: \"rect\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        width: {value: cfg.gradientWidth},\n        height: {value: cfg.gradientHeight},\n        stroke: {value: cfg.gradientStrokeColor},\n        strokeWidth: {value: cfg.gradientStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {value: 0},\n        y: {value: 0},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vg_hLegendLabels() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {scale: \"legend\", field: \"data\"},\n        y: {value: 20},\n        dy: {value: 2},\n        fill: {value: cfg.labelColor},\n        font: {value: cfg.labelFont},\n        fontSize: {value: cfg.labelFontSize},\n        align: {field: \"align\"},\n        baseline: {value: \"top\"},\n        text: {field: \"label\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {scale: \"legend\", field: \"data\"},\n        y: {value: 20},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nmodule.exports = lgnd;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../parse/mark\":50,\"../parse/properties\":55,\"../util/Gradient\":105,\"../util/config\":107,\"datalib\":20}],81:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../util/constants\":108,\"../util/debug\":109,\"./GroupBy\":92,\"./Transform\":98,\"./measures\":103,\"datalib\":20}],82:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":31,\"./Transform\":98}],83:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n\n},{\"../dataflow/tuple\":37,\"./Transform\":98,\"datalib\":20}],84:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":31,\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../util/debug\":109,\"./Transform\":98}],85:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../util/constants\":108,\"../util/debug\":109,\"./GroupBy\":92,\"./Transform\":98}],86:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":36,\"../parse/expr\":47,\"../util/constants\":108,\"../util/debug\":109,\"./Transform\":98}],87:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../util/debug\":109,\"./Transform\":98}],88:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"./Transform\":98}],89:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":37,\"../parse/expr\":47,\"../util/constants\":108,\"../util/debug\":109,\"./Transform\":98}],90:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"./Transform\":98,\"datalib\":20}],91:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"./Geo\":90,\"./Transform\":98,\"datalib\":20}],92:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":36,\"../dataflow/tuple\":37,\"../util/constants\":108,\"./Transform\":98}],93:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":37,\"./Transform\":98}],94:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":47,\"../util/constants\":108,\"datalib\":20}],95:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"./BatchTransform\":82,\"./Transform\":98,\"datalib\":20}],96:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":47,\"../util/debug\":109,\"./Transform\":98,\"datalib\":20}],97:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":37,\"./BatchTransform\":82,\"./Transform\":98,\"datalib\":20}],98:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":34,\"../util/constants\":108,\"./Parameter\":94}],99:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":37,\"./BatchTransform\":82,\"./Transform\":98,\"datalib\":20}],100:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":37,\"../util/debug\":109,\"./GroupBy\":92,\"./Transform\":98}],101:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":31,\"../util/debug\":109,\"./Transform\":98,\"datalib\":20}],102:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":81,\"./Bin\":83,\"./Cross\":84,\"./Facet\":85,\"./Filter\":86,\"./Fold\":87,\"./Force\":88,\"./Formula\":89,\"./Geo\":90,\"./GeoPath\":91,\"./LinkPath\":93,\"./Pie\":95,\"./Sort\":96,\"./Stack\":97,\"./Treemap\":99,\"./Unique\":100,\"./Zip\":101}],103:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":37,\"../util/constants\":108,\"../util/quickselect\":110,\"datalib\":20}],104:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],105:[function(require,module,exports){\nvar vg_gradient_id = 0;\n\nfunction gradient(type) {\n  this.id = \"grad_\" + (vg_gradient_id++);\n  this.type = type || \"linear\";\n  this.stops = [];\n  this.x1 = 0;\n  this.x2 = 1;\n  this.y1 = 0;\n  this.y2 = 0;\n};\n\nvar prototype = gradient.prototype;\n\nprototype.stop = function(offset, color) {\n  this.stops.push({\n    offset: offset,\n    color: color\n  });\n  return this;\n};\n\nmodule.exports = gradient;\n},{}],106:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../util/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  return gfx || (gfx = (dl.isNode\n    ? new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null))(1,1)\n    : d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../render/canvas/path\":64,\"../util/Bounds\":104,\"./config\":107,\"datalib\":20}],107:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],108:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n  LEGEND: \"legend\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],109:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":107}],110:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"datalib\":20}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x));\n};\n\nproto._newcell = function(x) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      if (cell.collect) {\n        cell.data.values();\n      }\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return (this._get = null, this._add);\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._get = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m ? get(m) : +Infinity;\n};\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n","var json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;","var util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\ntemplate.source = source;\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding,\n      bg = this._bgcolor;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad, bg);\n  } else {\n    this.initCanvas(w, h, pad, bg);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad, bg) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + (pad ? pad.left + pad.right : 0),\n      th = h + (pad ? pad.top + pad.bottom : 0),\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n  this._renderer.background(bg);\n};\n\nprototype.initSVG = function(w, h, pad, bg) {\n  var tw = w + (pad ? pad.left + pad.right : 0),\n      th = h + (pad ? pad.top + pad.bottom : 0);\n      \n  // configure renderer\n  this._renderer.initialize(this._el, tw, th, pad, bg);\n};\n\nmodule.exports = HeadlessView;\n","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._bgcolor = null;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.background = function(bgcolor) {\n  if (!arguments.length) return this._bgcolor;\n  if (this._bgcolor !== bgcolor) {\n    this._bgcolor = bgcolor;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding, bg = v._bgcolor;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad, bg);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .background(defs.background)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // axis tick count\n  axis.tickCount(def.ticks || config.axis.ticks);\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function parseBg(bg) {\n  // return null if input is null or undefined\n  if (bg == null) return null;\n  // run through d3 rgb to sanity check\n  return d3.rgb(bg) + \"\";  \n};","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var lgnd = require('../scene/legend'),\n    config = require('../util/config');\n\nfunction legends(model, spec, legends, group) {\n  (spec || []).forEach(function(def, index) {\n    legends[index] = legends[index] || lgnd(model);\n    legend(def, index, legends[index], group);\n  });\n};\n\nfunction legend(def, index, legend, group) {\n  // legend scales\n  legend.size  (def.size   ? group.scale(def.size)   : null);\n  legend.shape (def.shape  ? group.scale(def.shape)  : null);\n  legend.fill  (def.fill   ? group.scale(def.fill)   : null);\n  legend.stroke(def.stroke ? group.scale(def.stroke) : null);\n\n  // legend orientation\n  if (def.orient) legend.orient(def.orient);\n\n  // legend offset\n  if (def.offset != null) legend.offset(def.offset);\n\n  // legend title\n  legend.title(def.title || null);\n\n  // legend values\n  legend.values(def.values || null);\n\n  // legend label formatting\n  legend.format(def.format !== undefined ? def.format : null);\n\n  // style properties\n  var p = def.properties;\n  legend.titleProperties(p && p.title || {});\n  legend.labelProperties(p && p.labels || {});\n  legend.legendProperties(p && p.legend || {});\n  legend.symbolProperties(p && p.symbols || {});\n  legend.gradientProperties(p && p.gradient || {});\n}\n\nmodule.exports = legends;","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.xc) {\n    if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.xc - o.width/2));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.xc);\";\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n\n  if (vars.yc) {\n    if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.yc - o.height/2));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.yc);\";\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.template !== undefined) {\n    val = dl.template.source(ref.template, \"item.datum\");\n  }\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nfunction parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init);\n\n    if(s.init && s.init.expr) {\n      s.init.expr = expr(s.init.expr);\n      signal.value(exprVal(model, s.init));\n    }\n\n    if(s.expr) {\n      s.expr = expr(s.expr);\n      signal.evaluate = function(input) {\n        signal.value(exprVal(model, s));\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, s.expr.signals);\n      s.expr.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n\nfunction exprVal(model, spec) {\n  var e = spec.expr,\n      val = expr.eval(model, e.fn, null, null, null, null, e.signals);\n  return spec.scale ? scale(model, spec, val) : val;\n}\n\nparseSignals.scale = function scale(model, spec, value) {\n  var def = spec.scale,\n      name  = def.name || def.signal || def,\n      scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n  if(!scope || !scope.scale) {\n    scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n  }\n\n  var scale = scope.scale(name);\n  if(!scale) return value;\n  return def.invert ? scale.invert(value) : scale(value);\n}\n\nmodule.exports = parseSignals;","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parseBg = require('../parse/background'),\n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      background: parseBg(spec.background),\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    parseSignals = require('./signals'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = parseSignals.scale(model, spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = parseSignals.scale(model, h.spec, val);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._down = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mouseup\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousedown\");\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"click\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\nprototype.mousedown = function(evt) {\n  this._down = this._active;\n  this.fire(\"mousedown\", evt);\n};\n\nprototype.click = function(evt) {\n  if (this._down === this._active) {\n    this.fire(\"click\", evt);\n    this._down = null;\n  }\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../util/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._bgcolor = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad, bgcolor) {\n  this._el = el;\n\n  this.background(bgcolor);\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.background = function(bgcolor) {\n  this._bgcolor = bgcolor;\n  return this;\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  this.clear(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      this.clear(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.clear = function(x, y, w, h) {\n  var g = this._ctx;\n\n  g.clearRect(x, y, w, h);\n  if (this._bgcolor != null) {\n    g.fillStyle = this._bgcolor;\n    g.fillRect(x, y, w, h); \n  }\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  if (dl.isNode) {\n    renderer._imgload += 1;\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      renderer._imgload -= 1;\n      if (err) { dl.error(err); return; }\n      dl.log(\"LOAD IMAGE: \" + uri);\n      image.src = data;\n      image.loaded = true;\n    });\n  } else {\n    image = new Image();\n    url = dl.load.sanitizeUrl(dl.extend({url: uri}, config.load));\n    if (!url) { return; }\n    renderer._imgload += 1;\n    image.onload = function() {\n      dl.log(\"LOAD IMAGE: \" + url);\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../util/Bounds'),\n    boundsCalc = require('../../util/boundscalc'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../util/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area;\n  \n  if (o.orient === \"horizontal\") {\n    area = d3.svg.area()\n      .y(function(d) { return d.y; })\n      .x0(function(d) { return d.x; })\n      .x1(function(d) { return d.x + d.width; });\n  } else {\n    area = d3.svg.area()\n      .x(function(d) { return d.x; })\n      .y1(function(d) { return d.y; })\n      .y0(function(d) { return d.y + d.height; });\n  }\n  \n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n","module.exports = {\n  Renderer: require('./Renderer')\n};\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.load.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad, bgcolor) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n\n  if (bgcolor != null) {\n    this._svg.style(\"background-color\", bgcolor);\n  }\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = dl.load.sanitizeUrl(dl.extend({url: o.url}, config.load));\n  \n  if (url) {\n    this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  }\n\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index) {\n  var p = drawMark(g, scene, index, \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++);\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++);\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder = require('./Encoder'),\n    bounds = require('../util/boundscalc'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n  var i, ilen, j, jlen, group, legend;\n      hasLegends = this._mark.marktype == C.GROUP \n        && dl.array(this._mark.def.legends).length > 0;\n\n  bounds.mark(this._mark, null, !hasLegends);\n\n  if(hasLegends) {\n    for(i=0, ilen=this._mark.items.length; i<ilen; ++i) {\n      group = this._mark.items[i];\n      group._legendPositions = null;\n      for(j=0, jlen=group.legendItems.length; j<jlen; ++j) {\n        legend = group.legendItems[j];\n        Encoder.update(this._graph, input.trans, \"vg_legendPosition\", legend.items);\n        bounds.mark(legend, null, true);\n      }\n    }\n\n    bounds.mark(this._mark, null, true);\n  }\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/boundscalc'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    parseLegends = require('../parse/legends'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n\n  scales = (def.legends||[]).reduce(function(acc, x) {\n    return (acc[x.size || x.shape || x.fill || x.stroke], acc);\n  }, scales);\n\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = dl.array(this._def.marks).length > 0,\n      hasAxes = dl.array(this._def.axes).length > 0,\n      hasLegends = dl.array(this._def.legends).length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n    if(hasLegends) buildLegends.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }\n\n    // Update legend data defs\n    if(hasLegends) {\n      parseLegends(builder._graph, builder._def.legends, group.legends, group);\n      group.legends.forEach(function(l, i) { l.def() });\n    }   \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n\n  group.legends = group.legends || [];\n  group.legendItems = group.legendItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nfunction buildLegends(input, group) {\n  var legends = group.legends,\n      legendItems = group.legendItems,\n      builder = this;\n\n  parseLegends(this._graph, this._def.legends, legends, group);\n  legends.forEach(function(l, i) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke(),\n        def = l.def(),\n        b = null;\n\n    legendItems[i] = {group: group, legendDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, legendItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.LEGEND, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      dataDrivenRange = false,\n      pad = def.padding || 0,\n      outer = def.outerPadding == null ? pad : def.outerPadding,\n      domain, sort, str, refs;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  // width-defined range\n  if (def.bandWidth) {\n    var bw = def.bandWidth,\n        len = domain.length,\n        start = rng[0] || 0,\n        space = def.points ? (pad*bw) : (pad*bw*(len-1) + 2*outer);\n    rng = [start, start + (bw * len + space)];\n  }\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points && (def.round || def.round == null)) {\n    scale.rangeRoundPoints(rng, pad);\n  } else if (def.points) {\n    scale.rangePoints(rng, pad);\n  } else if (def.round || def.round == null) {\n    scale.rangeRoundBands(rng, pad, outer);\n  } else {\n    scale.rangeBands(rng, pad, outer);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if (!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if (uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if (uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = dl.duplicate(def.range).map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    boundsCalc = require('../util/boundscalc'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    boundsCalc.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickSubdivide = 0,\n      tickCount = config.axis.ticks,\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines:  null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title:  null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  }\n\n  function ingest(d) { return {data: d}; };\n\n  function getTickFormatString() {\n    return tickFormatString || (scale.type === 'log' ? \".1s\" : null);\n  }\n  \n  function buildTickFormat() {\n    var fmtStr = getTickFormatString();\n    if (scale.tickFormat) {\n      return scale.tickFormat(tickCount, fmtStr);\n    } else if (fmtStr) {\n      return ((scale.type === 'time')\n        ? d3.time.format(fmtStr)\n        : d3.format(fmtStr));\n    } else {\n      return String;\n    }\n  }\n  \n  function buildTicks(fmt) {\n    var ticks = {\n      major: tickValues,\n      minor: null\n    };\n    \n    if (ticks.major == null) {\n      ticks.major = scale.ticks\n        ? scale.ticks(tickCount)\n        : scale.domain();\n    }\n  \n    ticks.minor = vg_axisSubdivide(scale, ticks.major, tickSubdivide)\n      .map(ingest);\n  \n    ticks.major = ticks.major.map(function(d) {\n      return (d = ingest(d), d.label = fmt(d.data), d);\n    });\n    \n    return ticks;\n  }\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    var fmt = buildTickFormat();\n    var ticks = buildTicks(fmt);\n    var tdata = title ? [title].map(ingest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? ticks.major : []; };\n    axisDef.marks[1].from = function() { return ticks.major; };\n    axisDef.marks[2].from = function() { return ticks.minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.tickCount = function(x) {\n    if (!arguments.length) return tickCount;\n    tickCount = x;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isArray(offset)) {\n    var ofx = offset[0],\n        ofy = offset[1];\n\n    switch (orient) {\n      case \"left\":   { tpl.set(o, 'x', -ofx); tpl.set(o, 'y', ofy); break; }\n      case \"right\":  { tpl.set(o, 'x', width + ofx); tpl.set(o, 'y', ofy); break; }\n      case \"bottom\": { tpl.set(o, 'x', ofx); tpl.set(o, 'y', height + ofy); break; }\n      case \"top\":    { tpl.set(o, 'x', ofx); tpl.set(o, 'y', -ofy); break; }\n      default:       { tpl.set(o, 'x', ofx); tpl.set(o, 'y', ofy); }\n    }\n  } else {\n    if (dl.isObject(offset)) {\n      offset = -group.scale(offset.scale)(offset.value);\n    }\n\n    switch (orient) {\n      case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n      case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n      case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n      case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n      default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n    }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    parseProperties = require('../parse/properties'),\n    parseMark = require('../parse/mark'),\n    Gradient = require('../util/Gradient'),\n    config = require('../util/config');\n\nfunction lgnd(model) {\n  var size = null,\n      shape = null,\n      fill = null,\n      stroke = null,\n      spacing = null,\n      values = null,\n      format = null,\n      formatString = null,\n      title = undefined,\n      orient = \"right\",\n      offset = config.legend.offset,\n      padding = config.legend.padding,\n      legendDef,\n      tickArguments = [5],\n      legendStyle = {},\n      symbolStyle = {},\n      gradientStyle = {},\n      titleStyle = {},\n      labelStyle = {},\n      m = { // Legend marks as references for updates\n        titles:  null,\n        symbols: null,\n        labels:  null,\n        gradient: null\n      };\n\n  var legend = {},\n      legendDef = {};\n\n  function reset() { legendDef.type = null; }\n  function ingest(d, i) { return {data: d, index: i} }\n\n  legend.def = function() {\n    var scale = size || shape || fill || stroke;\n    \n    format = !formatString ? null : ((scale.type === 'time')\n      ? d3.time.format(formatString)\n      : d3.format(formatString));\n    \n    if (!legendDef.type) {\n      legendDef = (scale===fill || scale===stroke) && !discrete(scale.type)\n        ? quantDef(scale)\n        : ordinalDef(scale);      \n    }\n    legendDef.orient = orient;\n    legendDef.offset = offset;\n    legendDef.padding = padding;\n    return legendDef;\n  };\n\n  function discrete(type) {\n    return type===\"ordinal\" || type===\"quantize\"\n      || type===\"quantile\" || type===\"threshold\";\n  }\n\n  function ordinalDef(scale) {\n    var def = o_legend_def(size, shape, fill, stroke);\n\n    // generate data\n    var data = (values == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : values).map(ingest);\n    var fmt = format==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : format;\n    \n    // determine spacing between legend entries\n    var fs, range, offset, pad=5, domain = d3.range(data.length);\n    if (size) {\n      range = data.map(function(x) { return Math.sqrt(size(x.data)); });\n      offset = d3.max(range);\n      range = range.reduce(function(a,b,i,z) {\n          if (i > 0) a[i] = a[i-1] + z[i-1]/2 + pad;\n          return (a[i] += b/2, a); }, [0]).map(Math.round);\n    } else {\n      offset = Math.round(Math.sqrt(config.legend.symbolSize));\n      range = spacing\n        || (fs = labelStyle.fontSize) && (fs.value + pad)\n        || (config.legend.labelFontSize + pad);\n      range = domain.map(function(d,i) {\n        return Math.round(offset/2 + i*range);\n      });\n    }\n\n    // account for padding and title size\n    var sz = padding, ts;\n    if (title) {\n      ts = titleStyle.fontSize;\n      sz += 5 + ((ts && ts.value) || config.legend.titleFontSize);\n    }\n    for (var i=0, n=range.length; i<n; ++i) range[i] += sz;\n    \n    // build scale for label layout\n    var scale = {\n      name: \"legend\",\n      type: \"ordinal\",\n      points: true,\n      domain: domain,\n      range: range\n    };\n    \n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d) {\n      d.label = fmt(d.data);\n      d.offset = offset;\n    });\n    def.scales = [ scale ];\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return data; };\n    def.marks[2].from = def.marks[1].from;\n\n    return def;\n  }\n\n  function o_legend_def(size, shape, fill, stroke) {\n    // setup legend marks\n    var titles  = m.titles  || (m.titles  = vg_legendTitle()),\n        symbols = m.symbols || (m.symbols = vg_legendSymbols()),\n        labels  = m.labels  || (m.labels  = vg_vLegendLabels());\n\n    // extend legend marks\n    vg_legendSymbolExtend(symbols, size, shape, fill, stroke);\n    \n    // add / override custom style properties\n    dl.extend(titles.properties.update,  titleStyle);\n    dl.extend(symbols.properties.update, symbolStyle);\n    dl.extend(labels.properties.update,  labelStyle);\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    labels.properties.enter.x.offset += padding + 1;\n    symbols.properties.enter.x.offset = padding + 1;\n    labels.properties.update.x.offset += padding + 1;\n    symbols.properties.update.x.offset = padding + 1;\n\n    dl.extend(legendDef, {\n      type: \"group\",\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, \"group\", legendStyle),\n        vg_legendPosition: {\n          encode: vg_legendPosition,\n          signals: [], scales:[], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, symbols, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  function quantDef(scale) {\n    var def = q_legend_def(scale),\n        dom = scale.domain(),\n        data = dom.map(ingest),\n        width = (gradientStyle.width && gradientStyle.width.value) || config.legend.gradientWidth,\n        fmt = format==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : format;\n\n    // build scale for label layout\n    var layout = {\n      name: \"legend\",\n      type: scale.type,\n      round: true,\n      zero: false,\n      domain: [dom[0], dom[dom.length-1]],\n      range: [padding, width+padding]\n    };\n    if (scale.type===\"pow\") layout.exponent = scale.exponent();\n    \n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d,i) {\n      d.label = fmt(d.data);\n      d.align = i==(data.length-1) ? \"right\" : i==0 ? \"left\" : \"center\";\n    });\n    def.scales = [ layout ];\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return [1]; };\n    def.marks[2].from = function() { return data; };\n    return def;\n  }\n  \n  function q_legend_def(scale) {\n    // setup legend marks\n    var titles = m.title || (m.title = vg_legendTitle()),\n        gradient = m.gradient || (m.gradient = vg_legendGradient()),\n        labels = m.labels || (m.labels = vg_hLegendLabels()),\n        grad = new Gradient();\n\n    // setup color gradient\n    var dom = scale.domain(),\n        min = dom[0],\n        max = dom[dom.length-1],\n        f = scale.copy().domain([min, max]).range([0,1]);\n        \n    var stops = (scale.type !== \"linear\" && scale.ticks)\n      ? scale.ticks.call(scale, 15) : dom;\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length-1]) stops.push(max);\n\n    for (var i=0, n=stops.length; i<n; ++i) {\n      grad.stop(f(stops[i]), scale(stops[i]));\n    }\n    gradient.properties.enter.fill = {value: grad};\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update, titleStyle);\n    dl.extend(gradient.properties.update, gradientStyle);\n    dl.extend(labels.properties.update, labelStyle);\n\n    // account for gradient size\n    var gp = gradient.properties, gh = gradientStyle.height,\n        hh = (gh && gh.value) || gp.enter.height.value;\n    labels.properties.enter.y.value = hh;\n    labels.properties.update.y.value = hh;\n\n    // account for title size as needed\n    if (title) {\n      var tp = titles.properties, fs = titleStyle.fontSize,\n          sz = 4 + ((fs && fs.value) || tp.enter.fontSize.value);\n      gradient.properties.enter.y.value += sz;\n      labels.properties.enter.y.value += sz;\n      gradient.properties.update.y.value += sz;\n      labels.properties.update.y.value += sz;\n    }\n    \n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    gradient.properties.enter.x.value += padding;\n    gradient.properties.enter.y.value += padding;\n    labels.properties.enter.y.value += padding;\n    gradient.properties.update.x.value += padding;\n    gradient.properties.update.y.value += padding;\n    labels.properties.update.y.value += padding;\n\n    dl.extend(legendDef, {\n      type: \"group\",\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, \"group\", legendStyle),\n        vg_legendPosition: {\n          encode: vg_legendPosition,\n          signals: [], scales: [], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, gradient, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  legend.size = function(x) {\n    if (!arguments.length) return size;\n    if (size !== x) { size = x; reset(); }\n    return legend;\n  };\n\n  legend.shape = function(x) {\n    if (!arguments.length) return shape;\n    if (shape !== x) { shape = x; reset(); }\n    return legend;\n  };\n\n  legend.fill = function(x) {\n    if (!arguments.length) return fill;\n    if (fill !== x) { fill = x; reset(); }\n    return legend;\n  };\n  \n  legend.stroke = function(x) {\n    if (!arguments.length) return stroke;\n    if (stroke !== x) { stroke = x; reset(); }\n    return legend;\n  };\n\n  legend.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return legend;\n  };\n\n  legend.format = function(x) {\n    if (!arguments.length) return formatString;\n    if (formatString !== x) {\n      formatString = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    if (spacing !== +x) { spacing = +x; reset(); }\n    return legend;\n  };\n\n  legend.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x in vg_legendOrients ? x + \"\" : config.legend.orient;\n    return legend;\n  };\n\n  legend.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = +x;\n    return legend;\n  };\n\n  legend.values = function(x) {\n    if (!arguments.length) return values;\n    values = x;\n    return legend;\n  };\n\n  legend.legendProperties = function(x) {\n    if (!arguments.length) return legendStyle;\n    legendStyle = x;\n    return legend;\n  };\n\n  legend.symbolProperties = function(x) {\n    if (!arguments.length) return symbolStyle;\n    symbolStyle = x;\n    return legend;\n  };\n\n  legend.gradientProperties = function(x) {\n    if (!arguments.length) return gradientStyle;\n    gradientStyle = x;\n    return legend;\n  };\n\n  legend.labelProperties = function(x) {\n    if (!arguments.length) return labelStyle;\n    labelStyle = x;\n    return legend;\n  };\n  \n  legend.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    titleStyle = x;\n    return legend;\n  };\n\n  legend.reset = function() { reset(); };\n\n  return legend;\n};\n\nvar vg_legendOrients = {right: 1, left: 1};\n\nfunction vg_legendPosition(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item, gx,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      pad    = item.mark.def.padding * 2,\n      lw     = ~~item.bounds.width() + (item.width ? 0 : pad),\n      lh     = ~~item.bounds.height() + (item.height ? 0 : pad),\n      pos = group._legendPositions || \n        (group._legendPositions = {right: 0.5, left: 0.5});\n\n  o.x = 0.5;\n  o.width = lw;\n  o.y = pos[orient];\n  pos[orient] += (o.height = lh);\n\n  // HACK: use to estimate group bounds during animated transition\n  if (!trans && group.bounds) {\n    group.bounds.delta = group.bounds.x2 - group.width;\n  }\n\n  switch (orient) {\n    case \"left\":  {\n      gx = group.bounds ? group.bounds.x1 : 0;\n      o.x += gx - offset - lw;\n      break;\n    };\n    case \"right\": {\n      gx = group.width;\n      if (group.bounds) gx = trans\n        ? group.width + group.bounds.delta\n        : group.bounds.x2;\n      o.x += gx + offset;\n      break;\n    };\n  }\n  \n  if (trans) trans.interpolate(item, o);\n  var enc = item.mark.def.properties.enter.encode;\n  enc.call(enc, item, group, trans);\n}\n\nfunction vg_legendSymbolExtend(mark, size, shape, fill, stroke) {\n  var e = mark.properties.enter,\n      u = mark.properties.update;\n  if (size)   e.size   = u.size   = {scale: size.scaleName,   field: \"data\"};\n  if (shape)  e.shape  = u.shape  = {scale: shape.scaleName,  field: \"data\"};\n  if (fill)   e.fill   = u.fill   = {scale: fill.scaleName,   field: \"data\"};\n  if (stroke) e.stroke = u.stroke = {scale: stroke.scaleName, field: \"data\"};\n}\n\nfunction vg_legendTitle() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        fill: {value: cfg.titleColor},\n        font: {value: cfg.titleFont},\n        fontSize: {value: cfg.titleFontSize},\n        fontWeight: {value: cfg.titleFontWeight},\n        baseline: {value: \"top\"},\n        text: {field: \"data\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_legendSymbols() {\n  var cfg = config.legend;\n  return {\n    type: \"symbol\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {field: \"offset\", mult: 0.5},\n        y: {scale: \"legend\", field: \"index\"},\n        shape: {value: cfg.symbolShape},\n        size: {value: cfg.symbolSize},\n        stroke: {value: cfg.symbolColor},\n        strokeWidth: {value: cfg.symbolStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {field: \"offset\", mult: 0.5},\n        y: {scale: \"legend\", field: \"index\"},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vg_vLegendLabels() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {field: \"offset\", offset: 5},\n        y: {scale: \"legend\", field: \"index\"},\n        fill: {value: cfg.labelColor},\n        font: {value: cfg.labelFont},\n        fontSize: {value: cfg.labelFontSize},\n        align: {value: cfg.labelAlign},\n        baseline: {value: cfg.labelBaseline},\n        text: {field: \"label\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        opacity: {value: 1},\n        x: {field: \"offset\", offset: 5},\n        y: {scale: \"legend\", field: \"index\"},\n      }\n    }\n  };\n}\n\nfunction vg_legendGradient() {\n  var cfg = config.legend;\n  return {\n    type: \"rect\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        width: {value: cfg.gradientWidth},\n        height: {value: cfg.gradientHeight},\n        stroke: {value: cfg.gradientStrokeColor},\n        strokeWidth: {value: cfg.gradientStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {value: 0},\n        y: {value: 0},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vg_hLegendLabels() {\n  var cfg = config.legend;\n  return {\n    type: \"text\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        x: {scale: \"legend\", field: \"data\"},\n        y: {value: 20},\n        dy: {value: 2},\n        fill: {value: cfg.labelColor},\n        font: {value: cfg.labelFont},\n        fontSize: {value: cfg.labelFontSize},\n        align: {field: \"align\"},\n        baseline: {value: \"top\"},\n        text: {field: \"label\"},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {scale: \"legend\", field: \"data\"},\n        y: {value: 20},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nmodule.exports = lgnd;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var vg_gradient_id = 0;\n\nfunction gradient(type) {\n  this.id = \"grad_\" + (vg_gradient_id++);\n  this.type = type || \"linear\";\n  this.stops = [];\n  this.x1 = 0;\n  this.x2 = 1;\n  this.y1 = 0;\n  this.y2 = 0;\n};\n\nvar prototype = gradient.prototype;\n\nprototype.stop = function(offset, color) {\n  this.stops.push({\n    offset: offset,\n    color: color\n  });\n  return this;\n};\n\nmodule.exports = gradient;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../util/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  return gfx || (gfx = (dl.isNode\n    ? new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null))(1,1)\n    : d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n  LEGEND: \"legend\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};","var dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};"],"sourceRoot":"/source/"}