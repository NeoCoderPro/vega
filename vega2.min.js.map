{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src","vega2.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/GroupBy.js","src/transforms/Parameter.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/bins.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/index.js","src/util/load.js","src/util/quickselect.js","src/util/read.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","util","config","./core/View","./dataflow/Datasource","./dataflow/Graph","./dataflow/Node","./dataflow/changeset","./parse/spec","./scene/Builder","./scene/GroupBuilder","./transforms/index","./util/config","./util/index",2,"./lib/heap",3,"Heap","defaultCmp","floor","heapify","heappop","heappush","heappushpop","heapreplace","insort","min","nlargest","nsmallest","updateItem","_siftdown","_siftup","Math","x","y","lo","hi","cmp","mid","splice","apply","concat","array","item","push","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","reverse","pos","indexOf","elem","result","slice","sort","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","replace","pushpop","prototype","peek","contains","clear","empty","size","clone","heap","toArray","insert","top","front","has","copy","root","factory",4,"bounds","b","union","x1","Number","MAX_VALUE","y1","x2","y2","set","add","expand","d","round","ceil","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",5,"Model","_defs","_predicates","_scene","graph","_node","_builder","predicates","name","m","isArray","forEach","proto","defs","arguments","data","addListener","pipeline","predicate","renderer","removeListener","disconnect","marks","connect","p","fire","cs","create","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder","../util/index",6,"d3","parseStreams","canvas","svg","Transition","el","model","_el","_model","_width","__width","_height","__height","_autopad","_padding","left","bottom","right","_viewport","_renderer","_handler","_io","initialize","keys","duplicate","parentNode","_strict","padding","pad","isString","resize","autopad","opt","inset","autopadInset","max","update","viewport","type","_build","render","prevHandler","v","w","h","select","remove","append","attr","style","node","Renderer","Handler","handlers","on","handler","trans","duration","ease","undefined","reflow","_renderNode","router","evaluate","input","debug","start","items","ds","revises","finalize","last","off","../parse/streams","../render/canvas/index","../render/svg/index","../scene/Transition","../util/config",7,"Collector","init","_data","collector","mod","rem","ids","reduce","_id","filter","../util/constants","./Node","./changeset",8,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","tuple","source","src","prev","map","ingest","where","field","func","tuple_ids","fields","next","values","some","delta","out","unshift","output","listener","dest","_srcMap","derive","./Collector","./tuple",9,"_stamp","_rank","_signals","doNotPropagate","signal","forEachNode","branch","fn","len","Signal","signalValues","sg","value","signalRef","ref","shift","Function","str","join","schedule","rank","pulse","reflowed","pq","stamp","_listeners","c","dependency","DATA","signals","SIGNALS","reevaluate","run","./Datasource","./Signal",10,"REEVAL","FIELDS","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","bool","listeners","q","cur","foundSending","reeval","prop","k",11,"_value","val",12,"reset_prev",13,"datum","isObject","tuple_id","Object","reset",14,"codegen_wrap","ast","retval","codegen","String","generator","CODEGEN_TYPES","constants","functions","idWhiteList","toMap","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","raw","Identifier","id","hasOwnProperty","Program","body","MemberExpression","computed","object","property","CallExpression","callee","args","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","test","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","key","ExpressionStatement","expression","./constants","./functions",15,"NaN","E","LN2","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",16,"fncall","cast","obj","startsWith","DATE","STRING","REGEXP","isNaN","isFinite","abs","acos","asin","atan","atan2","exp","log","pow","random","sqrt","tan","now","datetime","date","day","year","month","hours","minutes","seconds","milliseconds","time","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",17,"parser","./codegen","./parser",18,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","index","charCodeAt","lineNumber","lineStart","scanHexEscape","toLowerCase","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","number","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","pattern","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","regex","collectRegex","loc","token","line","column","range","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","error","Array","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","match","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","toString","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","options","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression","accessor",19,"axes","group","def","axs","axis","scale","orient","ORIENT","offset","layer","grid","title","titleOffset","tickValues","tickFormat","format","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","extend","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",20,"parseTransforms","parseModify","load","read","parseData","callback","loaded","url","count","datasource","setTimeout","transform","modify","../util/load","../util/read","./modify","./transforms",21,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","filters","event","target","stream","startRule",22,"eval","../expression/index",23,"defFactory","JSON","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",24,"parseProperties","parseMark","mark","props","delay","./properties",25,"./mark",26,"signalName","db","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",27,"isNumber",28,"parseSignal","parseOperands","decl","arg","pred","parseComparator","ops","parseLogical","parseIn","types","=","==","!=",">",">=","<","<=","and","&&","or","||","in",29,"compile","names","vars","valueRef","hasPath","encoder","tpl","encode","path","tension","interpolate","rules","inputs","predName","isColor","colorRef","grp","GROUP_VARS","invert","band","mult","z","xx","color","yy","zz","mark.group.width","mark.group.height",30,"dep","./expr",31,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",32,"changset","selector","START","MIDDLE","END","view","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",33,"tx","../transforms/index",34,"eventName","_active","_handlers","_canvas","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","context","getContext","gx","gy","marktype","picker","../../util/index","./marks",35,"scaleCanvas","ctx","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","setAttribute","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","setTransform","element","pendingImages","bb2","bb","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","isNode","Image","baseURL","onload","../../core/Bounds","../../util/config","../../util/load",36,"./Handler","./Renderer",37,"arcPath","ir","innerRadius","outerRadius","sa","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","font","fontString","textAlign","textBaseline","radius","theta","fillText","text","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","j","axisItems","legendItems","gradient","grad","createLinearGradient","stop","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","fontSize","boundsCalc","tmpBounds","px","py","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",38,"currentPath","chunks","parsed","re","split","chunksParsed","trim","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","th","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",39,"svgHandler","__data__","_svg","dom","removeEventListener",40,"clipping","updateDefs","all","dgrad","dclip","identity","each","grd","cr","renderItems","nested",41,"dup",42,"yh","styleProps","styles","setProperty","removeProperty","arc_path","area_path","line_path","symbol_path","setAttributeNS","fontStyle","fontVariant","fontWeight","base","removeAttribute","textContent","clip_id","group_bg","cssClass","cls","tag","nest","drawMark","evts","grps","childNodes","notG","mark_id","idx","center",43,"Bounder","_mark","GROUP","../util/bounds",44,"inlineDs","sibling","_def","geom","_parent_id","_from","Date","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","status","joinDatasource","fullUpdate","keyFunction","joinValues","_items","Encoder","parent_id","inheritFrom","_parent","_encoder","builder","fcs","isFunction","./Bounder","./Encoder","./Item",45,"enc","EMPTY",46,"_children","_scaler","_recursor","_scales","bind","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","children","../dataflow/Collector","../parse/axes","./Builder","./Scale",47,"hasPropertySet","cousin","iidx","midx","list","touch",48,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","domain","dataDrivenRange","dataRef","RANGE","DOMAIN","equal","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","_aggregate_in_one","stat","MIN","MAX","group_by","order","DESC","comparator","domainMin","domainMax","LOG","zero","GROUP_PROPERTY","rangeMin","rangeMax","rev","SIGNAL","../transforms/Aggregate",49,"updates","step","elapsed","curr","calcBounds","skip","interp","timer",50,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","Infinity","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","fmt","label","tdata","vg_axisOrients","subticks","extent","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","sign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",51,"GroupBy","Transform","addParameters","avg","sum","mean","var","stdev","varp","stdevp","median","_fieldsDef","_Aggregators","meas","aggs","measures","_reset","_keys","_gb","_new_cell","agg","cell","_add","_cell","cnt","flg","MOD_CELL","_rem","get","_cells","./GroupBy","./Transform","./measures",52,"Bin","maxbins","default","bin","bins","../util/bins",53,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",54,"Facet","_new_tuple","_mod","ADD_CELL",55,"Filter","_skip","../parse/expr",56,"Fold","rst","get_tuple","accessors","dlen","fold",57,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",58,"Formula",59,"gb","groupBy",60,"Parameter","_type","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","param","isExpr",61,"Sort","by",62,"Stack","groupby","sortby","partition","groups",63,"params","_parameters","./Parameter",64,"Unique","as",65,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",66,"aggregate","formula","unique","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./Sort","./Stack","./Unique","./Zip",67,"measure","resolve","collect","req","ctr","quickselect","v_new","v_old","_counts","../util/quickselect",68,"bisect","precision","eps","maxb","div","mins","minstep","logb","level","span","nbins","steps","unit",69,"gfx","pathBounds","boundPath","ix","iy","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config","./index",70,"domainWhiteList","safeMode","svgNamespace","utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20","shapes",71,"sentinel","COUNT","ASC",72,"vg_escape_str","escape_str_re","vg_truncateOnWord","tok","vg_truncate_word_re","vg_write","console","isBoolean","isTree","__vgtree__","tree","string","searchString","lastIndexOf","stringify","numcmp","results","minIndex","maxIndex","truncate","word","ellipsis","l1","l2","alert",73,"vg_load_hasProtocol","vg_load_protocolRE","vg_load_xhr","vg_url_check","xhr","err","resp","responseText","document","createElement","href","hostname",74,"swap","pivot",75,"formats","parseValues","cols","col","parsers","vg_parseArray","clen","boolean","json","csv","tsv","topojson","feature","objects","features","mesh","treejson"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  util: require('./util/index'),\n  config: require('./util/config')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  util: require('./util/index'),\n  config: require('./util/config')\n};\n},{\"./core/View\":6,\"./dataflow/Datasource\":8,\"./dataflow/Graph\":9,\"./dataflow/Node\":10,\"./dataflow/changeset\":12,\"./parse/spec\":31,\"./scene/Builder\":44,\"./scene/GroupBuilder\":46,\"./transforms/index\":66,\"./util/config\":70,\"./util/index\":72}],2:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":3}],3:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],4:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],5:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    util = require('../util/index');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!util.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":9,\"../dataflow/Node\":10,\"../dataflow/changeset\":12,\"../scene/GroupBuilder\":46,\"../util/index\":72}],6:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    util = require('../util/index'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  util.keys(data).forEach(function(d) { m.data(d).add(util.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (util.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should util.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      util.debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":10,\"../dataflow/changeset\":12,\"../parse/streams\":32,\"../render/canvas/index\":36,\"../render/svg/index\":41,\"../scene/Transition\":49,\"../util/config\":70,\"../util/index\":72}],7:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"collecting\"]);\n\n  if(input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if(input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if(input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if(input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":71,\"../util/index\":72,\"./Node\":10,\"./changeset\":12}],8:[function(require,module,exports){\nvar changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(util.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = util.tuple_ids(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    util.debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    util.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = util.tuple_ids(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    util.debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":71,\"../util/index\":72,\"./Collector\":7,\"./Node\":10,\"./changeset\":12,\"./tuple\":13}],9:[function(require,module,exports){\nvar Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  if(arguments.length === 1) return this._data[name];\n  return (this._data[name] = new Datasource(this, name, facet)\n    .pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!util.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!util.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!util.isArray(ref)) ref = util.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(util.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      util.debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  util.debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  util.debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":71,\"../util/index\":72,\"./Datasource\":8,\"./Signal\":11,\"./changeset\":12,\"heap\":2}],10:[function(require,module,exports){\nvar util = require('../util/index'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!util.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, util.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":71,\"../util/index\":72}],11:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    util = require('../util/index');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;\n},{\"../util/index\":72,\"./Node\":10,\"./changeset\":12}],12:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":71}],13:[function(require,module,exports){\nvar util = require('../util/index'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = util.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset\n};\n},{\"../util/constants\":71,\"../util/index\":72}],14:[function(require,module,exports){\nvar util = require('../util/index');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? util.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? util.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: util.keys(signals),\n      fields: util.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"../util/index\":72,\"./constants\":15,\"./functions\":16}],15:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],16:[function(require,module,exports){\nvar util = require('../util/index');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (util.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"../util/index\":72}],17:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":14,\"./parser\":18}],18:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],19:[function(require,module,exports){\nvar axs = require('../scene/axis'),\n    config = require('../util/config'),\n    util = require('../util/index');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = util.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? util.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? util.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":50,\"../util/config\":70,\"../util/index\":72}],20:[function(require,module,exports){\nvar parseTransforms = require('./transforms'),\n    parseModify = require('./modify'),\n    util = require('../util/index'),\n    load = require('../util/load'),\n    read = require('../util/read');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        util.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(read(data.toString(), d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      load(d.url, loaded(d)); \n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if(d.values) ds.values(read(d.values, d.format));\n  else if(d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n},{\"../util/index\":72,\"../util/load\":73,\"../util/read\":75,\"./modify\":26,\"./transforms\":33}],21:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],22:[function(require,module,exports){\nvar util = require('../util/index');\nvar expression = require('../expression/index');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(util.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression/index\":17,\"../util/index\":72}],23:[function(require,module,exports){\nvar load = require('../util/load'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if(error) {\n        util.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = util.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if(--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if(def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if(def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if(util.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = util.array(spec.signals);\n    spec.predicates = util.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = util.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if(r = mk[m.type]) {\n        marks[i] = util.duplicate(r);\n        if(m.from) marks[i].from = m.from;\n        if(m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = util.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if(m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if(util.isString(s)) return s+\"_\"+n;\n    else {\n      util.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = util.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = util.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if(o.signal) o.signal = ns(o.signal, sg);\n          else if(o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    util.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if(i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks||[]).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    util.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if(p.signal) p.signal = ns(p.signal, sg);\n      else if(p.rule) {\n        p.rule.forEach(function(r) { \n          if(r.signal) r.signal = ns(r.signal, sg);\n          if(r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if(i.url) {\n      count += 1;\n      load(i.url, loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/constants\":71,\"../util/index\":72,\"../util/load\":73}],24:[function(require,module,exports){\nvar util = require('../util/index'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  util.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"../util/index\":72,\"./properties\":29}],25:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":24}],26:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? util.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    util.debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":10,\"../dataflow/tuple\":13,\"../util/constants\":71,\"../util/index\":72}],27:[function(require,module,exports){\nvar util = require('../util/index');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (util.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (util.isObject(pad)) return pad;\n  var p = util.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"../util/index\":72}],28:[function(require,module,exports){\nvar util = require('../util/index');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = util.field(signal),\n        code = \"signals[\"+s.map(util.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    util.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = util.str(o.value);\n      else if(o.arg)    def = \"args[\"+util.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        util.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+util.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+util.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+util.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: util.keys(signals),\n      data: util.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = util.field(spec.field).map(util.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+util.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"../util/index\":72}],29:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = util.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) util.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = util;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: util.keys(deps.signals),\n      scales: util.keys(deps.scales),\n      data: util.keys(deps.data)\n    }\n  } catch (e) {\n    util.error(e);\n    util.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    util.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(util.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, util.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, util.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, util.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, util.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+util.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n  var isColor = name===\"fill\" || name===\"stroke\";\n  var signals = [];\n\n  if (isColor) {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, signalRef = null;\n  if (ref.value !== undefined) {\n    val = util.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = util.field(ref.signal);\n    val = \"signals[\"+signalRef.map(util.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  // get field reference for enclosing group\n  if (ref.group != null) {\n    var grp = \"group.datum\";\n    if (util.isString(ref.group)) {\n      grp = GROUP_VARS[ref.group]\n        ? \"group.\" + ref.group\n        : \"group.datum[\"+util.field(ref.group).map(util.str).join(\"][\")+\"]\";\n    }\n  }\n\n  // get data field value\n  if (ref.field != null) {\n    if (util.isString(ref.field)) {\n      val = \"item.datum[\"+util.field(ref.field).map(util.str).join(\"][\")+\"]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n    } else if(ref.field.signal) {\n      signalRef = util.field(ref.field.signal);\n      val = \"item.datum[signals[\"+signalRef.map(util.str).join(\"][\")+\"]]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n      signals.push(signalRef.shift());\n    } else {\n      val = \"this.util.accessor(group.datum[\"\n          + util.field(ref.field.group).map(util.str).join(\"][\")\n          + \"])(item.datum)\";\n    }\n  } else if (ref.group != null) {\n    val = grp;\n  }\n\n  if (ref.scale != null) {\n    var scale = null;\n    if(util.isString(ref.scale)) {\n      scale = util.str(ref.scale);\n    } else if(ref.scale.signal) {\n      signalRef = util.field(ref.scale.signal);\n      scale = \"signals[\"+signalRef.map(util.str).join(\"][\")+\"]\";\n      signals.push(signalRef.shift());\n    } else {\n      scale = (ref.scale.group ? \"group\" : \"item\")\n        + \".datum[\" + util.str(ref.scale.group || ref.scale.field) + \"]\";\n    }\n\n    scale = \"group.scale(\" + scale + \")\";\n    if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(util.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + util.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":13,\"../util/config\":70,\"../util/index\":72}],30:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(/*graph, JH-TODO*/s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":71,\"./expr\":22}],31:[function(require,module,exports){\nvar Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors'),\n    util = require('../util/index');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = util.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n},{\"../core/Model\":5,\"../core/View\":6,\"../parse/data\":20,\"../parse/interactors\":23,\"../parse/marks\":25,\"../parse/padding\":27,\"../parse/predicates\":28,\"../parse/signals\":30,\"../util/index\":72}],32:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+util.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(/*graph, JH_TODO*/f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(/*graph, JH-TODO*/\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(/*graph, JH-TODO*/stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  util.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":10,\"../dataflow/changeset\":12,\"../util/constants\":71,\"../util/index\":72,\"./events\":21,\"./expr\":22}],33:[function(require,module,exports){\nvar util = require('../util/index'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  util.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":66,\"../util/index\":72}],34:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    util = require('../../util/index'),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return util.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/index\":72,\"./marks\":37}],35:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds'),\n    load = require('../../util/load'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    util.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (config.isNode) {\n    // TODO: how to check if nodeJS in requireJS?\n    // image = new (require('canvas').Image)();\n    // load(uri, function(err, data) {\n    //   if (err) { util.error(err); return; }\n    //   image.src = data;\n    //   image.loaded = true;\n    //   renderer._imgload -= 1;\n    // });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      util.log(\"LOAD IMAGE: \"+url);\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":4,\"../../util/config\":70,\"../../util/load\":73,\"./marks\":37}],36:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":34,\"./Renderer\":35}],37:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    util = require('../../util/index'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = util.fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":4,\"../../util/bounds\":69,\"../../util/config\":70,\"../../util/index\":72,\"./path\":38}],38:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":4}],39:[function(require,module,exports){\nvar util = require('../../util/index');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return util.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"../../util/index\":72}],40:[function(require,module,exports){\nvar util = require('../../util/index'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = util.keys(all.gradient),\n      dclip = util.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, util.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", util.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, util.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", util.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(util.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n},{\"../../util/index\":72,\"./marks\":42}],41:[function(require,module,exports){\narguments[4][36][0].apply(exports,arguments)\n},{\"./Handler\":39,\"./Renderer\":40,\"dup\":36}],42:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    util = require('../../util/index'),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = util.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":70,\"../../util/index\":72}],43:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    util = require('../util/index');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if(this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":10,\"../util/bounds\":69,\"../util/constants\":71,\"../util/index\":72}],44:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = util.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    name = [\"vg\", this._from, this._def.type, Date.now()].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = util.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = util.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, util.tuple_ids(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? util.tuple_ids(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = util.array(key).map(util.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":10,\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../parse/data\":20,\"../util/constants\":71,\"../util/index\":72,\"./Bounder\":43,\"./Encoder\":45,\"./Item\":47}],45:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    util = require('../util/index'),\n    C = require('../util/constants'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"encoding\", this._mark.def.type]);\n  var items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      i, len, item;\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans);\n    if(exit)   encode.call(this, exit,   item, input.trans); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans);\n    if(update) encode.call(this, update, item, input.trans);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, stamp) {\n  var model = this._model,\n      enc = prop.encode,\n      sg = this._graph.signalValues(prop.signals||[]),\n      db = (prop.data||[]).reduce(function(db, ds) { \n        return db[ds] = model.data(ds).values(), db;\n      }, {});\n\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, model.predicates());\n}\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":10,\"../util/constants\":71,\"../util/index\":72}],46:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, util.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  util.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  util.debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  util.debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":7,\"../dataflow/Node\":10,\"../parse/axes\":19,\"../util/constants\":71,\"../util/index\":72,\"./Builder\":44,\"./Scale\":48}],47:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],48:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if(this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if(arguments.length == 2) {\n    deps = util.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) util.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (util.isObject(def.range) && !util.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !util.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if(util.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !util.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if(util.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if(this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) util.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if(util.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || util.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if(!cache) {\n    cache = scale[ck] = new Aggregate(graph), cacheField.ops = [];\n    cache._aggregate_in_one = true;  // do not separate aggregations for separate fields\n    if(uniques && sort) cacheField.ops.push(sort.stat);\n    else if(!uniques)   cacheField.ops.push(C.MIN, C.MAX);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if(data.stamp <= this._stamp) continue;\n\n    fields = util.array(r.field).map(function(f) {\n      if(f.group) return util.accessor(f.group)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if(uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if(uniques) {\n    keys = util.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if(sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = util.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = util.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data.tpl[\"_all\"].min, data.tpl[\"_all\"].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if(!s) return v;\n  this.dependency(C.SIGNALS, (ref = util.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!util.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (util.isObject(def.domainMin)) {\n      if(def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (util.isObject(def.domainMax)) {\n      if(def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        util.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (util.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (util.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (util.isObject(rev)) {\n      rev = util.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":10,\"../dataflow/changeset\":12,\"../transforms/Aggregate\":51,\"../util/config\":70,\"../util/constants\":71,\"../util/index\":72}],49:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":13,\"../util/bounds\":69,\"../util/constants\":71}],50:[function(require,module,exports){\nvar config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if(!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if(!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if(!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if(!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if(!m.domain) m.domain = vg_axisDomain();\n    if(!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    util.extend(m.gridLines.properties.update, gridLineStyle);\n    util.extend(m.majorTicks.properties.update, majorTickStyle);\n    util.extend(m.minorTicks.properties.update, minorTickStyle);\n    util.extend(m.tickLabels.properties.update, tickLabelStyle);\n    util.extend(m.domain.properties.update, domainStyle);\n    util.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    util.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = util.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    util.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    util.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    util.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    util.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {group: \"mark.group.height\", mult: -sign}\n      : {group: \"mark.group.width\", mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    util.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    util.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    util.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    util.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    util.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    util.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    util.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    util.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (util.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n},{\"../dataflow/tuple\":13,\"../parse/mark\":24,\"../util/config\":70,\"../util/index\":72}],51:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      util.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform.dependency(C.SIGNALS, util.keys(signals));\n    return transform;\n  }\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = util.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: util.accessor(name),\n      field: this._aggregate_in_one ? '_all' : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/constants\":71,\"../util/index\":72,\"./GroupBy\":59,\"./Transform\":63,\"./measures\":67}],52:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    util = require('../util/index'),\n    bins = require('../util/bins'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n},{\"../dataflow/tuple\":13,\"../util/bins\":68,\"../util/index\":72,\"./Transform\":63}],53:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  util.debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":7,\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/index\":72,\"./Transform\":63}],54:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    util.debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/constants\":71,\"../util/index\":72,\"./GroupBy\":59,\"./Transform\":63}],55:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  util.debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":12,\"../parse/expr\":22,\"../util/constants\":71,\"../util/index\":72,\"./Transform\":63}],56:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    util = require('../util/index'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/index\":72,\"./Transform\":63}],57:[function(require,module,exports){\n(function (global){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"force:x\",\n    \"y\": \"force:y\",\n    \"source\": \"force:source\",\n    \"target\": \"force:target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = util.tuple_ids(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = util.tuple_ids(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Collector\":7,\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/index\":72,\"./Transform\":63}],58:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  util.debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":13,\"../parse/expr\":22,\"../util/constants\":71,\"../util/index\":72,\"./Transform\":63}],59:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/constants\":71,\"../util/index\":72,\"./Transform\":63}],60:[function(require,module,exports){\nvar expr = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if(isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if(isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if(!this._resolution) return this._get();\n\n  if(isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if(isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        util.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = util.array(value).map(function(v, i) {\n    if(util.isString(v)) {\n      if(isExpr) {\n        var e = expr(/*transform._graph, JH-TODO*/v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if(isField) {  // Backwards compatibility\n        param._accessors[i] = util.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if(isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if(v.value !== undefined) {\n      return v.value;\n    } else if(v.field !== undefined) {\n      param._accessors[i] = util.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if(v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":22,\"../util/constants\":71,\"../util/index\":72}],61:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    util = require('../util/index');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  util.debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = util.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":22,\"../util/index\":72,\"./Transform\":63}],62:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Stack(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"y2\",\n    \"stop\": \"y\",\n    \"mid\": \"cy\"\n  };\n  this._collector = new Collector(graph);\n\n  return this;\n}\n\nvar proto = (Stack.prototype = new Transform());\n\nproto.transform = function(input) {\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = util.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/Collector\":7,\"../dataflow/changeset\":12,\"../dataflow/tuple\":13,\"../util/index\":72,\"./Transform\":63}],63:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if(p.default) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":10,\"../util/constants\":71,\"../util/index\":72,\"./Parameter\":60}],64:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":13,\"../util/index\":72,\"./GroupBy\":59,\"./Transform\":63}],65:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  util.debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    util.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":7,\"../util/index\":72,\"./Transform\":63}],66:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":51,\"./Bin\":52,\"./Cross\":53,\"./Facet\":54,\"./Filter\":55,\"./Fold\":56,\"./Force\":57,\"./Formula\":58,\"./Sort\":61,\"./Stack\":62,\"./Unique\":64,\"./Zip\":65}],67:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = util.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":13,\"../util/constants\":71,\"../util/index\":72,\"../util/quickselect\":74}],68:[function(require,module,exports){\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    i = bisect(opt.steps, span / maxb);\n    if (i === opt.steps.length) --i;\n    step = opt.steps[i];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n}\n\nmodule.exports = bins;\n},{}],69:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    util = require('./index'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = util.fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":4,\"../render/canvas/path\":38,\"./config\":70,\"./index\":72}],70:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\n// are we running in node.js?\n// via timetler.com/2012/10/13/environment-detection-in-javascript/\n// TODO: how does this work with requirejs?\nconfig.isNode = typeof exports !== 'undefined' && this.exports !== exports;\n\n// Allows domain restriction when using data loading via XHR.\n// To enable, set it to a list of allowed domains\n// e.g., ['wikipedia.org', 'eff.org']\nconfig.domainWhiteList = false;\n\n// If true, disable potentially unsafe transforms (filter, formula)\n// involving possible JavaScript injection attacks.\nconfig.safeMode = false;\n\n// base url for loading external data files\n// used only for server-side operation\nconfig.baseURL = \"\";\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],71:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],72:[function(require,module,exports){\nvar config = require('./config'),\n    util = {};\n\n// type checking functions\nvar toString = Object.prototype.toString;\n\nutil.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nutil.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nutil.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n  \nutil.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nutil.isNumber = function(obj) {\n  return toString.call(obj) == '[object Number]';\n};\n\nutil.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nutil.isTree = function(obj) {\n  return obj && obj.__vgtree__;\n};\n\nutil.tree = function(obj, children) {\n  var d = [obj];\n  d.__vgtree__ = true;\n  d.children = children || \"children\";\n  return d;\n};\n\nutil.number = function(s) { return +s; };\n\nutil.boolean = function(s) { return !!s; };\n\nutil.date = function(s) {return s === null ? null : Date.parse(s); }\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nutil.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\n// utility functions\n\nutil.identity = function(x) { return x; };\n\nutil.true = function() { return true; };\n\nutil.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nutil.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nutil.equal = function(a, b) { return JSON.stringify(a) == JSON.stringify(b) };\n\nutil.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nutil.accessor = function(f) {\n  var s;\n  return (util.isFunction(f) || f==null)\n    ? f : util.isString(f) && (s=util.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) { return x[f]; }, x); }\n    : function(x) { return x[f]; };\n};\n\nutil.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = util.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return util.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nutil.cmp = function(a, b) { return a<b ? -1 : a>b ? 1 : 0; };\n\nutil.numcmp = function(a, b) { return a - b; };\n\nutil.array = function(x) {\n  return x != null ? (util.isArray(x) ? x : [x]) : [];\n};\n\nutil.values = function(x) {\n  return (util.isObject(x) && !util.isArray(x) && x.values) ? \n    (util.isFunction(x.values) ? x.values() : x.values) : x;\n};\n\nutil.tuple_ids = function(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nutil.str = function(x) {\n  return util.isArray(x) ? \"[\" + x.map(util.str) + \"]\"\n    : util.isObject(x) ? JSON.stringify(x)\n    : util.isString(x) ? (\"'\"+vg_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction vg_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\nutil.keys = function(x) {\n  var keys = [];\n  for (var key in x) keys.push(key);\n  return keys;\n};\n\nutil.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nutil.unique = function(data, f, results) {\n  if (!util.isArray(data) || data.length==0) return [];\n  f = f || util.identity;\n  results = results || [];\n  for (var v, i=0, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (results.indexOf(v) < 0) results.push(v);\n  }\n  return results;\n};\n\nutil.minIndex = function(data, f) {\n  if (!util.isArray(data) || data.length==0) return -1;\n  f = f || util.identity;\n  var idx = 0, min = f(data[0]), v = min;\n  for (var i=1, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nutil.maxIndex = function(data, f) {\n  if (!util.isArray(data) || data.length==0) return -1;\n  f = f || util.identity;\n  var idx = 0, max = f(data[0]), v = max;\n  for (var i=1, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nutil.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? vg_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? vg_truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? vg_truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? vg_truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n}\n\nfunction vg_truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(vg_truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar vg_truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\nutil.fontString = function(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n};\n\n// Logging\n\nfunction vg_write(msg) {\n  // config.isNode\n    // ? process.stderr.write(msg + \"\\n\")\n    // : console.log(msg);\n  console.log(msg);\n}\n\nutil.log = function(msg) {\n  vg_write(\"[Vega Log] \" + msg);\n};\n\nutil.error = function(msg) {\n  msg = \"[Vega Err] \" + msg;\n  vg_write(msg);\n  if (typeof alert !== \"undefined\") alert(msg);\n};\n\nvar ts;\nutil.debug = function(input, args) {\n  if(!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n\nutil.Heap = require('heap');\nmodule.exports = util;\n},{\"./config\":70,\"heap\":2}],73:[function(require,module,exports){\nvar util = require('./index'),\n    config = require('./config');\n\nvar vg_load_protocolRE = /^[A-Za-z]+\\:\\/\\//;\nvar vg_load_fileProtocol = \"file://\";\n\nfunction vg_load_hasProtocol(url) {\n  return vg_load_protocolRE.test(url);\n}\n\nfunction vg_load_isFile(url) {\n  return url.indexOf(vg_load_fileProtocol) === 0;\n}\n\nfunction vg_load_xhr(url, callback) {\n  util.log(\"LOAD: \" + url);\n  if (!vg_url_check(url)) {\n    util.error(\"URL is not whitelisted: \" + url);\n    return;\n  }\n  d3.xhr(url, function(err, resp) {\n    if (resp) resp = resp.responseText;\n    callback(err, resp);\n  });\n}\n\nfunction vg_url_check(url) {\n  if (!config.domainWhiteList) return true;\n  var a = document.createElement(\"a\");\n  a.href = url;\n  var domain = a.hostname.toLowerCase();\n  return config.domainWhiteList.some(function(d) {\n    return d === domain ||\n      domain.lastIndexOf(\".\"+d) === (domain.length - d.length - 1);\n  });\n}\n\n// TODO: how to check if nodeJS in requireJS?\n// function vg_load_file(file, callback) {\n//   util.log(\"LOAD FILE: \" + file);\n//   var idx = file.indexOf(vg_load_fileProtocol);\n//   if (idx >= 0) file = file.slice(vg_load_fileProtocol.length);\n//   require(\"fs\").readFile(file, callback);\n// }\n\n// function vg_load_http(url, callback) {\n//   util.log(\"LOAD HTTP: \" + url);\n//   var req = require(\"http\").request(url, function(res) {\n//     var pos=0, data = new Buffer(parseInt(res.headers['content-length'],10));\n//     res.on(\"error\", function(err) { callback(err, null); });\n//     res.on(\"data\", function(x) { x.copy(data, pos); pos += x.length; });\n//     res.on(\"end\", function() { callback(null, data); });\n//   });\n//   req.on(\"error\", function(err) { callback(err); });\n//   req.end();\n// }\n\nmodule.exports = function load(uri, callback) {\n  var url = vg_load_hasProtocol(uri) ? uri : config.baseURL + uri;\n  // if (config.isNode) {\n  //   // in node.js, consult url and select file or http\n  //   var get = vg_load_isFile(url) ? vg_load_file : vg_load_http;\n  //   get(url, callback);\n  // } else {\n    // in browser, use xhr\n    vg_load_xhr(url, callback);\n  // }  \n};\n},{\"./config\":70,\"./index\":72}],74:[function(require,module,exports){\nvar util = require('./index');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    util.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"./index\":72}],75:[function(require,module,exports){\nvar util = require('./index'),\n    formats = {},\n    parsers = {\n      \"number\": util.number,\n      \"boolean\": util.boolean,\n      \"date\": Date.parse\n    };\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parseValues(data, format.parse);\n  return data;\n}\n\nformats.json = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\nformats.csv = function(data, format) {\n  var d = d3.csv.parse(data);\n  return d;\n};\n\nformats.tsv = function(data, format) {\n  var d = d3.tsv.parse(data);\n  return d;\n};\n\nformats.topojson = function(data, format) {\n  if (topojson == null) {\n    util.error(\"TopoJSON library not loaded.\");\n    return [];\n  }    \n  var t = util.isObject(data) ? data : JSON.parse(data),\n      obj = [];\n\n  if (format && format.feature) {\n    obj = (obj = t.objects[format.feature])\n      ? topojson.feature(t, obj).features\n      : (util.error(\"Invalid TopoJSON object: \"+format.feature), []);\n  } else if (format && format.mesh) {\n    obj = (obj = t.objects[format.mesh])\n      ? [topojson.mesh(t, t.objects[format.mesh])]\n      : (util.error(\"Invalid TopoJSON object: \" + format.mesh), []);\n  }\n  else { util.error(\"Missing TopoJSON feature or mesh parameter.\"); }\n\n  return obj;\n};\n\nformats.treejson = function(data, format) {\n  data = util.isObject(data) ? data : JSON.parse(data);\n  return util.tree(data, format.children);\n};\n\nfunction parseValues(data, types) {\n  var cols = util.keys(types),\n      p = cols.map(function(col) { return parsers[types[col]]; }),\n      tree = util.isTree(data);\n  vg_parseArray(tree ? [data] : data, cols, p, tree);\n}\n\nfunction vg_parseArray(data, cols, p, tree) {\n  var d, i, j, len, clen;\n  for (i=0, len=data.length; i<len; ++i) {\n    d = data[i];\n    for (j=0, clen=cols.length; j<clen; ++j) {\n      d[cols[j]] = p[j](d[cols[j]]);\n    }\n    if (tree && d.values) parseValues(d, cols, p, true);\n  }\n}\n\nread.formats = formats;\nread.parse = parseValues;\nmodule.exports = read;\n},{\"./index\":72}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    util = require('../util/index');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!util.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    util = require('../util/index'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  util.keys(data).forEach(function(d) { m.data(d).add(util.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (util.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should util.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      util.debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"collecting\"]);\n\n  if(input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if(input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if(input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if(input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(util.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = util.tuple_ids(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    util.debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    util.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = util.tuple_ids(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    util.debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nmodule.exports = Datasource;","var Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  if(arguments.length === 1) return this._data[name];\n  return (this._data[name] = new Datasource(this, name, facet)\n    .pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!util.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!util.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!util.isArray(ref)) ref = util.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(util.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      util.debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  util.debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  util.debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var util = require('../util/index'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!util.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, util.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    util = require('../util/index');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var util = require('../util/index'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = util.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset\n};","var util = require('../util/index');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? util.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? util.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: util.keys(signals),\n      fields: util.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var util = require('../util/index');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (util.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var axs = require('../scene/axis'),\n    config = require('../util/config'),\n    util = require('../util/index');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = util.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? util.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? util.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var parseTransforms = require('./transforms'),\n    parseModify = require('./modify'),\n    util = require('../util/index'),\n    load = require('../util/load'),\n    read = require('../util/read');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        util.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(read(data.toString(), d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      load(d.url, loaded(d)); \n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if(d.values) ds.values(read(d.values, d.format));\n  else if(d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var util = require('../util/index');\nvar expression = require('../expression/index');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(util.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var load = require('../util/load'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if(error) {\n        util.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = util.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if(--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if(def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if(def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if(util.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = util.array(spec.signals);\n    spec.predicates = util.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = util.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if(r = mk[m.type]) {\n        marks[i] = util.duplicate(r);\n        if(m.from) marks[i].from = m.from;\n        if(m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = util.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if(m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if(util.isString(s)) return s+\"_\"+n;\n    else {\n      util.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = util.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = util.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if(o.signal) o.signal = ns(o.signal, sg);\n          else if(o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    util.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if(i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks||[]).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    util.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if(p.signal) p.signal = ns(p.signal, sg);\n      else if(p.rule) {\n        p.rule.forEach(function(r) { \n          if(r.signal) r.signal = ns(r.signal, sg);\n          if(r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if(i.url) {\n      count += 1;\n      load(i.url, loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var util = require('../util/index'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  util.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? util.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    util.debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var util = require('../util/index');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (util.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (util.isObject(pad)) return pad;\n  var p = util.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var util = require('../util/index');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = util.field(signal),\n        code = \"signals[\"+s.map(util.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    util.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = util.str(o.value);\n      else if(o.arg)    def = \"args[\"+util.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        util.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+util.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+util.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+util.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: util.keys(signals),\n      data: util.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = util.field(spec.field).map(util.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+util.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = util.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) util.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = util;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: util.keys(deps.signals),\n      scales: util.keys(deps.scales),\n      data: util.keys(deps.data)\n    }\n  } catch (e) {\n    util.error(e);\n    util.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    util.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(util.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, util.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, util.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, util.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, util.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+util.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+util.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n  var isColor = name===\"fill\" || name===\"stroke\";\n  var signals = [];\n\n  if (isColor) {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, signalRef = null;\n  if (ref.value !== undefined) {\n    val = util.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = util.field(ref.signal);\n    val = \"signals[\"+signalRef.map(util.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  // get field reference for enclosing group\n  if (ref.group != null) {\n    var grp = \"group.datum\";\n    if (util.isString(ref.group)) {\n      grp = GROUP_VARS[ref.group]\n        ? \"group.\" + ref.group\n        : \"group.datum[\"+util.field(ref.group).map(util.str).join(\"][\")+\"]\";\n    }\n  }\n\n  // get data field value\n  if (ref.field != null) {\n    if (util.isString(ref.field)) {\n      val = \"item.datum[\"+util.field(ref.field).map(util.str).join(\"][\")+\"]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n    } else if(ref.field.signal) {\n      signalRef = util.field(ref.field.signal);\n      val = \"item.datum[signals[\"+signalRef.map(util.str).join(\"][\")+\"]]\";\n      if (ref.group != null) { val = \"this.util.accessor(\"+val+\")(\"+grp+\")\"; }\n      signals.push(signalRef.shift());\n    } else {\n      val = \"this.util.accessor(group.datum[\"\n          + util.field(ref.field.group).map(util.str).join(\"][\")\n          + \"])(item.datum)\";\n    }\n  } else if (ref.group != null) {\n    val = grp;\n  }\n\n  if (ref.scale != null) {\n    var scale = null;\n    if(util.isString(ref.scale)) {\n      scale = util.str(ref.scale);\n    } else if(ref.scale.signal) {\n      signalRef = util.field(ref.scale.signal);\n      scale = \"signals[\"+signalRef.map(util.str).join(\"][\")+\"]\";\n      signals.push(signalRef.shift());\n    } else {\n      scale = (ref.scale.group ? \"group\" : \"item\")\n        + \".datum[\" + util.str(ref.scale.group || ref.scale.field) + \"]\";\n    }\n\n    scale = \"group.scale(\" + scale + \")\";\n    if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(util.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + util.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(/*graph, JH-TODO*/s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors'),\n    util = require('../util/index');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = util.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+util.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(/*graph, JH_TODO*/f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(/*graph, JH-TODO*/\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(/*graph, JH-TODO*/stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  util.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};","var util = require('../util/index'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  util.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    util = require('../../util/index'),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return util.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds'),\n    load = require('../../util/load'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    util.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (config.isNode) {\n    // TODO: how to check if nodeJS in requireJS?\n    // image = new (require('canvas').Image)();\n    // load(uri, function(err, data) {\n    //   if (err) { util.error(err); return; }\n    //   image.src = data;\n    //   image.loaded = true;\n    //   renderer._imgload -= 1;\n    // });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      util.log(\"LOAD IMAGE: \"+url);\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    util = require('../../util/index'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = util.fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var util = require('../../util/index');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return util.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var util = require('../../util/index'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = util.keys(all.gradient),\n      dclip = util.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, util.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", util.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, util.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", util.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(util.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    util = require('../../util/index'),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = util.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    util = require('../util/index');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if(this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = util.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    name = [\"vg\", this._from, this._def.type, Date.now()].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = util.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = util.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, util.tuple_ids(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? util.tuple_ids(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = util.array(key).map(util.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var Node = require('../dataflow/Node'),\n    util = require('../util/index'),\n    C = require('../util/constants'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  util.debug(input, [\"encoding\", this._mark.def.type]);\n  var items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      i, len, item;\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans);\n    if(exit)   encode.call(this, exit,   item, input.trans); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans);\n    if(update) encode.call(this, update, item, input.trans);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, stamp) {\n  var model = this._model,\n      enc = prop.encode,\n      sg = this._graph.signalValues(prop.signals||[]),\n      db = (prop.data||[]).reduce(function(db, ds) { \n        return db[ds] = model.data(ds).values(), db;\n      }, {});\n\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, model.predicates());\n}\n\nmodule.exports = Encoder;","var Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, util.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  util.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  util.debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  util.debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if(this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if(arguments.length == 2) {\n    deps = util.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) util.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (util.isObject(def.range) && !util.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !util.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if(util.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !util.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if(util.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if(this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) util.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if(util.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || util.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if(!cache) {\n    cache = scale[ck] = new Aggregate(graph), cacheField.ops = [];\n    cache._aggregate_in_one = true;  // do not separate aggregations for separate fields\n    if(uniques && sort) cacheField.ops.push(sort.stat);\n    else if(!uniques)   cacheField.ops.push(C.MIN, C.MAX);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if(data.stamp <= this._stamp) continue;\n\n    fields = util.array(r.field).map(function(f) {\n      if(f.group) return util.accessor(f.group)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if(uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if(uniques) {\n    keys = util.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if(sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = util.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = util.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data.tpl[\"_all\"].min, data.tpl[\"_all\"].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if(!s) return v;\n  this.dependency(C.SIGNALS, (ref = util.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!util.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (util.isObject(def.domainMin)) {\n      if(def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (util.isObject(def.domainMax)) {\n      if(def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        util.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (util.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (util.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (util.isObject(rev)) {\n      rev = util.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if(!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if(!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if(!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if(!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if(!m.domain) m.domain = vg_axisDomain();\n    if(!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    util.extend(m.gridLines.properties.update, gridLineStyle);\n    util.extend(m.majorTicks.properties.update, majorTickStyle);\n    util.extend(m.minorTicks.properties.update, minorTickStyle);\n    util.extend(m.tickLabels.properties.update, tickLabelStyle);\n    util.extend(m.domain.properties.update, domainStyle);\n    util.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    util.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = util.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    util.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    util.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    util.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    util.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {group: \"mark.group.height\", mult: -sign}\n      : {group: \"mark.group.width\", mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    util.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    util.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    util.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    util.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    util.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    util.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    util.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    util.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (util.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      util.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform.dependency(C.SIGNALS, util.keys(signals));\n    return transform;\n  }\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = util.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: util.accessor(name),\n      field: this._aggregate_in_one ? '_all' : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n  return output;\n};\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    util = require('../util/index'),\n    bins = require('../util/bins'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  util.debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    util.debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  util.debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    util = require('../util/index'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"force:x\",\n    \"y\": \"force:y\",\n    \"source\": \"force:source\",\n    \"target\": \"force:target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = util.tuple_ids(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = util.tuple_ids(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  util.debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var expr = require('../parse/expr'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if(isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if(isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if(!this._resolution) return this._get();\n\n  if(isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if(isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        util.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = util.array(value).map(function(v, i) {\n    if(util.isString(v)) {\n      if(isExpr) {\n        var e = expr(/*transform._graph, JH-TODO*/v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if(isField) {  // Backwards compatibility\n        param._accessors[i] = util.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if(isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if(v.value !== undefined) {\n      return v.value;\n    } else if(v.field !== undefined) {\n      param._accessors[i] = util.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if(v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    util = require('../util/index');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  util.debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = util.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Stack(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"y2\",\n    \"stop\": \"y\",\n    \"mid\": \"cy\"\n  };\n  this._collector = new Collector(graph);\n\n  return this;\n}\n\nvar proto = (Stack.prototype = new Transform());\n\nproto.transform = function(input) {\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = util.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    util = require('../util/index'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if(p.default) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    util = require('../util/index');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  util.debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    util = require('../util/index');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  util.debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    util.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var tuple = require('../dataflow/tuple'),\n    util = require('../util/index'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = util.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","function bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    i = bisect(opt.steps, span / maxb);\n    if (i === opt.steps.length) --i;\n    step = opt.steps[i];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n}\n\nmodule.exports = bins;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    util = require('./index'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = util.fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\n// are we running in node.js?\n// via timetler.com/2012/10/13/environment-detection-in-javascript/\n// TODO: how does this work with requirejs?\nconfig.isNode = typeof exports !== 'undefined' && this.exports !== exports;\n\n// Allows domain restriction when using data loading via XHR.\n// To enable, set it to a list of allowed domains\n// e.g., ['wikipedia.org', 'eff.org']\nconfig.domainWhiteList = false;\n\n// If true, disable potentially unsafe transforms (filter, formula)\n// involving possible JavaScript injection attacks.\nconfig.safeMode = false;\n\n// base url for loading external data files\n// used only for server-side operation\nconfig.baseURL = \"\";\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config'),\n    util = {};\n\n// type checking functions\nvar toString = Object.prototype.toString;\n\nutil.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nutil.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nutil.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n  \nutil.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nutil.isNumber = function(obj) {\n  return toString.call(obj) == '[object Number]';\n};\n\nutil.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nutil.isTree = function(obj) {\n  return obj && obj.__vgtree__;\n};\n\nutil.tree = function(obj, children) {\n  var d = [obj];\n  d.__vgtree__ = true;\n  d.children = children || \"children\";\n  return d;\n};\n\nutil.number = function(s) { return +s; };\n\nutil.boolean = function(s) { return !!s; };\n\nutil.date = function(s) {return s === null ? null : Date.parse(s); }\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nutil.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\n// utility functions\n\nutil.identity = function(x) { return x; };\n\nutil.true = function() { return true; };\n\nutil.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nutil.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nutil.equal = function(a, b) { return JSON.stringify(a) == JSON.stringify(b) };\n\nutil.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nutil.accessor = function(f) {\n  var s;\n  return (util.isFunction(f) || f==null)\n    ? f : util.isString(f) && (s=util.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) { return x[f]; }, x); }\n    : function(x) { return x[f]; };\n};\n\nutil.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = util.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return util.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nutil.cmp = function(a, b) { return a<b ? -1 : a>b ? 1 : 0; };\n\nutil.numcmp = function(a, b) { return a - b; };\n\nutil.array = function(x) {\n  return x != null ? (util.isArray(x) ? x : [x]) : [];\n};\n\nutil.values = function(x) {\n  return (util.isObject(x) && !util.isArray(x) && x.values) ? \n    (util.isFunction(x.values) ? x.values() : x.values) : x;\n};\n\nutil.tuple_ids = function(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nutil.str = function(x) {\n  return util.isArray(x) ? \"[\" + x.map(util.str) + \"]\"\n    : util.isObject(x) ? JSON.stringify(x)\n    : util.isString(x) ? (\"'\"+vg_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction vg_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\nutil.keys = function(x) {\n  var keys = [];\n  for (var key in x) keys.push(key);\n  return keys;\n};\n\nutil.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nutil.unique = function(data, f, results) {\n  if (!util.isArray(data) || data.length==0) return [];\n  f = f || util.identity;\n  results = results || [];\n  for (var v, i=0, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (results.indexOf(v) < 0) results.push(v);\n  }\n  return results;\n};\n\nutil.minIndex = function(data, f) {\n  if (!util.isArray(data) || data.length==0) return -1;\n  f = f || util.identity;\n  var idx = 0, min = f(data[0]), v = min;\n  for (var i=1, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nutil.maxIndex = function(data, f) {\n  if (!util.isArray(data) || data.length==0) return -1;\n  f = f || util.identity;\n  var idx = 0, max = f(data[0]), v = max;\n  for (var i=1, n=data.length; i<n; ++i) {\n    v = f(data[i]);\n    if (v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nutil.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? vg_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? vg_truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? vg_truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? vg_truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n}\n\nfunction vg_truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(vg_truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar vg_truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\nutil.fontString = function(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n};\n\n// Logging\n\nfunction vg_write(msg) {\n  // config.isNode\n    // ? process.stderr.write(msg + \"\\n\")\n    // : console.log(msg);\n  console.log(msg);\n}\n\nutil.log = function(msg) {\n  vg_write(\"[Vega Log] \" + msg);\n};\n\nutil.error = function(msg) {\n  msg = \"[Vega Err] \" + msg;\n  vg_write(msg);\n  if (typeof alert !== \"undefined\") alert(msg);\n};\n\nvar ts;\nutil.debug = function(input, args) {\n  if(!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n\nutil.Heap = require('heap');\nmodule.exports = util;","var util = require('./index'),\n    config = require('./config');\n\nvar vg_load_protocolRE = /^[A-Za-z]+\\:\\/\\//;\nvar vg_load_fileProtocol = \"file://\";\n\nfunction vg_load_hasProtocol(url) {\n  return vg_load_protocolRE.test(url);\n}\n\nfunction vg_load_isFile(url) {\n  return url.indexOf(vg_load_fileProtocol) === 0;\n}\n\nfunction vg_load_xhr(url, callback) {\n  util.log(\"LOAD: \" + url);\n  if (!vg_url_check(url)) {\n    util.error(\"URL is not whitelisted: \" + url);\n    return;\n  }\n  d3.xhr(url, function(err, resp) {\n    if (resp) resp = resp.responseText;\n    callback(err, resp);\n  });\n}\n\nfunction vg_url_check(url) {\n  if (!config.domainWhiteList) return true;\n  var a = document.createElement(\"a\");\n  a.href = url;\n  var domain = a.hostname.toLowerCase();\n  return config.domainWhiteList.some(function(d) {\n    return d === domain ||\n      domain.lastIndexOf(\".\"+d) === (domain.length - d.length - 1);\n  });\n}\n\n// TODO: how to check if nodeJS in requireJS?\n// function vg_load_file(file, callback) {\n//   util.log(\"LOAD FILE: \" + file);\n//   var idx = file.indexOf(vg_load_fileProtocol);\n//   if (idx >= 0) file = file.slice(vg_load_fileProtocol.length);\n//   require(\"fs\").readFile(file, callback);\n// }\n\n// function vg_load_http(url, callback) {\n//   util.log(\"LOAD HTTP: \" + url);\n//   var req = require(\"http\").request(url, function(res) {\n//     var pos=0, data = new Buffer(parseInt(res.headers['content-length'],10));\n//     res.on(\"error\", function(err) { callback(err, null); });\n//     res.on(\"data\", function(x) { x.copy(data, pos); pos += x.length; });\n//     res.on(\"end\", function() { callback(null, data); });\n//   });\n//   req.on(\"error\", function(err) { callback(err); });\n//   req.end();\n// }\n\nmodule.exports = function load(uri, callback) {\n  var url = vg_load_hasProtocol(uri) ? uri : config.baseURL + uri;\n  // if (config.isNode) {\n  //   // in node.js, consult url and select file or http\n  //   var get = vg_load_isFile(url) ? vg_load_file : vg_load_http;\n  //   get(url, callback);\n  // } else {\n    // in browser, use xhr\n    vg_load_xhr(url, callback);\n  // }  \n};","var util = require('./index');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    util.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};","var util = require('./index'),\n    formats = {},\n    parsers = {\n      \"number\": util.number,\n      \"boolean\": util.boolean,\n      \"date\": Date.parse\n    };\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parseValues(data, format.parse);\n  return data;\n}\n\nformats.json = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\nformats.csv = function(data, format) {\n  var d = d3.csv.parse(data);\n  return d;\n};\n\nformats.tsv = function(data, format) {\n  var d = d3.tsv.parse(data);\n  return d;\n};\n\nformats.topojson = function(data, format) {\n  if (topojson == null) {\n    util.error(\"TopoJSON library not loaded.\");\n    return [];\n  }    \n  var t = util.isObject(data) ? data : JSON.parse(data),\n      obj = [];\n\n  if (format && format.feature) {\n    obj = (obj = t.objects[format.feature])\n      ? topojson.feature(t, obj).features\n      : (util.error(\"Invalid TopoJSON object: \"+format.feature), []);\n  } else if (format && format.mesh) {\n    obj = (obj = t.objects[format.mesh])\n      ? [topojson.mesh(t, t.objects[format.mesh])]\n      : (util.error(\"Invalid TopoJSON object: \" + format.mesh), []);\n  }\n  else { util.error(\"Missing TopoJSON feature or mesh parameter.\"); }\n\n  return obj;\n};\n\nformats.treejson = function(data, format) {\n  data = util.isObject(data) ? data : JSON.parse(data);\n  return util.tree(data, format.children);\n};\n\nfunction parseValues(data, types) {\n  var cols = util.keys(types),\n      p = cols.map(function(col) { return parsers[types[col]]; }),\n      tree = util.isTree(data);\n  vg_parseArray(tree ? [data] : data, cols, p, tree);\n}\n\nfunction vg_parseArray(data, cols, p, tree) {\n  var d, i, j, len, clen;\n  for (i=0, len=data.length; i<len; ++i) {\n    d = data[i];\n    for (j=0, clen=cols.length; j<clen; ++j) {\n      d[cols[j]] = p[j](d[cols[j]]);\n    }\n    if (tree && d.values) parseValues(d, cols, p, true);\n  }\n}\n\nread.formats = formats;\nread.parse = parseValues;\nmodule.exports = read;"],"sourceRoot":"/source/"}