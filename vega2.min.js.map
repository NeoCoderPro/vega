{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/bin.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/csv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/formats/tsv.js","node_modules/datalib/src/import/infer-types.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/loaders.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/index.js","node_modules/datalib/src/log.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/summary.js","node_modules/datalib/src/template.js","node_modules/datalib/src/tree.js","node_modules/datalib/src/truncate.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/GroupBy.js","src/transforms/Parameter.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Unique.js","src/transforms/Zip.js","src/transforms/index.js","src/transforms/measures.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js","src/util/quickselect.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./core/View","./dataflow/Datasource","./dataflow/Graph","./dataflow/Node","./dataflow/changeset","./parse/spec","./scene/Builder","./scene/GroupBuilder","./transforms/index","./util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"bisectLeft","x","lo","hi","mid","cmp","opt","precision","v","eps","maxb","maxbins","base","div","mins","minstep","logb","Math","log","level","ceil","min","max","span","step","pow","round","nbins","steps","floor","start","stop","unit",5,"gen","repeat","val","Array","zeroes","range","arguments","Infinity","j","random","uniform","delta","samples","map","integer","b","undefined","normal","mean","stdev","next","rds","c","y","sqrt",6,"d3","data","format","d","csv","toString",7,"json","tsv","topojson","treejson","./csv","./json","./topojson","./treejson","./tsv",8,"isObject","JSON","property","accessor","../../util",9,"obj","feature","objects","features","mesh",10,"tree","toTable","children","../../tree",11,12,"tests","bool","isBoolean","date","isNaN","Date","num","isDate","values","types","type","test","splice","../util",13,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","idx","lastIndexOf","load","callback","error","err","slice","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",14,"read","keys","formats","reduce","out","isString","isFunction","extend","./load","./read",15,"cols","parsers","clen","infer","PARSERS","number","boolean","./formats","./infer-types",16,"dl","bin","summary","template","truncate","msg","LOG","silent","ERR","./bin","./generate","./import/load","./import/loaders","./import/read","./log","./stats","./summary","./template","./truncate","./util",17,"prepare","now","join","console",18,"stats","unique","results","isArray","counts","count","distinct","nulls","median","filter","isNotNull","sort","half","variance","M2","skew","avg","med","std","minmax","minIndex","maxIndex","entropy","p","H","LN2","normalized","profile","sd","vals",19,"printSummary","profiles","str","forEach","field","printCategoricalProfile","printQuantitativeProfile","list","top","concat","fields",20,"text","src","source","Function","bind","context","variable","index","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","fn","stringCast","filters","split","prop","shift","trim","pidx","args","indexOf","template_format","time","template_escapes","pattern","fmt","format_map","clearFormatCache","'","\\","\r","\n"," "," ",21,"childrenField","idField","parentField","visit","node","parentId","nid","id","FIELDS","parent","fromTable","root","pid","nodes",22,"truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","pos","word","ellipsis","u_truncateOnWord","l1","l2",23,"util_escape_str","escape_str_re","stderr","Object","prototype","isNumber","array","stringify","identity","duplicate","equal","k","toMap","keystr","apply","mutator","comparator","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","String","string","searchString","_process",24,"./lib/heap",25,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","result","los","startpos","newitem","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","clear","empty","size","clone","heap","toArray","insert","front","has","copy","factory",26,"bounds","union","x1","Number","MAX_VALUE","y1","x2","y2","set","add","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",27,"Model","_defs","_predicates","_scene","graph","_node","_builder","predicates","m","proto","defs","pipeline","predicate","renderer","disconnect","marks","connect","fire","cs","create","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",28,"parseStreams","canvas","svg","Transition","debug","el","model","_el","_model","_width","__width","_height","__height","_autopad","_padding","left","bottom","right","_viewport","_renderer","_handler","_io","initialize","parentNode","_strict","padding","pad","resize","autopad","inset","autopadInset","update","viewport","_build","render","prevHandler","h","select","remove","append","attr","style","Renderer","Handler","handlers","handler","trans","duration","ease","reflow","_renderNode","router","evaluate","input","items","ds","revises","finalize","last","../parse/streams","../render/canvas/index","../render/svg/index","../scene/Transition","../util/config","../util/debug",29,"Collector","init","_data","collector","mod","rem","ids","_id","../util/constants","./Node","./changeset",30,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","tuple","prev","ingest","where","func","idMap","unshift","output","listener","dest","_srcMap","derive","listeners","./Collector","./tuple",31,"_stamp","_rank","_signals","doNotPropagate","signal","forEachNode","branch","Signal","db","signalValues","sg","value","signalRef","ref","schedule","rank","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","signals","SIGNALS","reevaluate","run","./Datasource","./Signal",32,"REEVAL","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","q","cur","foundSending","reeval",33,"_value",34,"reset_prev",35,"datum","tuple_id","reset",36,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","raw","Identifier","hasOwnProperty","Program","MemberExpression","computed","object","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","key","ExpressionStatement","expression","./constants","./functions",37,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",38,"fncall","cast","DATE","STRING","REGEXP","isFinite","abs","acos","asin","atan","atan2","exp","tan","datetime","day","year","month","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",39,"parser","./codegen","./parser",40,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","options","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",41,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",42,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",43,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","stream","startRule",44,"eval","../expression",45,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",46,"parseProperties","parseMark","mark","props","delay","./properties",47,"./mark",48,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",49,50,"parseSignal","parseOperands","decl","arg","pred","parseComparator","ops","parseLogical","parseIn","=","==","!=",">",">=","<","<=","and","&&","or","||","in",51,"compile","names","vars","valueRef","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","fieldRef","scaleRef","band","mult","z","xx","color","yy","zz","nested","scope","invert",52,"dep","./expr",53,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",54,"changset","selector","START","MIDDLE","END","view","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",55,"tx","../transforms/index",56,"eventName","_active","_handlers","_canvas","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","getContext","gx","gy","marktype","picker","./marks",57,"scaleCanvas","ctx","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","setAttribute","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","setTransform","element","pendingImages","bb2","bb","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",58,"./Handler","./Renderer",59,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","px","py","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",60,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","th","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",61,"svgHandler","__data__","_svg","dom","removeEventListener",62,"clipping","updateDefs","all","dgrad","dclip","each","grd","cr","renderItems",63,"dup",64,"yh","styleProps","styles","setProperty","removeProperty","arc_path","area_path","line_path","symbol_path","setAttributeNS","removeAttribute","textContent","clip_id","group_bg","cssClass","cls","tag","nest","drawMark","evts","grps","childNodes","notG","mark_id","center",65,"Bounder","_mark","GROUP","../util/bounds",66,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","Encoder","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",67,"enc","EMPTY",68,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",69,"hasPropertySet","cousin","iidx","midx","touch",70,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","which","rlen","flen","refs","uniques","ck","cache","cacheField","Aggregate","singleton","stat","group_by","MIN","MAX","order","DESC","SINGLETON","domainMin","domainMax","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",71,"updates","elapsed","curr","calcBounds","skip","interp","timer",72,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","extent","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",73,"GroupBy","Transform","addParameters","sum","var","varp","stdevp","_fieldsDef","_Aggregators","_singleton","meas","aggs","measures","_reset","_keys","_gb","_new_cell","agg","cell","_add","_cell","flg","MOD_CELL","_rem","get","_cells","./GroupBy","./Transform","./measures",74,"Bin","default",75,"Cross","with","diagonal","_lastRem","_lastWith","_ids","_cache","wdata","diag","cross","upFields","selfCross","woutput",76,"Facet","_new_tuple","_mod","ADD_CELL",77,"Filter","_skip","../parse/expr",78,"Fold","rst","get_tuple","accessors","dlen","fold",79,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",80,"Formula",81,"gb","groupBy",82,"Parameter","_type","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","param","isExpr",83,"Sort","by",84,"Stack","groupby","sortby","partition","groups",85,"params","_parameters","./Parameter",86,"Unique","as",87,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",88,"aggregate","formula","zip","./Aggregate","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./Sort","./Stack","./Unique","./Zip",89,"measure","resolve","collect","req","ctr","quickselect","v_new","v_old","_counts","../util/quickselect",90,"gfx","pathBounds","boundPath","ix","iy","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",91,"svgNamespace","utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20","shapes",92,"sentinel","COUNT","ASC",93,94,"swap","pivot"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./core/View')\n  },\n  dataflow: {\n    changeset: require('./dataflow/changeset'),\n    Datasource: require('./dataflow/Datasource'),\n    Graph: require('./dataflow/Graph'),\n    Node: require('./dataflow/Node')\n  },\n  parse: {\n    spec: require('./parse/spec')\n  },\n  scene: {\n    Builder: require('./scene/Builder'),\n    GroupBuilder: require('./scene/GroupBuilder')\n  },\n  transforms: require('./transforms/index'),\n  config: require('./util/config'),\n  util: require('datalib')\n};\n},{\"./core/View\":28,\"./dataflow/Datasource\":30,\"./dataflow/Graph\":31,\"./dataflow/Node\":32,\"./dataflow/changeset\":34,\"./parse/spec\":53,\"./scene/Builder\":66,\"./scene/GroupBuilder\":68,\"./transforms/index\":88,\"./util/config\":91,\"datalib\":16}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nmodule.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n},{}],5:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeroes = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n},{}],6:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],7:[function(require,module,exports){\nmodule.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};\n},{\"./csv\":6,\"./json\":8,\"./topojson\":9,\"./treejson\":10,\"./tsv\":11}],8:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":23}],9:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":8}],10:[function(require,module,exports){\nvar tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};\n},{\"../../tree\":21,\"./json\":8}],11:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\nvar util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};\n},{\"../util\":23}],13:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":23,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],14:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":23,\"./load\":13,\"./read\":15}],15:[function(require,module,exports){\nvar util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;\n},{\"../util\":23,\"./formats\":7,\"./infer-types\":12}],16:[function(require,module,exports){\nvar dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n\n},{\"./bin\":4,\"./generate\":5,\"./import/load\":13,\"./import/loaders\":14,\"./import/read\":15,\"./log\":17,\"./stats\":18,\"./summary\":19,\"./template\":20,\"./truncate\":22,\"./util\":23}],17:[function(require,module,exports){\nvar LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;\n},{}],18:[function(require,module,exports){\nvar util = require('./util');\nvar stats = {};\n\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\nstats.skew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.entropy = function(counts) {\n  var i, p, s = 0, H = 0;\n  for (i=0; i<counts.length; ++i) {\n    s += counts[i];\n  }\n  if (s === 0) return 0;\n  for (i=0; i<counts.length; ++i) {\n    p = counts[i] / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\nstats.entropy.normalized = function(counts) {\n  var H = stats.entropy(counts);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  median = (vals.length % 2)\n   ? vals[half]\n   : (vals[half-1] + vals[half]) / 2.0;\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    median:   median,\n    stdev:    sd,\n    skew:     sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;\n},{\"./util\":23}],19:[function(require,module,exports){\nvar util = require('./util');\nvar stats = require('./stats');\n\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"skew:     \" + p.skew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}\n},{\"./stats\":18,\"./util\":23}],20:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./truncate\":22,\"./util\":23}],21:[function(require,module,exports){\nvar FIELDS = {\n  id: \"_tree_id\",\n  parent: \"_tree_parent\",\n  children: \"children\"\n};\n\nfunction toTable(tree, childrenField, idField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  idField = idField || FIELDS.id;\n  parentField = parentField || FIELDS.parent;\n  var list = [];\n  var id = 0;\n  \n  function visit(node, parentId) {\n    var nid = node[idField] = id++;\n    node[parentField] = parentId;\n    list.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], nid);\n      }\n    }\n  }\n  \n  visit(tree, -1);\n  return list;\n}\n\nfunction fromTable(list, childrenField, idField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  idField = idField || FIELDS.id;\n  parentField = parentField || FIELDS.parent;\n  var root = null;\n  \n  list.forEach(function(node) {\n    if (node[childrenField]) {\n      node[childrenField] = null;\n    };\n  })\n  \n  list.forEach(function(node) {\n    var pid = node[parentField];\n    if (pid === -1) {\n      root = node;\n    } else {\n      var p = nodes[pid];\n      var children = p[childrenField] || (p[childrenField] = []);\n      children.push(node);\n    }\n  });\n\n  return root;\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fromTable: fromTable,\n  fields: FIELDS\n};\n},{}],22:[function(require,module,exports){\nmodule.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n},{}],23:[function(require,module,exports){\n(function (process){\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n  \nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return toString.call(obj) == '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n}\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n}).call(this,require('_process'))\n\n},{\"_process\":3}],24:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":25}],25:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],26:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],27:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":31,\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../scene/GroupBuilder\":68,\"datalib\":16}],28:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../parse/streams\":54,\"../render/canvas/index\":58,\"../render/svg/index\":63,\"../scene/Transition\":71,\"../util/config\":91,\"../util/debug\":93,\"datalib\":16}],29:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if(input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if(input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if(input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if(input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":92,\"../util/debug\":93,\"./Node\":32,\"./changeset\":34}],30:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":92,\"../util/debug\":93,\"./Collector\":29,\"./Node\":32,\"./changeset\":34,\"./tuple\":35,\"datalib\":16}],31:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!arguments.length) name = dl.keys(this._signals);\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":92,\"../util/debug\":93,\"./Datasource\":30,\"./Signal\":33,\"./changeset\":34,\"datalib\":16,\"heap\":24}],32:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":92,\"datalib\":16}],33:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;\n},{\"./Node\":32,\"./changeset\":34}],34:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":92}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":92,\"datalib\":16}],36:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":37,\"./functions\":38,\"datalib\":16}],37:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],38:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":16}],39:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":36,\"./parser\":40}],40:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],41:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":72,\"../util/config\":91,\"datalib\":16}],42:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n},{\"../util/config\":91,\"./modify\":48,\"./transforms\":55,\"datalib\":16}],43:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":39,\"datalib\":16}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":91,\"../util/constants\":92,\"datalib\":16}],46:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":51,\"datalib\":16}],47:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":46}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":32,\"../dataflow/tuple\":35,\"../util/constants\":92,\"../util/debug\":93,\"datalib\":16}],49:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":16}],50:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+dl.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":16}],51:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: dl.keys(deps.signals),\n      scales: dl.keys(deps.scales),\n      data: dl.keys(deps.data)\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+dl.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, \n      scale = null, \n      signalRef = null,\n      signals = [];\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = dl.field(ref.signal);\n    val = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    val = fieldRef(ref.field);\n  }\n\n  if (ref.scale !== undefined) {\n    scale = scaleRef(ref.scale);\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return dl.field(ref).map(dl.str).join(\"][\");\n  } \n\n  // Resolve nesting/parent lookups\n  var r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\";\n\n  if(ref.datum) {\n    return \"item.datum[\"+r+\"]\";\n  } else if(ref.group) {\n    return scope+\"group[\"+r+\"]\";\n  } else if(ref.parent) {\n    return scope+\"group.datum[\"+r+\"]\";\n  } else if(ref.signal) {\n    return \"signals[\"+r+\"]\";\n  }\n}\n\nfunction scaleRef(ref) {\n  var scale = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? ref.name : fieldRef(ref.name);\n  } else {\n    scale = fieldRef(ref);\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return scale;\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":35,\"../util/config\":91,\"datalib\":16}],52:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":92,\"./expr\":44}],53:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n},{\"../core/Model\":27,\"../core/View\":28,\"../parse/data\":42,\"../parse/interactors\":45,\"../parse/marks\":47,\"../parse/padding\":49,\"../parse/predicates\":50,\"../parse/signals\":52,\"datalib\":16}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../util/constants\":92,\"./events\":43,\"./expr\":44,\"datalib\":16}],55:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":88,\"datalib\":16}],56:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":59,\"datalib\":16}],57:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26,\"../../util/config\":91,\"./marks\":59,\"datalib\":16}],58:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":56,\"./Renderer\":57}],59:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":26,\"../../util/bounds\":90,\"../../util/config\":91,\"./path\":60}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":26}],61:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":16}],62:[function(require,module,exports){\nvar dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n},{\"./marks\":64,\"datalib\":16}],63:[function(require,module,exports){\narguments[4][58][0].apply(exports,arguments)\n},{\"./Handler\":61,\"./Renderer\":62,\"dup\":58}],64:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":91,\"datalib\":16}],65:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":32,\"../util/bounds\":90,\"../util/constants\":92,\"../util/debug\":93}],66:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../parse/data\":42,\"../util/constants\":92,\"../util/debug\":93,\"./Bounder\":65,\"./Encoder\":67,\"./Item\":69,\"datalib\":16}],67:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db, i, len, item;\n\n  db = graph.data().reduce(function(db, ds) { \n    return (db[ds.name()] = ds.values(), db);\n  }, {});\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    if(exit)   encode.call(this, exit,   item, input.trans), db, sg; \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg);\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, this._model.predicates());\n}\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":32,\"../util/constants\":92,\"../util/debug\":93}],68:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":29,\"../dataflow/Node\":32,\"../parse/axes\":41,\"../util/constants\":92,\"../util/debug\":93,\"./Builder\":66,\"./Scale\":70,\"datalib\":16}],69:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],70:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if(!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if(uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if(uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":32,\"../dataflow/changeset\":34,\"../transforms/Aggregate\":73,\"../util/config\":91,\"../util/constants\":92,\"../util/debug\":93,\"datalib\":16}],71:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":35,\"../util/bounds\":90,\"../util/constants\":92}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n},{\"../dataflow/tuple\":35,\"../parse/mark\":46,\"../util/config\":91,\"datalib\":16}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":92,\"../util/debug\":93,\"./GroupBy\":81,\"./Transform\":85,\"./measures\":89,\"datalib\":16}],74:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n},{\"../dataflow/tuple\":35,\"./Transform\":85,\"datalib\":16}],75:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":29,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":93,\"./Transform\":85}],76:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":92,\"../util/debug\":93,\"./GroupBy\":81,\"./Transform\":85}],77:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":34,\"../parse/expr\":44,\"../util/constants\":92,\"../util/debug\":93,\"./Transform\":85}],78:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/debug\":93,\"./Transform\":85}],79:[function(require,module,exports){\n(function (global){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"force:x\",\n    \"y\": \"force:y\",\n    \"source\": \"force:source\",\n    \"target\": \"force:target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Collector\":29,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"./Transform\":85}],80:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":35,\"../parse/expr\":44,\"../util/constants\":92,\"../util/debug\":93,\"./Transform\":85}],81:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;\n},{\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"../util/constants\":92,\"./Transform\":85}],82:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":44,\"../util/constants\":92,\"datalib\":16}],83:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":44,\"../util/debug\":93,\"./Transform\":85,\"datalib\":16}],84:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Stack(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"y2\",\n    \"stop\": \"y\",\n    \"mid\": \"cy\"\n  };\n  this._collector = new Collector(graph);\n\n  return this;\n}\n\nvar proto = (Stack.prototype = new Transform());\n\nproto.transform = function(input) {\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/Collector\":29,\"../dataflow/changeset\":34,\"../dataflow/tuple\":35,\"./Transform\":85,\"datalib\":16}],85:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if(p.default) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":32,\"../util/constants\":92,\"./Parameter\":82}],86:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;\n},{\"../dataflow/tuple\":35,\"../util/debug\":93,\"./GroupBy\":81,\"./Transform\":85}],87:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":29,\"../util/debug\":93,\"./Transform\":85,\"datalib\":16}],88:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":73,\"./Bin\":74,\"./Cross\":75,\"./Facet\":76,\"./Filter\":77,\"./Fold\":78,\"./Force\":79,\"./Formula\":80,\"./Sort\":83,\"./Stack\":84,\"./Unique\":86,\"./Zip\":87}],89:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;\n},{\"../dataflow/tuple\":35,\"../util/constants\":92,\"../util/quickselect\":94,\"datalib\":16}],90:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":26,\"../render/canvas/path\":60,\"./config\":91}],91:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],92:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],93:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":91}],94:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};\n},{\"datalib\":16}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 1024,\n      base = opt.base || 10,\n      div = opt.div || [5, 2],\n      mins = opt.minstep || 0,\n      logb = Math.log(base),\n      level = Math.ceil(Math.log(maxb) / logb),\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step = Math.max(mins, Math.pow(base, Math.round(Math.log(span) / logb) - level)),\n      nbins = Math.ceil(span / step),\n      precision, v, i, eps;\n\n  if (opt.step != null) {\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n        opt.steps.length - 1,\n        bisectLeft(opt.steps, span / maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // increase step size if too many bins\n    do {\n      step *= base;\n      nbins = Math.ceil(span / step);\n    } while (nbins > maxb);\n\n    // decrease step size if allowed\n    for (i = 0; i < div.length; ++i) {\n      v = step / div[i];\n      if (v >= mins && span / v <= maxb) {\n        step = v;\n        nbins = Math.ceil(span / step);\n      }\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = (min<0 ? -1 : 1) * Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop: max,\n    step: step,\n    unit: precision\n  };\n};\n\nfunction bisectLeft(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (u.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeroes = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n\tmin = min || 0;\n\tmax = max || 1;\n\tvar delta = max - min;\n\tvar f = function() {\n\t\treturn min + delta * Math.random();\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.integer = function(a, b) {\n\tif (b === undefined) {\n\t\tb = a;\n\t\ta = 0;\n\t}\n\tvar f = function() {\n\t\treturn a + Math.max(0, Math.floor(b*(Math.random()-0.001)));\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};\n\ngen.random.normal = function(mean, stdev) {\n\tmean = mean || 0;\n\tstdev = stdev || 1;\n\tvar next = undefined;\n\tvar f = function() {\n\t\tvar x = 0, y = 0, rds, c;\n\t\tif (next !== undefined) {\n\t\t\tx = next;\n\t\t\tnext = undefined;\n\t\t\treturn x;\n\t\t}\n\t\tdo {\n\t\t\tx = Math.random()*2-1;\n\t\t\ty = Math.random()*2-1;\n\t\t\trds = x*x + y*y;\n\t\t} while (rds == 0 || rds > 1);\n\t\tc = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n\t\tnext = mean + y*c*stdev;\n\t\treturn mean + x*c*stdev;\n\t};\n\tf.samples = function(n) { return gen.zeroes(n).map(f); };\n\treturn f;\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.csv.parse(data ? data.toString() : data);\n  return d;\n};\n","module.exports = {\n  json: require('./json'),\n  csv: require('./csv'),\n  tsv: require('./tsv'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) ? data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error(\"TopoJSON library not loaded.\"); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if (obj = t.objects[format.feature]) {\n      return topojson.feature(t, obj).features\n    } else {\n      throw Error(\"Invalid TopoJSON object: \"+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if (obj = t.objects[format.mesh]) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error(\"Invalid TopoJSON object: \" + format.mesh);\n    }\n  } else {\n    throw Error(\"Missing TopoJSON feature or mesh parameter.\");\n  }\n\n  return [];\n};\n","var tree = require('../../tree');\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return tree.toTable(data, (format && format.children));\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nmodule.exports = function(data, format) {\n  var d = d3.tsv.parse(data ? data.toString() : data);\n  return d;\n};\n","var util = require('../util');\n\nvar tests = {\n  bool: function(x) { return x===\"true\" || x===\"false\" || util.isBoolean(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); },\n  num: function(x) { return !isNaN(+x) && !util.isDate(x); }\n};\n\nmodule.exports = function(values, f) {\n  var i, j, v;\n  \n  // types to test for\n  var types = [\n    {type: \"boolean\", test: tests.bool},\n    {type: \"number\", test: tests.num},\n    {type: \"date\", test: tests.date}\n  ];\n  \n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (v != null && !types[j].test(v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return \"string\";\n  }\n  \n  return types[0].type;\n};","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host == \"\") {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function (d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; };\n  \n  try {\n    var url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== \"text\"\n      ? request.response // null on error\n      : request.responseText; // \"\" on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest;\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest\n      && !(\"withCredentials\" in request)\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    \"onload\" in request\n      ? request.onload = request.onerror = respond\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\n  }\n  \n  request.open(\"GET\", url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(file, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(file, 'utf8');\n  }\n  require('fs').readFile(file, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) opt = {url: opt};\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\nvar formats = require('./formats');\nvar infer = require('./infer-types');\n\nvar PARSERS = {\n  \"number\": util.number,\n  \"boolean\": util.boolean,\n  \"date\": util.date\n};\n\nfunction read(data, format) {\n  var type = (format && format.type) || \"json\";\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  if (types === 'auto') {\n    // perform type inference\n    types = util.keys(data[0]).reduce(function(types, c) {\n      var type = infer(data, util.accessor(c));\n      if (PARSERS[type]) types[c] = type;\n      return types;\n    }, {});\n  }\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return PARSERS[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n}\n\nread.formats = formats;\nread.parse = parse;\nmodule.exports = read;","var dl = module.exports = {};\nvar util = require('./util');\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\ndl.bin = require('./bin');\ndl.summary = require('./summary');\ndl.template = require('./template');\ndl.truncate = require('./truncate');\n\ndl.load = require('./import/load');\ndl.read = require('./import/read');\nutil.extend(dl, require('./import/loaders'));\n\nvar log = require('./log');\ndl.log = function(msg) { log(msg, log.LOG); };\ndl.log.silent = log.silent;\ndl.error = function(msg) { log(msg, log.ERR); };\n","var LOG = \"LOG\";\nvar ERR = \"ERR\";\nvar silent = false;\n\nfunction prepare(msg, type) {\n  return '[' + [\n    '\"'+(type || LOG)+'\"',\n    Date.now(),\n    '\"'+msg+'\"'\n  ].join(\", \") + ']';\n}\n\nfunction log(msg, type) {\n  if (!silent) {\n    msg = prepare(msg, type);\n    console.error(msg);\n  }\n}\n\nlog.silent = function(val) { silent = !!val; };\n\nlog.LOG = LOG;\nlog.ERR = ERR;\nmodule.exports = log;","var util = require('./util');\nvar stats = {};\n\nstats.unique = function(values, f, results) {\n  if (!util.isArray(values) || values.length===0) return [];\n  results = results || [];\n  var u = {}, v, i;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) {\n      u[v] += 1;\n    } else {\n      u[v] = 1;\n      results.push(v);\n    }\n  }\n  results.counts = u;\n  return results;\n};\n\nstats.count = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) count += 1;\n  }\n  return count;\n};\n\nstats.count.distinct = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var u = {}, v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\nstats.count.nulls = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var v, i, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\nstats.median = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  if (f) values = values.map(f);\n  values = values.filter(util.isNotNull).sort(util.cmp);\n  var half = Math.floor(values.length/2);\n  if (values.length % 2) {\n    return values[half];\n  } else {\n    return (values[half-1] + values[half]) / 2.0;\n  }\n};\n\nstats.mean = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\nstats.variance = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\nstats.skew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\nstats.minmax = function(values, f) {\n  var s = {min: +Infinity, max: -Infinity}, v, i, n;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      if (v > s.max) s.max = v;\n      if (v < s.min) s.min = v;\n    }\n  }\n  return s;\n};\n\nstats.minIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, min = +Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v < min) { min = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.maxIndex = function(values, f) {\n  if (!util.isArray(values) || values.length==0) return -1;\n  var idx = 0, v, i, n, max = -Infinity;\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null && v > max) { max = v; idx = i; }\n  }\n  return idx;\n};\n\nstats.entropy = function(counts) {\n  var i, p, s = 0, H = 0;\n  for (i=0; i<counts.length; ++i) {\n    s += counts[i];\n  }\n  if (s === 0) return 0;\n  for (i=0; i<counts.length; ++i) {\n    p = counts[i] / s;\n    if (p > 0) H += p * Math.log(p) / Math.LN2;\n  }\n  return -H;\n};\n\nstats.entropy.normalized = function(counts) {\n  var H = stats.entropy(counts);\n  var max = -Math.log(1/counts.length) / Math.LN2;\n  return H / max;\n};\n\nstats.profile = function(values, f) {\n  if (!util.isArray(values) || values.length===0) return null;\n\n  // init\n  var p = {},\n      mean = 0,\n      count = 0,\n      distinct = 0,\n      min = f ? f(values[0]) : values[0],\n      max = min,\n      M2 = 0,\n      median = null,\n      vals = [],\n      u = {}, delta, sd, i, v, x, half;\n\n  // compute summary stats\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v != null) {\n      // update unique values\n      u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n      // update min/max\n      if (v < min) min = v;\n      if (v > max) max = v;\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      delta = x - mean;\n      mean = mean + delta / (++count);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (count - 1);\n  sd = Math.sqrt(M2);\n\n  // compute median\n  vals.sort(util.cmp);\n  half = Math.floor(vals.length/2);\n  median = (vals.length % 2)\n   ? vals[half]\n   : (vals[half-1] + vals[half]) / 2.0;\n\n  return {\n    unique:   u,\n    count:    count,\n    nulls:    values.length - count,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    median:   median,\n    stdev:    sd,\n    skew:     sd === 0 ? 0 : (mean - median) / sd\n  };\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar stats = require('./stats');\n\nmodule.exports = function(data, fields) {\n  if (data == null || data.length === 0) return null;\n  fields = fields || util.keys(data[0]);\n\n  var profiles = fields.map(function(f) {\n    var p = stats.profile(data, util.accessor(f));\n    return (p.field = f, p);\n  });\n  \n  profiles.toString = printSummary;\n  return profiles;\n};\n\nfunction printSummary() {\n  var profiles = this;\n  var str = [];\n  profiles.forEach(function(p) {\n    str.push(\"----- Field: '\" + p.field + \"' -----\");\n    if (typeof p.min === 'string' || p.distinct < 10) {\n      str.push(printCategoricalProfile(p));\n    } else {\n      str.push(printQuantitativeProfile(p));\n    }\n    str.push(\"\");\n  });\n  return str.join(\"\\n\");\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"min:      \" + p.min,\n    \"max:      \" + p.max,\n    \"median:   \" + p.median,\n    \"mean:     \" + p.mean,\n    \"stdev:    \" + p.stdev,\n    \"skew:     \" + p.skew\n  ].join(\"\\n\");\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    \"distinct: \" + p.distinct,\n    \"nulls:    \" + p.nulls,\n    \"top values: \"\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return \" '\" + v + \"' (\" + u[v] + \")\"; });\n  return list.concat(top).join(\"\\n\");\n}","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   require('./truncate')\n};\n\nfunction template(text) {\n  var src = source(text, \"d\");\n  src = \"var __t; return \" + src + \";\";\n\n  try {\n    return (new Function(\"d\", src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || \"obj\";\n  var index = 0;\n  var src = \"'\";\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += \"'\\n+((__t=(\"\n        + template_var(interpolate, variable)\n        + \"))==null?'':__t)+\\n'\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + \"'\";\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var format = [];\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || \"\";\n    if (stringCast) {\n      stringCast = false;\n      src = \"String(\" + src + \")\" + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  var src = util.field(prop).map(util.str).join(\"][\");\n  src = variable + \"[\" + src + \"]\";\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a\n          + (args.length > 1 ? ',' + util.number(args[1]) : '')\n          + ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!==\"left\" && b!==\"middle\" && b!==\"center\") ? \"right\" : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\"' + b + '\")';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      default:\n        throw Error(\"Unrecognized template filter: \" + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  \"'\":      \"'\",\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n};\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === \"'\" && pattern[pattern.length-1] === \"'\") ||\n      (pattern[0] !== '\"' && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error(\"Format pattern must be quoted: \" + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n};\n","var FIELDS = {\n  id: \"_tree_id\",\n  parent: \"_tree_parent\",\n  children: \"children\"\n};\n\nfunction toTable(tree, childrenField, idField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  idField = idField || FIELDS.id;\n  parentField = parentField || FIELDS.parent;\n  var list = [];\n  var id = 0;\n  \n  function visit(node, parentId) {\n    var nid = node[idField] = id++;\n    node[parentField] = parentId;\n    list.push(node);\n    \n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], nid);\n      }\n    }\n  }\n  \n  visit(tree, -1);\n  return list;\n}\n\nfunction fromTable(list, childrenField, idField, parentField) {\n  childrenField = childrenField || FIELDS.children;\n  idField = idField || FIELDS.id;\n  parentField = parentField || FIELDS.parent;\n  var root = null;\n  \n  list.forEach(function(node) {\n    if (node[childrenField]) {\n      node[childrenField] = null;\n    };\n  })\n  \n  list.forEach(function(node) {\n    var pid = node[parentField];\n    if (pid === -1) {\n      root = node;\n    } else {\n      var p = nodes[pid];\n      var children = p[childrenField] || (p[childrenField] = []);\n      children.push(node);\n    }\n  });\n\n  return root;\n}\n\nmodule.exports = {\n  toTable: toTable,\n  fromTable: fromTable,\n  fields: FIELDS\n};","module.exports = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis || \"...\";\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case \"left\":\n      return ellipsis + (word ? u_truncateOnWord(s,l,1) : s.slice(len-l));\n    case \"middle\":\n    case \"center\":\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) + ellipsis\n        + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join(\"\").trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","var u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined'\n        && typeof process.stderr !== 'undefined';\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) == '[object Function]';\n};\n\nu.isString = function(obj) {\n  return toString.call(obj) == '[object String]';\n};\n  \nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) == '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return toString.call(obj) == '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) == '[object Date]';\n};\n\nu.isNotNull = function(obj) {\n  return obj != null; // TODO include NaN here?\n};\n\n// type coercion functions\n\nu.number = function(s) { return s == null ? null : +s; };\n\nu.boolean = function(s) { return s == null ? null : s==='false' ? false : !!s; };\n\nu.date = function(s) { return s == null ? null : Date.parse(s); }\n\nu.array = function(x) { return x != null ? (u.isArray(x) ? x : [x]) : []; };\n\nu.str = function(x) {\n  return u.isArray(x) ? \"[\" + x.map(u.str) + \"]\"\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? (\"'\"+util_escape_str(x)+\"'\") : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, \"$1\\\\'\");\n}\n\n// utility functions\n\nu.identity = function(x) { return x; };\n\nu.true = function() { return true; };\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list) {\n  return list.reduce(function(obj, x) {\n    return (obj[x] = 1, obj);\n  }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  return values.join(\"|\");\n};\n\n// data access functions\n\nu.field = function(f) {\n  return f.split(\"\\\\.\")\n    .map(function(d) { return d.split(\".\"); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += \".\" + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return (u.isFunction(f) || f==null)\n    ? f : u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x) { return s.reduce(function(x,f) {\n          return x[f];\n        }, x);\n      }\n    : function(x) { return x[f]; };\n};\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1\n    ? function(x, v) {\n        for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n        x[s[i]] = v;\n      }\n    : function(x, v) { x[f] = v; };\n};\n\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === \"-\") { s = -1; f = f.slice(1); }\n    else if (f[0] === \"+\") { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n}\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith\n  ? function(string, searchString) {\n    return string.startsWith(searchString);\n  }\n  : function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this.graph = new Graph();\n\n  this._node = new Node(this.graph);\n  this._builder = null; // Top-level scenegraph builder\n};\n\nvar proto = Model.prototype;\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.data = function() {\n  var data = this.graph.data.apply(this.graph, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this._node.addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this._node.removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this._node.addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this._node.addListener(l); };\nproto.removeListener = function(l) { this._node.removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.graph.propagate(cs, this._node);\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler = null;\n  this._io = canvas;\n  if (el) this.initialize(el);\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\nprototype.data = function(data) {\n  var m = this.model();\n  if (!arguments.length) return m.data();\n  dl.keys(data).forEach(function(d) { m.data(d).add(dl.duplicate(data[d])); });\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    if (this._el) this.initialize(this._el.parentNode);\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    if (this._el) this.initialize(this._el.parentNode);\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._io;\n  if (type === \"canvas\") type = canvas;\n  if (type === \"svg\") type = svg;\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    if (this._el) this.initialize(this._el.parentNode);\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n  \n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  // TODO: with streaming data API, adds should dl.duplicate just parseSpec\n  // to prevent Vega from polluting the environment.\n\n  var cs = changeset.create();\n  if(trans) cs.trans = trans;\n  if(opt.reflow !== undefined) cs.reflow = opt.reflow\n\n  if(!v._build) {\n    v._renderNode = new Node(v._model.graph)\n      .router(true);\n\n    v._renderNode.evaluate = function(input) {\n      debug(input, [\"rendering\"]);\n\n      var s = v._model.scene();\n      if(input.trans) {\n        input.trans.start(function(items) { v._renderer.render(s, items); });\n      } else {\n        v._renderer.render(s);\n      }\n\n      // For all updated datasources, finalize their changesets.\n      var d, ds;\n      for(d in input.data) {\n        ds = v._model.data(d);\n        if(!ds.revises()) continue;\n        changeset.finalize(ds.last());\n      }\n\n      return input;\n    };\n\n    v._model.scene(v._renderNode);\n    v._build = true;\n  }\n\n  // Pulse the entire model (Datasources + scene).\n  v._model.fire(cs);\n\n  return v.autopad(opt);\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nView.factory = function(model) {\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = new View()\n      .model(model)\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding)\n      .renderer(opt.renderer || \"canvas\");\n\n    if (opt.el) v.initialize(opt.el);\n    if (opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if(input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if(input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if(input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if(input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.add = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.add(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]); \n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n}\n\nvar proto = Graph.prototype;\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(name) {\n  var graph = this;\n  if(!arguments.length) name = dl.keys(this._signals);\n  if(!dl.isArray(name)) return this._signals[name].value();\n  return name.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  prev:   set_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var graph = model.graph,\n      signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(graph);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate({}, db, graph.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? graph.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate);\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= \"predicates[\"+dl.str(o.predicate)+\"](args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item];\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) o.push(spec.scale);\n\n    var ops = parseOperands(o),\n        code = ops.code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = o3(o1);\\no2 = o3(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s);\n    var pred = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales: {},\n        data: {}\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    ['signals', 'scales', 'data'].forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode: encoder,\n      signals: dl.keys(deps.signals),\n      scales: dl.keys(deps.scales),\n      data: dl.keys(deps.data)\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar GROUP_VARS = {\n  \"width\": 1,\n  \"height\": 1,\n  \"mark.group.width\": 1,\n  \"mark.group.height\": 1\n};\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(predicates[\"+dl.str(predName)+\"](\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, \n      scale = null, \n      signalRef = null,\n      signals = [];\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    signalRef = dl.field(ref.signal);\n    val = \"signals[\"+signalRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(signalRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    val = fieldRef(ref.field);\n  }\n\n  if (ref.scale !== undefined) {\n    scale = scaleRef(ref.scale);\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n  return {val: val, signals: signals, scales: ref.scale};\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return dl.field(ref).map(dl.str).join(\"][\");\n  } \n\n  // Resolve nesting/parent lookups\n  var r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\";\n\n  if(ref.datum) {\n    return \"item.datum[\"+r+\"]\";\n  } else if(ref.group) {\n    return scope+\"group[\"+r+\"]\";\n  } else if(ref.parent) {\n    return scope+\"group.datum[\"+r+\"]\";\n  } else if(ref.signal) {\n    return \"signals[\"+r+\"]\";\n  }\n}\n\nfunction scaleRef(ref) {\n  var scale = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? ref.name : fieldRef(ref.name);\n  } else {\n    scale = fieldRef(ref);\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return scale;\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  var graph = model.graph;\n\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = graph.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { graph.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      graph = model.graph,\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(def, value, item) {\n    if(!item || !item.scale) {\n      item = (item && item.mark) ? item.mark.group : model.scene().items[0];\n    }\n\n    var scale = item.scale(def.scale.signal || def.scale);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(graph),\n        item = spec.item ? graph.signal(spec.item.signal) : null;\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return graph.doNotPropagate;\n      var val = expr.eval(graph, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val, item ? item.value() : null);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    graph.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(graph);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = graph.signal(name + START,  false);\n    s[MIDDLE] = graph.signal(name + MIDDLE, false);\n    s[END]    = graph.signal(name + END,    false);\n\n    var router = new Node(graph);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return graph.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return graph.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = graph.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(graph, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(graph, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      graph.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model.graph);\n  if(def.type == 'facet') {\n    var pipeline = (def.transform||[])\n      .map(function(t) { return parseTransforms(model, t); });\n    tx.pipeline(pipeline);\n  }\n\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(model, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, model.graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, model.graph)\n    .router(true)\n    .collector(true);\n\n  this._model = model;\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? model.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._model, this._mark);\n  this._bounder = new Bounder(this._model, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._model.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._model, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._model.graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._model.graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var Node = require('../dataflow/Node'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(model, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, model.graph)\n\n  this._model = model;\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db, i, len, item;\n\n  db = graph.data().reduce(function(db, ds) { \n    return (db[ds.name()] = ds.values(), db);\n  }, {});\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    if(exit)   encode.call(this, exit,   item, input.trans), db, sg; \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg);\n    if(update) encode.call(this, update, item, input.trans, db, sg);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, this._model.predicates());\n}\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(model, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(model.graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(model, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(model.graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(model.graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._model.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._model.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._model, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._model, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._model, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._model, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(model, def, parent) {\n  this._model   = model;\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, model.graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = def.fields || dl.array(def),\n      uniques = scale.type === C.ORDINAL || scale.type === C.QUANTILE,\n      ck = \"_\"+which,\n      cache = scale[ck],\n      cacheField = {ops: []},  // the field and measures in the aggregator\n      sort = def.sort,\n      i, rlen, j, flen, r, fields, from, data, keys;\n\n  if(!cache) {\n    cache = scale[ck] = new Aggregate(graph);\n    cacheField.ops = [];\n    cache.singleton(true);\n    if(uniques && sort) cacheField.ops.push(sort.stat);\n  }\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    r = refs[i];\n    from = r.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = dl.array(r.field).map(function(f) {\n      if (f.parent) return dl.accessor(f.parent)(group.datum)\n      return f; // String or {\"signal\"}\n    });\n\n    if(uniques) {\n      cacheField.name = sort ? sort.field : \"_id\";\n      cache.fields.set(cache, [cacheField]);\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cache.group_by.set(cache, fields[j])\n          .evaluate(data);\n      }\n    } else {\n      for(j=0, flen=fields.length; j<flen; ++j) {\n        cacheField.name = fields[j];\n        cacheField.ops  = [C.MIN, C.MAX];\n        cache.fields.set(cache, [cacheField]) // Treat as flat datasource\n          .evaluate(data);\n      }\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.data();\n  if (uniques) {\n    keys = dl.keys(data)\n      .filter(function(k) { return data[k] != null; });\n\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + \"tpl.\" + cacheField.name;\n      sort = dl.comparator(sort);\n      keys = keys.map(function(k) { return { key: k, tpl: data[k].tpl }})\n        .sort(sort)\n        .map(function(k) { return k.key; });\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return keys;\n  } else {\n    data = data[\"\"]; // Unpack flat aggregation\n    return (data === null) ? [] : [data[C.SINGLETON].min, data[C.SINGLETON].max];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    meas = require('./measures'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    group_by: {type: \"array<field>\"}\n  });\n\n  this._output = {\n    \"count\":    \"count\",\n    \"avg\":      \"avg\",\n    \"min\":      \"min\",\n    \"max\":      \"max\",\n    \"sum\":      \"sum\",\n    \"mean\":     \"mean\",\n    \"var\":      \"var\",\n    \"stdev\":    \"stdev\",\n    \"varp\":     \"varp\",\n    \"stdevp\":   \"stdevp\",\n    \"median\":   \"median\"\n  };\n\n  // Aggregators parameter handled manually.\n  this._fieldsDef   = null;\n  this._Aggregators = null;\n  this._singleton   = false;  // If true, all fields aggregated within a single monoid\n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new GroupBy());\n\nproto.fields = {\n  set: function(transform, fields) {\n    var i, len, f, signals = {};\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._Aggregators = null;\n    transform.aggs();\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.singleton = function(c) {\n  if(!arguments.length) return this._singleton;\n  this._singleton = c;\n  return this;\n};\n\nproto.aggs = function() {\n  var transform = this,\n      graph = this._graph,\n      fields = this._fieldsDef,\n      aggs = this._Aggregators,\n      f, i, k, name, ops, measures;\n\n  if(aggs) return aggs;\n  else aggs = this._Aggregators = []; \n\n  for (i = 0; i < fields.length; i++) {\n    f = fields[i];\n    if (f.ops.length === 0) continue;\n\n    name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    ops  = dl.array(f.ops.signal ? graph.signalRef(f.ops.signal) : f.ops);\n    measures = ops.map(function(a) {\n      a = a.signal ? graph.signalRef(a.signal) : a;\n      return meas[a](name + '_' + transform._output[a]);\n    });\n    aggs.push({\n      accessor: dl.accessor(name),\n      field: this._singleton ? C.SINGLETON : name,\n      measures: meas.create(measures)\n    });\n  }\n\n  return aggs;\n};\n\nproto._reset = function(input, output) {\n  this._Aggregators = null; // rebuild aggregators\n  this.aggs();\n  return GroupBy.prototype._reset.call(this, input, output);\n};\n\nproto._keys = function(x) {\n  return this._gb.fields.length ? \n    GroupBy.prototype._keys.call(this, x) : {keys: [], key: \"\"};\n};\n\nproto._new_cell = function(x, k) {\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length, \n      agg;\n\n  for(; i<len; i++) {\n    agg = aggs[i];\n    cell[agg.field] = new agg.measures(cell, cell.tpl);\n  }\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt++;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].add(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var c = this._cell(x),\n      aggs = this.aggs(),\n      i = 0, len = aggs.length,\n      agg;\n\n  c.cnt--;\n  for(; i<len; i++) {\n    agg = aggs[i];\n    c[agg.field].rem(agg.accessor(x));\n  }\n  c.flg |= C.MOD_CELL;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  this._gb = this.group_by.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      aggs = this.aggs(),\n      len = aggs.length,\n      i, k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    for(i=0; i<len; i++) {\n      c[aggs[i].field].set();\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Aggregate;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bin({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facet(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {keys: {type: \"array<field>\"} });\n\n  this._pipeline = [];\n  return this;\n}\n\nvar proto = (Facet.prototype = new GroupBy());\n\nproto.pipeline = function(pipeline) {\n  if(!arguments.length) return this._pipeline;\n  this._pipeline = pipeline;\n  return this;\n};\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    output.rem.push(c.tpl);\n    c.delete();\n  }\n  this._cells = {};\n};\n\nproto._new_tuple = function(x, k) {\n  return tuple.ingest(k, null);\n};\n\nproto._new_cell = function(x, k) {\n  // Rather than sharing the pipeline between all nodes,\n  // give each cell its individual pipeline. This allows\n  // dynamically added collectors to do the right thing\n  // when wiring up the pipelines.\n  var cell = GroupBy.prototype._new_cell.call(this, x, k),\n      pipeline = this._pipeline.map(function(n) { return n.clone(); }),\n      facet = this,\n      t = cell.tpl;\n\n  cell.ds = this._graph.data(\"vg_\"+t._id, pipeline, t);\n  cell.delete = function() {\n    debug({}, [\"deleting cell\", k.key]);\n    facet.removeListener(pipeline[0]);\n    facet._graph.disconnect(pipeline);\n  };\n\n  this.addListener(pipeline[0]);\n\n  return cell;\n};\n\nproto._add = function(x) {\n  var cell = GroupBy.prototype._add.call(this, x);\n  cell.ds._input.add.push(x);\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  var cell = GroupBy.prototype._mod.call(this, x, reset);\n  if(!(cell.flg & C.ADD_CELL)) cell.ds._input.mod.push(x); // Propagate tuples\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = GroupBy.prototype._rem.call(this, x);\n  cell.ds._input.rem.push(x);\n  return cell;\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"faceting\"]);\n\n  this._gb = this.keys.get(this._graph);\n\n  var output = GroupBy.prototype.transform.call(this, input, reset),\n      k, c;\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(c == null) continue;\n    if(c.cnt === 0) {\n      c.delete();\n    } else {\n      // propagate sort, signals, fields, etc.\n      changeset.copy(input, c.ds._input);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"force:x\",\n    \"y\": \"force:y\",\n    \"source\": \"force:source\",\n    \"target\": \"force:target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    C = require('../util/constants');\n\nfunction GroupBy(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = (GroupBy.prototype = new Transform());\n\nproto.init = function(graph) {\n  this._gb = null; // fields+accessors to groupby fields\n  this._cells = {};\n  return Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n};\n\nproto.data = function() { return this._cells; };\n\nproto._reset = function(input, output) {\n  var k, c;\n  for(k in this._cells) {\n    if(!(c = this._cells[k])) continue;\n    output.rem.push(c.tpl);\n  }\n  this._cells = {};\n};\n\nproto._keys = function(x) {\n  var acc = this._gb.accessors || [this._gb.accessor];\n  var keys = acc.reduce(function(g, f) {\n    return ((v = f(x)) !== undefined) ? (g.push(v), g) : g;\n  }, []), k = keys.join(\"|\"), v;\n  return keys.length > 0 ? {keys: keys, key: k} : undefined;\n};\n\nproto._cell = function(x) {\n  var k = this._keys(x);\n  return this._cells[k.key] || (this._cells[k.key] = this._new_cell(x, k));\n};\n\nproto._new_cell = function(x, k) {\n  return {\n    cnt: 0,\n    tpl: this._new_tuple(x, k),\n    flg: C.ADD_CELL\n  };\n};\n\nproto._new_tuple = function(x, k) {\n  var gb = this._gb,\n      fields = gb.fields || [gb.field],\n      acc = gb.accessors || [gb.accessor],\n      t = {}, i, len;\n\n  for(i=0, len=fields.length; i<len; ++i) {\n    t[fields[i]] = acc[i](x);\n  } \n\n  return tuple.ingest(t, null);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  cell.cnt += 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  cell.cnt -= 1;\n  cell.flg |= C.MOD_CELL;\n  return cell;\n};\n\nproto._mod = function(x, reset) {\n  if(x._prev && x._prev !== C.SENTINEL && this._keys(x._prev) !== undefined) {\n    this._rem(x._prev);\n    return this._add(x);\n  } else if(reset) { // Signal change triggered reflow\n    return this._add(x);\n  }\n  return this._cell(x);\n};\n\nproto.transform = function(input, reset) {\n  var groupBy = this,\n      output = changeset.create(input),\n      k, c, f, t;\n\n  if(reset) this._reset(input, output);\n\n  input.add.forEach(function(x) { groupBy._add(x); });\n  input.mod.forEach(function(x) { groupBy._mod(x, reset); });\n  input.rem.forEach(function(x) {\n    if(x._prev && x._prev !== C.SENTINEL && groupBy._keys(x._prev) !== undefined) {\n      groupBy._rem(x._prev);\n    } else {\n      groupBy._rem(x);\n    }\n  });\n\n  for(k in this._cells) {\n    c = this._cells[k];\n    if(!c) continue;\n    f = c.flg;\n    t = c.tpl;\n\n    if(c.cnt === 0) {\n      if(f === C.MOD_CELL) output.rem.push(t);\n      this._cells[k] = null;\n    } else if(f & C.ADD_CELL) {\n      output.add.push(t);\n    } else if(f & C.MOD_CELL) {\n      output.mod.push(t);\n    }\n    c.flg = 0;\n  }\n\n  return output;\n};\n\nmodule.exports = GroupBy;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Stack(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"y2\",\n    \"stop\": \"y\",\n    \"mid\": \"cy\"\n  };\n  this._collector = new Collector(graph);\n\n  return this;\n}\n\nvar proto = (Stack.prototype = new Transform());\n\nproto.transform = function(input) {\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if(p.default) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var Transform = require('./Transform'),\n    GroupBy = require('./GroupBy'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug');\n\nfunction Unique(graph) {\n  GroupBy.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    as: {type: \"value\"}\n  });\n\n  return this;\n}\n\nvar proto = (Unique.prototype = new GroupBy());\n\nproto._new_tuple = function(x) {\n  var o  = {},\n      on = this.field.get(this._graph),\n      as = this.as.get(this._graph);\n\n  o[as] = on.accessor(x);\n  return tuple.ingest(o, null);\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"uniques\"]);\n  this._gb = this.field.get(this._graph);\n  return GroupBy.prototype.transform.call(this, input, reset);\n};\n\nmodule.exports = Unique;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  unique:     require('./Unique'),\n  zip:        require('./Zip')\n};","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    quickselect = require('../util/quickselect'),\n    C = require('../util/constants');\n\nvar types = {\n  \"count\": measure({\n    name: \"count\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.cell.cnt\"\n  }),\n  \"_counts\": measure({\n    name: \"_counts\",\n    init: \"this.cnts = {};\",\n    add:  \"this.cnts[v] = ++this.cnts[v] || 1;\",\n    rem:  \"this.cnts[v] = --this.cnts[v] < 0 ? 0 : this.cnts[v];\",\n    set:  \"\",\n    req:  [\"count\"]\n  }),\n  \"sum\": measure({\n    name: \"sum\",\n    init: \"this.sum = 0;\",\n    add:  \"this.sum += v;\",\n    rem:  \"this.sum -= v;\",\n    set:  \"this.sum\"\n  }),\n  \"avg\": measure({\n    name: \"avg\",\n    init: \"this.avg = 0;\",\n    add:  \"var d = v - this.avg; this.avg += d / this.cell.cnt;\",\n    rem:  \"var d = v - this.avg; this.avg -= d / this.cell.cnt;\",\n    set:  \"this.avg\",\n    req:  [\"count\"], idx: 1\n  }),\n  \"var\": measure({\n    name: \"var\",\n    init: \"this.dev = 0;\",\n    add:  \"this.dev += d * (v - this.avg);\",\n    rem:  \"this.dev -= d * (v - this.avg);\",\n    set:  \"this.dev / (this.cell.cnt-1)\",\n    req:  [\"avg\"], idx: 2\n  }),\n  \"varp\": measure({\n    name: \"varp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"this.dev / this.cell.cnt\",\n    req:  [\"var\"], idx: 3\n  }),\n  \"stdev\": measure({\n    name: \"stdev\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / (this.cell.cnt-1))\",\n    req:  [\"var\"], idx: 4\n  }),\n  \"stdevp\": measure({\n    name: \"stdevp\",\n    init: \"\",\n    add:  \"\",\n    rem:  \"\",\n    set:  \"Math.sqrt(this.dev / this.cell.cnt)\",\n    req:  [\"var\"], idx: 5\n  }),\n  \"min\": measure({\n    name: \"min\",\n    init: \"this.min = +Infinity;\",\n    add:  \"this.min = v < this.min ? v : this.min;\",\n    rem:  \"var self = this; this.min = v == this.min \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v < m ? v : m }, +Infinity) \" + \n          \": this.min;\",\n    set:  \"this.min\",\n    req: [\"_counts\"], idx: 6\n  }),\n  \"max\": measure({\n    name: \"max\",\n    init: \"this.max = -Infinity;\",\n    add:  \"this.max = v > this.max ? v : this.max;\",\n    rem:  \"var self = this; this.max = v == this.max \" +\n          \"? this.keys(this.cnts).reduce(function(m, v) { \" +\n          \"   return self.cnts[(v = +v)] > 0 && v > m ? v : m }, -Infinity) \" + \n          \": this.max;\",\n    set:  \"this.max\",\n    req: [\"_counts\"], idx: 7\n  }),\n  \"median\": measure({\n    name: \"median\",\n    init: \"this.vals = []; \",\n    add:  \"if(this.vals) this.vals.push(v); \",\n    rem:  \"this.vals = null;\",\n    set:  \"this.cell.cnt % 2 ? this.sel(~~(this.cell.cnt/2), this.vals, this.cnts) : \"+\n          \"0.5 * (this.sel(~~(this.cell.cnt/2)-1, this.vals, this.cnts) + this.sel(~~(this.cell.cnt/2), this.vals, this.cnts))\",\n    req: [\"_counts\"], idx: 8\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = Object.create(base);\n    m.out = out || base.name;\n    if (!m.idx) m.idx = 0;\n    return m;\n  };\n}\n\nfunction resolve(agg) {\n  function collect(m, a) {\n    (a.req || []).forEach(function(r) {\n      if (!m[r]) collect(m, m[r] = types[r]());\n    });\n    return m;\n  }\n  var map = agg.reduce(collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {}));\n  var all = [];\n  for (var k in map) all.push(map[k]);\n  all.sort(function(a,b) { return a.idx - b.idx; });\n  return all;\n}\n\nfunction compile(agg) {\n  var all = resolve(agg),\n      ctr = \"this.tpl = t; this.cell = c;\",\n      add = \"\",\n      rem = \"\",\n      set = \"var t = this.tpl;\";\n\n  all.forEach(function(a) { ctr += a.init; add += a.add; rem += a.rem; });\n  agg.forEach(function(a) { set += \"this.tuple.set(t,'\"+a.out+\"',\"+a.set+\");\"; });\n  set += \"return t;\";\n\n  ctr = Function(\"c\", \"t\", ctr);\n  ctr.prototype.add = Function(\"v\", add);\n  ctr.prototype.rem = Function(\"v\", rem);\n  ctr.prototype.set = Function(\"stamp\", set);\n  ctr.prototype.mod = mod;\n  ctr.prototype.keys = dl.keys;\n  ctr.prototype.sel = quickselect;\n  ctr.prototype.tuple = tuple;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n};\n\ntypes.create   = compile;\nmodule.exports = types;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  MIN: \"min\",\n  MAX: \"max\",\n\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};","var dl = require('datalib');\n\nmodule.exports = function quickselect(k, x, c) {\n  function swap(a, b) {\n    var t = x[a];\n    x[a] = x[b];\n    x[b] = t;\n  }\n\n  // x may be null, in which case assemble an array from c (counts)\n  if(x === null) {\n    x = [];\n    dl.keys(c).forEach(function(k) {\n      var i = 0, len = c[k];\n      k = +k || k;\n      for(; i<len; ++i) x.push(k);\n    });\n  }\n  \n  var left = 0,\n      right = x.length - 1,\n      pos, i, pivot;\n  \n  while (left < right) {\n    pivot = x[k];\n    swap(k, right);\n    for (i = pos = left; i < right; ++i) {\n      if (x[i] < pivot) { swap(i, pos++); }\n    }\n    swap(right, pos);\n    if (pos === k) break;\n    if (pos < k) left = pos + 1;\n    else right = pos - 1;\n  }\n  return x[k];\n};"],"sourceRoot":"/source/"}