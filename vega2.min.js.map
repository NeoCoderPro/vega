{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index","vega2.js","node_modules/browserify/node_modules/process/browser.js","node_modules/datalib/src/aggregate/aggregator.js","node_modules/datalib/src/aggregate/collector.js","node_modules/datalib/src/aggregate/groupby.js","node_modules/datalib/src/aggregate/measures.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/bins/histogram.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/dsv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/import/readers.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/index.js","node_modules/datalib/src/print.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/template.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","node_modules/heap/index.js","node_modules/heap/lib/heap.js","src/core/Bounds.js","src/core/HeadlessView.js","src/core/Model.js","src/core/View.js","src/dataflow/Collector.js","src/dataflow/Datasource.js","src/dataflow/Graph.js","src/dataflow/Node.js","src/dataflow/Signal.js","src/dataflow/changeset.js","src/dataflow/tuple.js","src/expression/codegen.js","src/expression/constants.js","src/expression/functions.js","src/expression/index.js","src/expression/parser.js","src/parse/axes.js","src/parse/data.js","src/parse/events.js","src/parse/expr.js","src/parse/interactors.js","src/parse/mark.js","src/parse/marks.js","src/parse/modify.js","src/parse/padding.js","src/parse/predicates.js","src/parse/properties.js","src/parse/signals.js","src/parse/spec.js","src/parse/streams.js","src/parse/transforms.js","src/render/canvas/Handler.js","src/render/canvas/Renderer.js","src/render/canvas/index.js","src/render/canvas/marks.js","src/render/canvas/path.js","src/render/svg-headless/Renderer.js","src/render/svg-headless/index.js","src/render/svg-headless/svg.js","src/render/svg/Handler.js","src/render/svg/Renderer.js","src/render/svg/marks.js","src/scene/Bounder.js","src/scene/Builder.js","src/scene/Encoder.js","src/scene/GroupBuilder.js","src/scene/Item.js","src/scene/Scale.js","src/scene/Transition.js","src/scene/axis.js","src/transforms/Aggregate.js","src/transforms/BatchTransform.js","src/transforms/Bin.js","src/transforms/Cross.js","src/transforms/Facet.js","src/transforms/Facetor.js","src/transforms/Filter.js","src/transforms/Fold.js","src/transforms/Force.js","src/transforms/Formula.js","src/transforms/Geo.js","src/transforms/GeoPath.js","src/transforms/LinkPath.js","src/transforms/Parameter.js","src/transforms/Pie.js","src/transforms/Sort.js","src/transforms/Stack.js","src/transforms/Transform.js","src/transforms/Treemap.js","src/transforms/Zip.js","src/transforms/index.js","src/util/bounds.js","src/util/config.js","src/util/constants.js","src/util/debug.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","vg","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"core","View","dataflow","changeset","Datasource","Graph","Node","parse","spec","scene","Builder","GroupBuilder","transforms","config","util","./src/core/View","./src/dataflow/Datasource","./src/dataflow/Graph","./src/dataflow/Node","./src/dataflow/changeset","./src/parse/spec","./src/scene/Builder","./src/scene/GroupBuilder","./src/transforms/index","./src/util/config","datalib",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"Aggregator","_cells","_aggr","_stream","summarize_args","fields","isArray","ops","array","Measures","Collector","Flags","ADD_CELL","MOD_CELL","proto","prototype","stream","v","key","_key","$","groupby","dims","_dims","map","d","isString","get","isFunction","clear","summarize","_count","m","j","op","as","aggr","identity","measures","create","_assign","count","*","object","value","_cellkey","x","k","String","_cell","_newcell","cell","num","tuple","_newtuple","flag","aggs","collect","data","_ingest","_add","add","_rem","rem","_mod","curr","prev","cell0","cell1","isObject","result","values","set","_rems","changes","mod","execute","input","insert","_consolidate","remove","../util","./collector","./measures",5,"_last","stats","REM","Array","lut","toMap","hasOwnProperty","_f","extent","_ext","index","argmin","argmax","min","Infinity","max","quartile","_q","q1","q2","q3","../stats",6,"args","reduce","arguments","concat","./aggregator",7,"measure","base","out","extend","init","idx","resolve","agg","helper","types","req","forEach","str","vals","sort","b","accessor","mutator","all","ctr","slice","Function","assign","distinct","isValid","v_new","v_old","undefined","missing","valid","sum","mean","average","variance","variancep","stdev","stdevp","median","modeskew",8,"bins","opt","step","level","minstep","precision","eps","maxb","maxbins","logb","Math","log","div","span","steps","bisect","ceil","pow","round","floor","start","stop","unit","lo","hi","mid","cmp","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","raw","../time-units",9,"$bin","options","$func","histogram","numerical","categorical","type","qtype","ext","h","gen","range","isFinite","unique","c","comparator","integer","number","../generate","../import/type","./bins",10,"repeat","val","zeros","random","uniform","samples","normal","next","rds","y","sqrt",11,"dsv","format","header","join","delimiter","d3","delim","fmt","../../util",12,"json","topojson","treejson","csv","tsv","./dsv","./json","./topojson","./treejson",13,"isBuffer","JSON","property",14,"obj","feature","objects","features","mesh",15,"toTable","root","childrenField","visit","node","table","children",16,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","test","startsWith","isNode","defaultProtocol","domainWhiteList","domain","origin","parts","hostname","document","createElement","href","host","toLowerCase","location","whiteListed","some","lastIndexOf","load","callback","error","err","indexOf","http","xhr","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","filename","fs","readFile","readFileSync","body","statusCode","getBody","sync-request",17,"read","formats","cols","parsers","clen","inferAll","duplicate","keys","annotation","./formats","./type",18,"./load","./read",19,"TYPES","isDate","isNumber","isBoolean","typeAll","infer","TESTS","splice","PARSERS","boolean","string","isNaN","Date",20,"dl","print","template","timeunits","./aggregate/groupby","./bins/bins","./bins/histogram","./generate","./import/load","./import/read","./import/readers","./import/type","./print","./stats","./template","./time-units","./util",21,"printQuantitativeProfile","p","printCategoricalProfile","list","top","FMT","POS","separator","minwidth","maxwidth","limit","lens","head","truncate","pad","tmpl","summary","__summary__","field",22,"results","filter","quantile","q","H","delta","M2","avg","med","std","dot","Number","rank","mu","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","aa","bb","ab","X","Y","A","mat","B","exp","L2","abs","R","M","entropy","counts","LN2","mutual","z","px","py","I","info","profile","sd",23,"text","src","source","bind","context","variable","regex","template_re","replace","match","interpolate","offset","template_escaper","template_escapeChar","template_var","strcall","stringCast","filters","split","prop","shift","trim","pidx","template_format","time","template_escapes","pattern","format_map","clearFormatCache","'","\\","\r","\n"," "," ",24,"STEPS","entries","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps",25,"util_escape_str","escape_str_re","strrep","truncateOnWord","rev","cnt","tok","truncate_word_re","reverse","w","Buffer","stderr","FNAME","namedfunc","stringify","equal","keystr","toString","Object","apply","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","NaN","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","searchString","pos","padchar","word","ellipsis","l1","l2","_process","buffer",26,"./lib/heap",27,"Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","item","lastelt","returnitem","pop","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","empty","size","clone","heap","toArray","front","has","copy","factory",28,"bounds","union","x1","MAX_VALUE","y1","x2","y2","expand","translate","dx","dy","rotate","angle","cos","sin","cx","cy","encloses","intersects","width","height",29,"canvas","svg","HeadlessView","model","_el","_type","_renderers","_canvas","renderer","canvasAsync","wait","pendingImages","view","render","_renderer","initialize","_width","_height","_padding","_viewport","left","right","bottom","_io","Renderer","initSVG","initCanvas","Canvas","tw","th","ctx","getContext","setAttribute","setTransform","resize","../render/canvas/index","../render/svg-headless/index","../util/debug","./View",30,"Model","_defs","_predicates","_scene","_node","_builder","predicates","defs","pipeline","predicate","disconnect","marks","connect","fire","cs","propagate","../dataflow/Graph","../dataflow/Node","../dataflow/changeset","../scene/GroupBuilder",31,"streaming","ds","_model","listener","streamer","_streamer","_changeset","api","signals","_api","update","build","_renderNode","router","evaluate","debug","trans","items","revises","finalize","last","parseStreams","Encoder","Transition","el","__width","__height","_autopad","_handler","dataValues","signal","setter","signalValues","reflow","_strict","padding","autopad","inset","autopadInset","viewport","_build","prevHandler","parentNode","select","append","attr","style","Handler","handlers","handler","duration","ease","props","listeners","onSignal","offSignal","../parse/streams","../render/svg/index","../scene/Encoder","../scene/Transition","../util/config","./HeadlessView",32,"graph","_data","collector","ids","_id","../util/constants","./Node","./changeset",33,"facet","_graph","_name","_source","_facet","_input","_output","_pipeline","_collector","_revises","set_prev","_prev","C","SENTINEL","ingest","where","func","idMap","unshift","output","dest","_srcMap","derive","./Collector","./tuple",34,"_signals","forEachNode","branch","Signal","_stamp","_rank","doNotPropagate","db","names","sg","signalRef","ref","schedule","pulse","reflowed","pq","stamp","_listeners","dependency","DATA","SIGNALS","reevaluate","run","./Datasource","./Signal",35,"REEVAL","FIELDS","SCALES","node_id","_registered","_deps","scales","_isRouter","_isCollector","deps","bool","cur","foundSending","reeval",36,"_value","_handlers",37,"reset_prev",38,"datum","tuple_id","has_prev","reset",39,"codegen_wrap","ast","retval","codegen","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","DATUM","SIGNAL_PREFIX","Literal","Identifier","id","Program","MemberExpression","computed","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","UpdateExpression","prefix","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","Property","ExpressionStatement","expression","./constants","./functions",40,"E","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2",41,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","atan2","tan","now","datetime","hours","minutes","seconds","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","if",42,"parser","./codegen","./parser",43,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","charCodeAt","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","end","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","RegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","token","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","entry","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","expr","state","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",44,"axes","group","def","axs","axis","scale","orient","ORIENT","layer","grid","titleOffset","tickValues","tickFormat","tickSubdivide","subdivide","tickPadding","tickSize","ts","tickSizeMajor","tickSizeMinor","tickSizeEnd","ticks","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","labels","titleProperties","gridLineProperties","domainProperties","../scene/axis",45,"parseTransforms","parseModify","parseData","loaded","datasource","transform","modify","./modify","./transforms",46,"peg$subclass","child","ctor","constructor","SyntaxError","expected","peg$computePosDetails","details","startPos","endPos","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","buildMessage","stringEscape","hex","toUpperCase","expectedDesc","foundDesc","expectedDescs","posDetails","peg$parsestart","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$FAILED","peg$parsesep","peg$c1","peg$silentFails","peg$c2","peg$reportedPos","peg$c3","peg$c0","peg$c4","s6","s7","s8","s9","s10","s11","s12","s13","peg$c5","peg$c6","peg$parsefiltered","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$parsestream","peg$parsefilter","peg$c13","peg$c14","peg$parseclass","peg$parseid","peg$c15","peg$parseeventType","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$parsevalue","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$result","peg$startRuleFunctions","peg$startRuleFunction","f1","f2","middle","event","target","startRule",47,"eval","../expression",48,"defFactory","interactor","inject","pd","nsSignals","nsPredicates","nsMarks","mk","injectMarks","from","ENTER","UPDATE","EXIT","ns","streams","operands","nsOperand","nsProperties","enter","exit","propset","rule","interactors",49,"parseProperties","parseMark","mark","delay","./properties",50,"./mark",51,"signalName","ADD","REMOVE","TOGGLE","CLEAR","../dataflow/tuple",52,53,"parseSignal","parseOperands","decl","arg","pred","parseComparator","parseLogical","parseIn","parseScale","scope","invert","=","==","!=",">",">=","<","<=","and","&&","or","||","in",54,"compile","vars","valueRef","DEPS","hasPath","encoder","tpl","encode","path","tension","rules","inputs","predName","colorRef","sgRef","fRef","sRef","fieldRef","scaleRef","band","mult","xx","color","yy","zz","nested","fr",55,"dep","./expr",56,"parsePadding","parseMarks","parseSignals","parsePredicates","parseInteractors","viewFactory","../core/Model","../core/View","../parse/data","../parse/interactors","../parse/marks","../parse/padding","../parse/predicates","../parse/signals",57,"changset","selector","START","MIDDLE","END","sig","register","orderedStream","trueFn","sp","mergedStream","sel","evt","filtered","preventDefault","mouse","./events",58,"tx","../transforms/index",59,"eventName","_active","_obj","that","events","addEventListener","touchmove","mousemove","getBoundingClientRect","clientX","clientY","pick","touchend","mouseout","DOMMouseScroll","gx","gy","marktype","picker","./marks",60,"scaleCanvas","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","initializeLineDash","vgLineDash","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","translatedBounds","Bounds","getBounds","setBounds","bbox","beginPath","rect","clip","_ctx","_imgload","selectAll","_ratio","element","bb2","save","clearRect","draw","renderAsync","_async_id","clearTimeout","loadImage","uri","image","Image","../../core/Bounds","../../util/config",61,"./Handler","./Renderer",62,"fontString","fontStyle","fontVariant","fontWeight","fontSize","font","arcPath","ir","innerRadius","outerRadius","startAngle","ea","endAngle","moveTo","arc","closePath","areaPath","pathCache","parsePath","area","renderPath","linePath","pathPath","symbolPath","rx","ry","shape","lineTo","tan30","sqrt3","lineStroke","lw","strokeWidth","lc","strokeCap","lineWidth","lineCap","ruleStroke","drawPathOne","opac","fill","stroke","opacity","globalAlpha","fillOpacity","fillStyle","strokeOpacity","strokeStyle","strokeDash","strokeDashOffset","drawPathAll","drawRect","fillRect","strokeRect","drawRule","drawImage","align","baseline","drawText","textAlign","textBaseline","radius","theta","fillText","strokeText","drawAll","pathFunc","drawOne","drawGroup","legends","axisItems","legendItems","gradient","grad","createLinearGradient","stops","addColorStop","pickGroup","subscene","hit","interactive","pickAll","hitTests","pickArea","pickLine","textHit","boundsCalc","tmpBounds","isPointInStroke","isPointInPath","symbol","../../util/bounds","./path",63,"currentPath","chunks","parsed","re","chunksParsed","jlen","command","commandLength","cmdLength","klen","drawArc","coords","rot","large","sweep","ex","ey","segs","arcToSegments","bez","segmentToBezier","bezierCurveTo","boundArc","rotateX","ox","oy","argsStr","arcToSegmentsCache","sin_th","cos_th","pl","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","th1","th_arc","segments","th2","th3","segmentToBezierCache","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","current","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","quadraticCurveTo",64,"SVGBuilder","./svg",65,66,"tag","close","escape_text","escape_font","group_bg","styl","class","clip_id","clipping","arc_path","area_path_h","area_path_v","line_path","symbol_path","xlink:href","text-anchor","cssClass","cls","xw","yh","styleProps","styles","_gid","_text","foot","svgNamespace","buildDefs","dgrad","dclip","stop-color","meta","MARKS","sty","nest","center",67,"svgHandler","__data__","_svg","dom","removeEventListener",68,"updateDefs","each","grd","cr","renderItems",69,"dup",70,"setProperty","removeProperty","area_path","setAttributeNS","removeAttribute","textContent","drawMark","evts","grps","childNodes","notG","mark_id",71,"Bounder","_mark","GROUP","../util/bounds",72,"inlineDs","sibling","_def","geom","_parent_id","_from","_ds","_isSuper","_bounder","newItem","Item","keyf","_map","joinDatasource","fullUpdate","keyFunction","joinValues","_items","parent_id","inheritFrom","_parent","_encoder","builder","fcs","./Bounder","./Encoder","./Item",73,"preds","enc","EMPTY",74,"_children","_scaler","_recursor","_scales","recurse","hasMarks","hasAxes","inline","buildMarks","buildAxes","MARK","parseAxes","buildGroup","inherit","axisDef","AXIS","Scale","acc","group_id","../dataflow/Collector","../parse/axes","./Builder","./Scale",75,"hasPropertySet","cousin","iidx","midx","touch",76,"_updated","instance","ORDINAL","ordinal","quantitative","rng","LINEAR","scaleName","dataDrivenRange","dataRef","RANGE","DOMAIN","points","rangePoints","rangeRoundBands","rangeBands","interval","QUANTILE","domainMinMax","rangeRound","exponent","POWER","clamp","nice","TIME","isUniques","getRefs","getFields","aggrType","refs","Aggregate","TUPLE","MULTI","VALUE","getCache","which","atype","uniques","ck","singleDomain","cache","GROUPBY","COUNT","stat","MIN","MAX","rlen","flen","accessors","order","DESC","domainMin","domainMax","LOG","zero","GROUP_PROPERTY","rangeMin","rangeMax","SIGNAL","../transforms/Aggregate",77,"updates","elapsed","calcBounds","skip","interp","timer",78,"axis_def","newScale","oldScale","rangeBand","vg_axisScaleRange","gridLines","vg_axisTicks","tickLabels","vg_axisTickLabels","vg_axisDomain","vg_axisTitle","gridColor","vg_axisTicksExtend","tickMajorSize","tickMinorSize","vg_axisLabelExtend","vg_axisDomainExtend","tickEndSize","vg_axisTitleExtend","gridLineStyle","majorTickStyle","minorTickStyle","tickLabelStyle","domainStyle","titleStyle","vg_axisUpdate","tickFormatString","tickArguments","injest","major","minor","vg_axisSubdivide","label","tdata","vg_axisOrients","subticks","vg_axisScaleExtent","rangeExtent","vg_axisBaseline","vg_axisAlign","tickColor","tickWidth","tickLabelColor","tickLabelFont","tickLabelFontSize","titleFont","titleFontSize","titleFontWeight","titleColor","axisColor","axisWidth","../parse/mark",79,"Transform","addParameters","_fieldsDef","_acc","_cache","cName","isFunc","fName","standardize","spoof_prev","Facetor","_reset","./Facetor","./Transform",80,"BatchTransform","batchTransform",81,"Bin","default","bin",82,"Cross","with","diagonal","_lastRem","_lastWith","_ids","wdata","diag","cross","upFields","selfCross","woutput",83,"Facet","../parse/transforms","./Aggregate",84,"disconnect_cell",85,"Filter","_skip","../parse/expr",86,"Fold","rst","get_tuple","dlen","fold",87,"Force","links","linkDistance","linkStrength","charge","chargeDistance","iterations","friction","gravity","alpha","_nodes","_links","_layout","layout","force","nodeInput","linkInput","iter","link","tick","nodeIds","linkIds",88,"Formula",89,"Geo","Parameters","lon","lat","projection","clipAngle","clipExtent","d3Projection","proj","param","_mode","_projection","geo","ll","xy",90,"GeoPath","geojson","./Geo",91,"LinkPath","sx","sy","ty","curve","ix","iy","diagonalX","diagonalY","shapes",92,"Parameter","_accessors","_resolution","arrayType","dataType","fieldType","exprType","_get","isData","isField","sources","isExpr",93,"Pie","ones","./BatchTransform",94,"Sort","by",95,"Stack","sortby","partition","groups",96,"params","_parameters","./Parameter",97,"Treemap","sticky","mode","treemap",98,"Zip","withKey","_lastJoin","mp","wds","dflt","prevm","wlen",99,"aggregate","linkpath","formula","geopath","pie","zip","./Bin","./Cross","./Facet","./Filter","./Fold","./Force","./Formula","./GeoPath","./LinkPath","./Pie","./Sort","./Stack","./Treemap","./Zip",100,"gfx","pathBounds","boundPath","halfpi","xmin","xmax","ymin","ymax","angles","noRotate","measureText","includeLegends","itemBounds","methods","bounds_prev","pb","markBounds","../core/Bounds","../render/canvas/path","./config",101,"utc","legend","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20",102,"ID","sentinel","SINGLETON","SORT","ASC",103,"console"],"mappings":"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","file":"vega2.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vg = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n  core: {\n    View: require('./src/core/View')\n  },\n  dataflow: {\n    changeset: require('./src/dataflow/changeset'),\n    Datasource: require('./src/dataflow/Datasource'),\n    Graph: require('./src/dataflow/Graph'),\n    Node: require('./src/dataflow/Node')\n  },\n  parse: {\n    spec: require('./src/parse/spec')\n  },\n  scene: {\n    Builder: require('./src/scene/Builder'),\n    GroupBuilder: require('./src/scene/GroupBuilder')\n  },\n  transforms: require('./src/transforms/index'),\n  config: require('./src/util/config'),\n  util: require('datalib')\n};\n},{\"./src/core/View\":31,\"./src/dataflow/Datasource\":33,\"./src/dataflow/Graph\":34,\"./src/dataflow/Node\":35,\"./src/dataflow/changeset\":37,\"./src/parse/spec\":56,\"./src/scene/Builder\":72,\"./src/scene/GroupBuilder\":74,\"./src/transforms/index\":99,\"./src/util/config\":101,\"datalib\":20}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\nvar util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x));\n};\n\nproto._newcell = function(x) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      if (cell.collect) {\n        cell.data.values();\n      }\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n},{\"../util\":25,\"./collector\":5,\"./measures\":7}],5:[function(require,module,exports){\nvar util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else if (!util.isObject(r[0])) {\n    // process collection of raw values\n    var m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(f) {\n  return this.extent(f)[0];\n};\n\nproto.argmax = function(f) {\n  return this.extent(f)[1];\n};\n\nproto.min = function(f) {\n  var m = this.extent(f)[0];\n  return m ? f(m) : +Infinity;\n};\nproto.max = function(f) {\n  var m = this.extent(f)[1];\n  return m ? f(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(f) {\n  return this.quartile(f)[0];\n};\n\nproto.q2 = function(f) {\n  return this.quartile(f)[1];\n};\n\nproto.q3 = function(f) {\n  return this.quartile(f)[2];\n};\n\nmodule.exports = Collector;\n},{\"../stats\":22,\"../util\":25}],6:[function(require,module,exports){\nvar util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n},{\"../util\":25,\"./aggregator\":4}],7:[function(require,module,exports){\nvar util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;\n},{\"../stats\":22,\"../util\":25}],8:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":24,\"../util\":25}],9:[function(require,module,exports){\nvar stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n},{\"../generate\":10,\"../import/type\":19,\"../stats\":22,\"../util\":25,\"./bins\":8}],10:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],11:[function(require,module,exports){\n(function (global){\nvar util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util\":25}],12:[function(require,module,exports){\nvar dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n},{\"./dsv\":11,\"./json\":13,\"./topojson\":14,\"./treejson\":15}],13:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":25}],14:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":13}],15:[function(require,module,exports){\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n},{\"./json\":13}],16:[function(require,module,exports){\nvar util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n\n},{\"../util\":25,\"fs\":2,\"request\":2,\"sync-request\":2,\"url\":2}],17:[function(require,module,exports){\nvar util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n},{\"../util\":25,\"./formats\":12,\"./type\":19}],18:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":25,\"./load\":16,\"./read\":17}],19:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":25}],20:[function(require,module,exports){\nvar util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;\n},{\"./aggregate/groupby\":6,\"./bins/bins\":8,\"./bins/histogram\":9,\"./generate\":10,\"./import/load\":16,\"./import/read\":17,\"./import/readers\":18,\"./import/type\":19,\"./print\":21,\"./stats\":22,\"./template\":23,\"./time-units\":24,\"./util\":25}],21:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n},{\"./import/type\":19,\"./stats\":22,\"./template\":23,\"./util\":25}],22:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":10,\"./import/type\":19,\"./util\":25}],23:[function(require,module,exports){\n(function (global){\nvar util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\ntemplate.source = source;\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./util\":25}],24:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],25:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":24,\"_process\":3,\"buffer\":2}],26:[function(require,module,exports){\nmodule.exports = require('./lib/heap');\n\n},{\"./lib/heap\":27}],27:[function(require,module,exports){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n\n},{}],28:[function(require,module,exports){\nvar bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;\n},{}],29:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../render/canvas/index\":61,\"../render/svg-headless/index\":65,\"../util/debug\":103,\"./View\":31,\"datalib\":20}],30:[function(require,module,exports){\nvar Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n},{\"../dataflow/Graph\":34,\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../scene/GroupBuilder\":74,\"datalib\":20}],31:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../parse/streams\":57,\"../render/canvas/index\":61,\"../render/svg/index\":69,\"../scene/Encoder\":73,\"../scene/Transition\":77,\"../util/config\":101,\"../util/debug\":103,\"./HeadlessView\":29,\"datalib\":20}],32:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Node\":35,\"./changeset\":37}],33:[function(require,module,exports){\nvar dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Collector\":32,\"./Node\":35,\"./changeset\":37,\"./tuple\":38,\"datalib\":20}],34:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;\n},{\"../util/constants\":102,\"../util/debug\":103,\"./Datasource\":33,\"./Signal\":36,\"./changeset\":37,\"datalib\":20,\"heap\":26}],35:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;\n},{\"../util/constants\":102,\"datalib\":20}],36:[function(require,module,exports){\nvar Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;\n},{\"./Node\":35,\"./changeset\":37}],37:[function(require,module,exports){\nvar C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};\n},{\"../util/constants\":102}],38:[function(require,module,exports){\nvar dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction has_prev(t) {\n  return t._prev && t._prev !== C.SENTINEL;\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  set_prev: set_prev,\n  has_prev: has_prev,\n  reset:  reset,\n  idMap:  idMap\n};\n},{\"../util/constants\":102,\"datalib\":20}],39:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};\n},{\"./constants\":40,\"./functions\":41,\"datalib\":20}],40:[function(require,module,exports){\nmodule.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};\n},{}],41:[function(require,module,exports){\nvar datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};\n},{\"datalib\":20}],42:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n\n},{\"./codegen\":39,\"./parser\":43}],43:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],44:[function(require,module,exports){\nvar dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;\n},{\"../scene/axis\":78,\"../util/config\":101,\"datalib\":20}],45:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n\n},{\"../util/config\":101,\"./modify\":51,\"./transforms\":58,\"datalib\":20}],46:[function(require,module,exports){\n/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};\n},{}],47:[function(require,module,exports){\nvar dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;\n},{\"../expression\":42,\"datalib\":20}],48:[function(require,module,exports){\nvar dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}\n},{\"../util/config\":101,\"../util/constants\":102,\"datalib\":20}],49:[function(require,module,exports){\nvar dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};\n},{\"./properties\":54,\"datalib\":20}],50:[function(require,module,exports){\nvar parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};\n},{\"./mark\":49}],51:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}\n},{\"../dataflow/Node\":35,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],52:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}\n},{\"datalib\":20}],53:[function(require,module,exports){\nvar dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n},{\"datalib\":20}],54:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../util/config\":101,\"datalib\":20}],55:[function(require,module,exports){\nvar expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};\n},{\"../util/constants\":102,\"./expr\":47}],56:[function(require,module,exports){\nvar dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n\n},{\"../core/Model\":30,\"../core/View\":31,\"../parse/data\":45,\"../parse/interactors\":48,\"../parse/marks\":50,\"../parse/padding\":52,\"../parse/predicates\":53,\"../parse/signals\":55,\"datalib\":20}],57:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../util/constants\":102,\"./events\":46,\"./expr\":47,\"datalib\":20}],58:[function(require,module,exports){\nvar dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  \n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};\n},{\"../transforms/index\":99,\"datalib\":20}],59:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":62,\"datalib\":20}],60:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28,\"../../util/config\":101,\"./marks\":62,\"datalib\":20}],61:[function(require,module,exports){\nmodule.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};\n},{\"./Handler\":59,\"./Renderer\":60}],62:[function(require,module,exports){\nvar Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};\n},{\"../../core/Bounds\":28,\"../../util/bounds\":100,\"../../util/config\":101,\"./path\":63}],63:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../core/Bounds\":28}],64:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"./svg\":66,\"datalib\":20}],65:[function(require,module,exports){\nmodule.exports = {\n  Renderer: require('./Renderer')\n};\n\n},{\"./Renderer\":64}],66:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"datalib\":20}],67:[function(require,module,exports){\nvar dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;\n},{\"datalib\":20}],68:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./marks\":70,\"datalib\":20}],69:[function(require,module,exports){\narguments[4][61][0].apply(exports,arguments)\n},{\"./Handler\":67,\"./Renderer\":68,\"dup\":61}],70:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../../util/config\":101,\"datalib\":20}],71:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":100,\"../util/constants\":102,\"../util/debug\":103}],72:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../parse/data\":45,\"../util/constants\":102,\"../util/debug\":103,\"./Bounder\":71,\"./Encoder\":73,\"./Item\":75,\"datalib\":20}],73:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n},{\"../dataflow/Node\":35,\"../util/bounds\":100,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],74:[function(require,module,exports){\nvar dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n},{\"../dataflow/Collector\":32,\"../dataflow/Node\":35,\"../parse/axes\":44,\"../util/constants\":102,\"../util/debug\":103,\"./Builder\":72,\"./Scale\":76,\"datalib\":20}],75:[function(require,module,exports){\nfunction Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;\n},{}],76:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction isUniques(scale) { \n  return scale.type === C.ORDINAL || scale.type === C.QUANTILE; \n}\n\nfunction getRefs(def) { \n  return def.fields || dl.array(def);\n}\n\nfunction getFields(ref, group) {\n  return dl.array(ref.field).map(function(f) {\n    if (f.parent) return dl.accessor(f.parent)(group.datum)\n    return f; // String or {\"signal\"}\n  });\n}\n\n// Scale datarefs can be computed over multiple schema types. \n// This function determines the type of aggregator created, and\n// what data is sent to it: values, tuples, or multi-tuples that must\n// be standardized into a consistent schema. \nfunction aggrType(def, scale) {\n  var refs = getRefs(def);\n\n  // If we're operating over only a single domain, send full tuples\n  // through for efficiency (fewer accessor creations/calls)\n  if(refs.length == 1 && dl.array(refs[0].field).length == 1) {\n    return Aggregate.TYPES.TUPLE;\n  }\n\n  // With quantitative scales, we only care about min/max.\n  if(!isUniques(scale)) return Aggregate.TYPES.VALUE;\n\n  // If we don't sort, then we can send values directly to aggrs as well\n  if(!def.sort) return Aggregate.TYPES.VALUE;\n\n  return Aggregate.TYPES.MULTI;\n}\n\nfunction getCache(which, def, scale, group) {\n  var refs = getRefs(def),\n      atype = aggrType(def, scale),\n      uniques = isUniques(scale),\n      sort = def.sort,\n      ck = \"_\"+which,\n      fields = getFields(refs[0], group),\n      singleDomain = refs.length == 1 && fields.length == 1,\n      i, rlen, j, flen, ref, field;\n\n  if(scale[ck]) return scale[ck];\n\n  var cache = scale[ck] = new Aggregate(this._graph).type(atype),\n      groupby, summarize;\n\n  if(uniques) {\n    if(atype === Aggregate.TYPES.VALUE) {\n      groupby = [{ name: C.GROUPBY, get: dl.identity }];\n      summarize = {\"*\": C.COUNT};\n    } else if(atype === Aggregate.TYPES.TUPLE) {\n      groupby = [{ name: C.GROUPBY, get: dl.$(fields[0]) }];\n      summarize = sort ? [{\n        name: C.VALUE,\n        get:  dl.$(ref.sort || sort.field),\n        ops: [sort.stat]\n      }] : {\"*\": C.COUNT};\n    } else {  // atype === Aggregate.TYPES.MULTI\n      groupby   = C.GROUPBY;\n      summarize = [{ name: C.VALUE, ops: [sort.stat] }]; \n    }\n  } else {\n    groupby = [];\n    summarize = [{\n      name: C.VALUE,\n      get:  singleDomain ? dl.$(fields[0]) : dl.identity,\n      ops: [C.MIN, C.MAX],\n      as:  [C.MIN, C.MAX]\n    }];\n  }\n\n  cache.groupby.set(cache, groupby)\n    .summarize.set(cache, summarize);\n\n  return cache;\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = getRefs(def),\n      atype = aggrType(def, scale),\n      cache = getCache.apply(this, arguments),\n      sort  = def.sort,\n      uniques = isUniques(scale),\n      i, rlen, j, flen, ref, fields, field;\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    ref = refs[i];\n    from = ref.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = getFields(ref, group);\n    for(j=0, flen=fields.length; j<flen; ++j) {\n      field = fields[j];\n\n      if(atype === Aggregate.TYPES.VALUE) {\n        cache.accessors(null, field);\n      } else if(atype === Aggregate.TYPES.MULTI) {\n        cache.accessors(field, ref.sort || sort.field);\n      } // Else (Tuple-case) is handled by the aggregator accessors by default\n\n      cache.evaluate(data);\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.aggr().result();\n  if (uniques) {\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + C.VALUE;\n      sort = dl.comparator(sort);\n      data = data.sort(sort);\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return data.map(function(d) { return d[C.GROUPBY]; });\n  } else {\n    data = data[0];\n    return !dl.isValid(data) ? [] : [data[C.MIN], data[C.MAX]];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/Node\":35,\"../dataflow/changeset\":37,\"../transforms/Aggregate\":79,\"../util/config\":101,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],77:[function(require,module,exports){\nvar tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;\n},{\"../dataflow/tuple\":38,\"../util/bounds\":100,\"../util/constants\":102}],78:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"../parse/mark\":49,\"../util/config\":101,\"datalib\":20}],79:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"}\n  });\n\n  this._fieldsDef = [];\n  this._aggr = null;  // dl.Aggregator\n\n  this._type = TYPES.TUPLE; \n  this._acc = {groupby: dl.true, value: dl.true}\n  this._cache = {};     // And cache them as aggregators expect original tuples.\n\n  // Aggregator needs a full instantiation of the previous tuple. \n  // Cache them to reduce creation costs\n  this._prev = {}; \n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new Transform());\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1, \n  TUPLE: 2, \n  MULTI: 3\n};\n\nproto.summarize = {\n  set: function(transform, summarize) {\n    var i, len, f, fields, name, ops, signals = {};\n    if(!dl.isArray(fields = summarize)) { // Object syntax from dl\n      fields = [];\n      for (name in summarize) {\n        ops = dl.array(summarize[name]);\n        fields.push({name: name, ops: ops});\n      }\n    }\n\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._aggr = null;\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.type = function(type) { \n  return (this._type = type, this); \n};\n\n// Minimize accessor creations by checking names\nfunction accessor(curr, field) {\n  var cName  = dl.name(curr),\n      isFunc = dl.isFunction(field),\n      fName  = isFunc ? dl.name(field) : field;\n\n  return (cName == fName) ? curr :\n    isFunc ? field : dl.$(field);\n}\n\nproto.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = groupby ? accessor(acc.groupby, groupby) : dl.true;\n  acc.value = value ? accessor(acc.value, value) : dl.true;\n};\n\nfunction standardize(x) {\n  var acc = this._acc;\n  if(this._type === TYPES.TUPLE) {\n    return x;\n  } else if(this._type === TYPES.VALUE) {\n    return acc.value(x);\n  } else {\n    return this._cache[x._id] || (this._cache[x._id] = {\n      _id: x._id,\n      groupby: acc.groupby(x),\n      value: acc.value(x)\n    });\n  }\n}\n\nproto.aggr = function() {\n  if(this._aggr) return this._aggr;\n\n  var graph = this._graph,\n      groupby = this.groupby.get(graph).fields;\n\n  var fields = this._fieldsDef.map(function(field) {\n    var f  = dl.duplicate(field);\n    if(field.get) f.get = field.get;\n\n    f.name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    f.ops  = f.ops.signal ? graph.signalRef(f.ops.signal) : dl.array(f.ops).map(function(o) {\n      return o.signal ? graph.signalRef(o.signal) : o;\n    });\n\n    return f;\n  });\n\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  if(this._type !== TYPES.VALUE) aggr.key(\"_id\");\n  return aggr;\n};\n\nproto._reset = function(input, output) {\n  output.rem.push.apply(output.rem, this.aggr().result());\n  this.aggr().clear();\n  this._aggr = null;\n};\n\nfunction spoof_prev(x) {\n  var prev = this._prev[x._id] || (this._prev[x._id] = Object.create(x));\n  return dl.extend(prev, x._prev);\n}\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  var output = changeset.create(input);\n  if(reset) this._reset(input, output);\n\n  var t = this,\n      tpl  = this._type === TYPES.TUPLE, // reduce calls to standardize\n      aggr = this.aggr();\n\n  input.add.forEach(function(x) {\n    aggr._add(tpl ? x : standardize.call(t, x));\n  });\n\n  input.mod.forEach(function(x) {\n    if(reset) {\n      aggr._add(tpl ? x : standardize.call(t, x));  // Signal change triggered reflow\n    } else if(tuple.has_prev(x)) {\n      var prev = spoof_prev.call(t, x);\n      aggr._mod(tpl ? x : standardize.call(t, x), \n        tpl ? prev : standardize.call(t, prev));\n    }\n  });\n\n  input.rem.forEach(function(x) {\n    var y = tuple.has_prev(x) ? spoof_prev.call(t, x) : x;\n    aggr._rem(tpl ? y : standardize.call(t, y));\n  });\n\n  return aggr.changes(input, output);\n}\n\nmodule.exports = Aggregate;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"./Facetor\":84,\"./Transform\":96,\"datalib\":20}],80:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n\n},{\"../dataflow/Collector\":32,\"./Transform\":96}],81:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],82:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;\n},{\"../dataflow/Collector\":32,\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":103,\"./Transform\":96}],83:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar proto = (Facet.prototype = Object.create(Aggregate.prototype));\n\nproto.pipeline = {\n  set: function(facet, pipeline) {\n    facet._pipeline = pipeline;\n    return facet;\n  },\n  get: function(model, facet) {\n    var parse = require('../parse/transforms');\n    return facet._pipeline.map(function(t) { return parse(model, t) });\n  }\n};\n\nproto.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nmodule.exports = Facet;\n},{\"../parse/transforms\":58,\"./Aggregate\":79,\"./Transform\":96}],84:[function(require,module,exports){\nvar dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facetor() {\n  Aggregator.constructor.call(this);\n  this._facet = null;\n}\n\nvar Aggregator = dl.groupby();\nvar proto = (Facetor.prototype = Object.create(Aggregator));\n\nproto.facet = function(f) {\n  if(!arguments.length) return this._facet;\n  return (this._facet = f, this);\n};\n\nproto._ingest = function(t) { \n  return tuple.ingest(t, null) \n};\n\nproto._assign = tuple.set;\n\nfunction disconnect_cell(facet) {\n  debug({}, [\"deleting cell\", this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nproto._newcell = function(x) {\n  var cell  = Aggregator._newcell.call(this, x),\n      facet = this._facet,\n      tuple = cell.tuple,\n      graph, pipeline;\n\n  if(this._facet !== null) {\n    graph = facet._graph;\n    pipeline = facet.pipeline.get(graph, facet);\n    cell.ds  = graph.data(\"vg_\"+tuple._id, pipeline, tuple);\n    cell.delete = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var t = Aggregator._newtuple.call(this, x);\n  if(this._facet !== null) {\n    tuple.set(t, \"key\", this._cellkey(x));\n  }\n  return t;\n};\n\nproto.clear = function() {\n  if(this._facet !== null) for (var k in this._cells) {\n    this._cells[k].delete(this._facet);\n  }\n  return Aggregator.clear.call(this);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  Aggregator._add.call(this, x);\n  if(this._facet !== null) cell.ds._input.add.push(x);\n};\n\nproto._mod = function(x, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(x);\n\n  Aggregator._mod.call(this, x, prev);\n  if(this._facet !== null) {  // Propagate tuples\n    if(cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  Aggregator._rem.call(this, x);\n  if(this._facet !== null) cell.ds._input.rem.push(x);  \n};\n\nproto.changes = function(input, output) {\n  var aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === C.MOD_CELL) {\n        output.rem.push(cell.tuple);\n      }\n      if(this._facet !== null) cell.delete(this._facet);\n      delete this._cells[k];\n    } else {\n      if(this._facet !== null) {\n        // propagate sort, signals, fields, etc.\n        changeset.copy(input, cell.ds._input);\n      }\n\n      if (flag & C.ADD_CELL) {\n        output.add.push(cell.tuple);\n      } else if (flag & C.MOD_CELL) {\n        output.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return output;\n};\n\nmodule.exports = Facetor;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/constants\":102,\"../util/debug\":103,\"datalib\":20}],85:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n},{\"../dataflow/changeset\":37,\"../parse/expr\":47,\"../util/constants\":102,\"../util/debug\":103,\"./Transform\":96}],86:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;\n},{\"../dataflow/changeset\":37,\"../dataflow/tuple\":38,\"../util/debug\":103,\"./Transform\":96}],87:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],88:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n},{\"../dataflow/tuple\":38,\"../parse/expr\":47,\"../util/constants\":102,\"../util/debug\":103,\"./Transform\":96}],89:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Transform\":96,\"datalib\":20}],90:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./Geo\":89,\"./Transform\":96,\"datalib\":20}],91:[function(require,module,exports){\nvar Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n},{\"../dataflow/tuple\":38,\"./Transform\":96}],92:[function(require,module,exports){\nvar dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":47,\"../util/constants\":102,\"datalib\":20}],93:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],94:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;\n},{\"../parse/expr\":47,\"../util/debug\":103,\"./Transform\":96,\"datalib\":20}],95:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],96:[function(require,module,exports){\nvar Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"../dataflow/Node\":35,\"../util/constants\":102,\"./Parameter\":92}],97:[function(require,module,exports){\n(function (global){\nvar dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../dataflow/tuple\":38,\"./BatchTransform\":80,\"./Transform\":96,\"datalib\":20}],98:[function(require,module,exports){\nvar dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;\n},{\"../dataflow/Collector\":32,\"../util/debug\":103,\"./Transform\":96,\"datalib\":20}],99:[function(require,module,exports){\nmodule.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  zip:        require('./Zip')\n};\n},{\"./Aggregate\":79,\"./Bin\":81,\"./Cross\":82,\"./Facet\":83,\"./Filter\":85,\"./Fold\":86,\"./Force\":87,\"./Formula\":88,\"./Geo\":89,\"./GeoPath\":90,\"./LinkPath\":91,\"./Pie\":93,\"./Sort\":94,\"./Stack\":95,\"./Treemap\":97,\"./Zip\":98}],100:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../core/Bounds\":28,\"../render/canvas/path\":63,\"./config\":101}],101:[function(require,module,exports){\n(function (global){\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],102:[function(require,module,exports){\nmodule.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  ID: \"_id\",\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  GROUPBY: \"groupby\",\n  MIN: \"min\",\n  MAX: \"max\",\n  VALUE: \"value\",\n\n  SORT: \"sort\",\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n},{}],103:[function(require,module,exports){\nvar config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};\n},{\"./config\":101}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x));\n};\n\nproto._newcell = function(x) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      if (cell.collect) {\n        cell.data.values();\n      }\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      result.push(cell.tuple);\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function() {\n  var changes = {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === Flags.MOD_CELL) {\n        changes.rem.push(cell.tuple);\n      }\n      delete this._cells[k];\n    } else if (flag & Flags.ADD_CELL) {\n      changes.add.push(cell.tuple);\n    } else if (flag & Flags.MOD_CELL) {\n      changes.mod.push(cell.tuple);\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '$!_rem_!#';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n;\n\n  if (k) {\n    // has unique key field, use that\n    var lut = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!lut.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else if (!util.isObject(r[0])) {\n    // process collection of raw values\n    var m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  this._f = null;\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._f !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._f = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(f) {\n  return this.extent(f)[0];\n};\n\nproto.argmax = function(f) {\n  return this.extent(f)[1];\n};\n\nproto.min = function(f) {\n  var m = this.extent(f)[0];\n  return m ? f(m) : +Infinity;\n};\nproto.max = function(f) {\n  var m = this.extent(f)[1];\n  return m ? f(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._f !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._f = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(f) {\n  return this.quartile(f)[0];\n};\n\nproto.q2 = function(f) {\n  return this.quartile(f)[1];\n};\n\nproto.q3 = function(f) {\n  return this.quartile(f)[2];\n};\n\nmodule.exports = Collector;","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= d / this.valid;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.dev / (this.valid-1)',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.dev / this.valid',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'Math.sqrt(this.dev / (this.valid-1))',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'Math.sqrt(this.dev / this.valid)',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; this.valid++;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; this.valid--;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.mod = mod;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  return ctr;\n}\n\nfunction mod(v_new, v_old) {\n  if (v_old === undefined || v_old === v_new) return;\n  this.rem(v_old);\n  this.add(v_new);\n}\n\ntypes.create = create;\nmodule.exports = types;","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var stats = require('../stats');\nvar type = require('../import/type');\nvar util = require('../util');\nvar gen = require('../generate');\nvar bins = require('./bins');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../../util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\nvar topojson = (typeof window !== \"undefined\" ? window.topojson : typeof global !== \"undefined\" ? global.topojson : null);\n\nmodule.exports = function(data, format) {\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: '+format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  return [];\n};\n","var json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!util.startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (util.isNode && util.startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (util.isNode) {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    } else {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + url);\n  } else if (!util.isNode) {\n    // in browser, use xhr\n    return xhr(url, callback);\n  } else if (util.startsWith(url, fileProtocol)) {\n    // in node.js, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // if node.js, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs in node.js\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  require('fs').readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  require('request')(url, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      callback(error, null);\n    }\n  });\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nmodule.exports = load;\n","var util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) callback(error, null);\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n        } catch (e) {\n          callback(e, null);\n        }\n        callback(null, data);\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (data) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\n\nvar dl = {\n  load:      require('./import/load'),\n  read:      require('./import/read'),\n  type:      require('./import/type'),\n  bins:      require('./bins/bins'),\n  $bin:      require('./bins/histogram').$bin,\n  groupby:   require('./aggregate/groupby'),\n  histogram: require('./bins/histogram').histogram,\n  print:     require('./print'),\n  template:  require('./template'),\n  timeunits: require('./time-units')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;","var util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + POS[types[name]] || 'right') +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var util = require('./util');\nvar d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null);\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  try {\n    /* jshint evil: true */\n    return (new Function('d', src)).bind(context);\n  } catch (e) {\n    e.source = src;\n    throw e;\n  }\n}\n\ntemplate.source = source;\nmodule.exports = template;\n\n// clear cache of format objects\n// can *break* prior template functions, so invoke with care\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\nfunction source(text, variable) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable) {\n  var filters = text.split('|');\n  var prop = filters.shift().trim();\n  var stringCast = true;\n  \n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n  \n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n  \n  var src = util.field(prop).map(util.str).join('][');\n  src = variable + '[' + src + ']';\n  \n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1).split(',')\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        a = template_format(args[0], d3.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+src+')';\n        break;\n      case 'time':\n        a = template_format(args[0], d3.time.format);\n        stringCast = false;\n        src = 'this.formats['+a+']('+date()+')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  if (!context.format_map[pattern]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[pattern] = i;\n  }\n  return context.format_map[pattern];\n}\n","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","var bounds = function(b) {\n  this.clear();\n  if (b) this.union(b);\n};\n\nvar prototype = bounds.prototype;\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n}\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = bounds;","var dl = require('datalib'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg-headless/index'),\n    View = require('./View'),\n    debug = require('../util/debug');\n\nvar HeadlessView = function(width, height, model) {\n  View.call(null, width, height, model);\n  this._el = \"body\";\n  this._type = \"canvas\";\n  this._renderers = {canvas: canvas, svg: svg};\n  this._canvas = null;\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n  \n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view._canvas);\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  (r.pendingImages() > 0) ? wait() : callback(this._canvas);\n};\n\nprototype.svg = function() {\n  return (this._type === \"svg\")\n    ? this._renderer.svg()\n    : null;\n};\n\nprototype.initialize = function() {    \n  var w = this._width,\n      h = this._height,\n      pad = this._padding;\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = this._renderer || new this._io.Renderer();\n  \n  if (this._type === \"svg\") {\n    this.initSVG(w, h, pad);\n  } else {\n    this.initCanvas(w, h, pad);\n  }\n  \n  return this;\n};\n\nprototype.initCanvas = function(w, h, pad) {\n  var Canvas = (typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null),\n      tw = w + pad.left + pad.right,\n      th = h + pad.top + pad.bottom,\n      canvas = this._canvas = dl.isNode ? new Canvas(tw, th) : document.createElement('canvas'),\n      ctx = canvas.getContext(\"2d\");\n\n  if(!dl.isNode) {  // Manually set width/height on DOM elements\n    canvas.setAttribute(\"width\", tw);\n    canvas.setAttribute(\"height\", th);\n  }\n  \n  // setup canvas context\n  ctx.setTransform(1, 0, 0, 1, pad.left, pad.top);\n\n  // configure renderer\n  this._renderer.context(ctx);\n  this._renderer.resize(w, h, pad);\n};\n\nprototype.initSVG = function(w, h, pad) {\n  // configure renderer\n  this._renderer.initialize(this._el, w, h, pad);\n};\n\nmodule.exports = HeadlessView;\n","var Graph = require('../dataflow/Graph'), \n    Node  = require('../dataflow/Node'),\n    GroupBuilder = require('../scene/GroupBuilder'),\n    changeset = require('../dataflow/changeset'), \n    dl = require('datalib');\n\nfunction Model() {\n  this._defs = {};\n  this._predicates = {};\n  this._scene = null;\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder\n\n  Graph.prototype.init.call(this);\n};\n\nvar proto = (Model.prototype = new Graph());\n\nproto.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nproto.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nproto.data = function() {\n  var data = Graph.prototype.data.apply(this, arguments);\n  if(arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, predicates = {};\n  if(!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { predicates[n] = m._predicates[n] });\n  return predicates;\n}\n\nproto.predicate = function(name, predicate) {\n  if(arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nproto.predicates = function() { return this._predicates; };\n\nproto.scene = function(renderer) {\n  if(!arguments.length) return this._scene;\n  if(this._builder) this.node().removeListener(this._builder.disconnect());\n  this._builder = new GroupBuilder(this, this._defs.marks, this._scene={});\n  this.node().addListener(this._builder.connect());\n  var p = this._builder.pipeline();\n  p[p.length-1].addListener(renderer);\n  return this;\n};\n\nproto.addListener = function(l) { this.node().addListener(l); };\nproto.removeListener = function(l) { this.node().removeListener(l); };\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    parseStreams = require('../parse/streams'),\n    canvas = require('../render/canvas/index'),\n    svg = require('../render/svg/index'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition'),\n    config = require('../util/config'),\n    debug = require('../util/debug'),\n    changeset = require('../dataflow/changeset');\n\nvar View = function(el, width, height, model) {\n  this._el    = null;\n  this._model = null;\n  this._width = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._changeset = null;\n  this._renderers = {canvas: canvas, svg: svg};\n  this._io  = canvas;\n  this._api = {}; // Stash streaming data API sandboxes.\n};\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new Node(model);\n    this._changeset = changeset.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src),\n      listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      cs  = this._changeset,\n      api = {};\n\n  if(dl.keys(cs.signals).length > 0) {\n    throw \"New signal values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating data values.\"\n  }\n\n  // If we have it stashed, don't create a new closure. \n  if(this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    cs.data[ds.name()] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values() };    \n\n  return (this._api[src] = api);\n};\n\nprototype.data = function(data) {\n  var v = this;\n  if(!arguments.length) return v._model.dataValues();\n  else if(dl.isString(data)) return streaming.call(v, data);\n  else if(dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nprototype.signal = function(name, value) {\n  var m  = this._model,\n      cs = this._changeset,\n      streamer = this._streamer,\n      setter = name; \n\n  if(!arguments.length) return m.signalValues();\n  else if(arguments.length == 1 && dl.isString(name)) return m.signalValues(name);\n\n  if(dl.keys(cs.data).length > 0) {\n    throw \"New data values are not reflected in the visualization.\" +\n      \" Please call view.update() before updating signal values.\"\n  }\n\n  if(arguments.length == 2) {\n    setter = {};\n    setter[name] = value;\n  }\n\n  dl.keys(setter).forEach(function(k) {\n    streamer.addListener(m.signal(k).value(setter[k]));\n    cs.signals[k] = 1;\n    cs.reflow = true;\n  });\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === \"strict\");\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._el) {\n      this._renderer.resize(this._width, this._height, pad);\n      if(this._handler) this._handler.padding(pad);\n    }\n  }\n  return this;\n};\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var pad = this._padding,\n      b = this.model().scene().bounds,\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0,\n      b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n    this._model.width(this._width);\n    this._model.height(this._height);\n    this.initialize();\n    this.update();\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error(\"Unknown renderer: \" + type);\n  else if (!type) throw new Error(\"No renderer specified\");\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding;\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if(!el) return this;  // This View cannot init w/o an\n  }\n  \n  // clear pre-existing container\n  d3.select(el).select(\"div.vega\").remove();\n  \n  // add div container\n  this._el = el = d3.select(el)\n    .append(\"div\")\n    .attr(\"class\", \"vega\")\n    .style(\"position\", \"relative\")\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style(\"width\",  (v._viewport[0] || w)+\"px\")\n      .style(\"height\", (v._viewport[1] || h)+\"px\")\n      .style(\"overflow\", \"auto\");\n  }\n\n  // renderer\n  v._renderer = (v._renderer || new this._io.Renderer())\n    .initialize(el, w, h, pad);\n  \n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v)\n    .model(v._model);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    parseStreams(this);\n  }\n  \n  return this;\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    debug(input, [\"rendering\"]);\n\n    var s = v._model.scene();\n    if(input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else {\n      v._renderer.render(s);\n    }\n\n    // For all updated datasources, finalize their changesets.\n    var d, ds;\n    for(d in input.data) {\n      ds = v._model.data(d);\n      if(!ds.revises()) continue;\n      changeset.finalize(ds.last());\n    }\n\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);  \n}\n\nprototype.update = function(opt) {    \n  opt = opt || {};\n  var v = this,\n      trans = opt.duration\n        ? new Transition(opt.duration, opt.ease)\n        : null;\n\n  var cs = v._changeset;\n  if(trans) cs.trans = trans;\n  if(opt.props !== undefined) {\n    if(dl.keys(cs.data).length > 0) {\n      throw \"New data values are not reflected in the visualization.\" +\n        \" Please call view.update() before updating a specified property set.\"\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, reevaluate the entire model (datasources + scene).\n  if(opt.items) { \n    Encoder.update(this._model, opt.trans, opt.props, opt.items);\n    v._renderNode.evaluate(cs);\n  } else if(v._streamer.listeners().length) {\n    v._model.propagate(cs, v._streamer);\n    v._streamer.disconnect();\n  } else {\n    v._model.fire(cs);\n  }\n\n  v._changeset = changeset.create();\n\n  return v.autopad(opt);\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  this._model.signal(name).on(handler);\n  return this;\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  this._model.signal(name).off(handler);\n  return this;\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || \"canvas\")\n      .width(defs.width)\n      .height(defs.height)\n      .padding(defs.padding);\n\n    if(opt.el || (!opt.el && v instanceof HeadlessView)) v.initialize(opt.el);\n    if(opt.data) v.data(opt.data);\n  \n    return v;\n  };    \n};\n\nmodule.exports = View;\n","var Node = require('./Node'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Collector(graph) {\n  Node.prototype.init.call(this, graph);\n  this._data = [];\n  return this.router(true)\n    .collector(true);\n}\n\nvar proto = (Collector.prototype = new Node());\n\nproto.data = function() { return this._data; }\n\nproto.evaluate = function(input) {\n  debug(input, [\"collecting\"]);\n\n  if (input.reflow) {\n    input = changeset.create(input);\n    input.mod = this._data.slice();\n    return input;\n  }\n\n  if (input.rem.length) {\n    var ids = input.rem.reduce(function(m,x) { return (m[x._id]=1, m); }, {});\n    this._data = this._data.filter(function(x) { return ids[x._id] !== 1; });\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var dl = require('datalib'),\n    changeset = require('./changeset'), \n    tuple = require('./tuple'), \n    Node = require('./Node'),\n    Collector = require('./Collector'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Datasource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet = facet;\n  this._input = changeset.create();\n  this._output = null;    // Output changeset\n\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline\n  this._revises = false; // Does any pipeline operator need to track prev?\n};\n\nvar proto = Datasource.prototype;\n\nproto.name = function(name) {\n  if(!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nproto.source = function(src) {\n  if(!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nproto.insert = function(d) {\n  var prev = this._revises ? null : undefined;\n\n  this._input.add = this._input.add\n    .concat(dl.array(d).map(function(d) { return tuple.ingest(d, prev); }));\n  return this;\n};\n\nproto.remove = function(where) {\n  var d = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(d);\n  return this;\n};\n\nproto.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = tuple.idMap(mod),\n      prev = this._revises ? null : undefined; \n\n  this._input.fields[field] = 1;\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      tuple.set(x, field, next);\n      if(ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n  return this;\n};\n\nproto.values = function(data) {\n  if(!arguments.length)\n    return this._collector ? this._collector.data() : this._data;\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nfunction set_prev(d) { if(d._prev === undefined) d._prev = C.SENTINEL; }\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new dataflow node needs it now\n  // ensure existing tuples have prev set.\n  if(!this._revises && p) {\n    this._data.forEach(set_prev);\n    this._input.add.forEach(set_prev); // New tuples that haven't yet been merged into _data\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\nproto.last = function() { return this._output; };\n\nproto.fire = function(input) {\n  if(input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nproto.pipeline = function(pipeline) {\n  var ds = this, n, c;\n  if(!arguments.length) return this._pipeline;\n\n  if(pipeline.length) {\n    // If we have a pipeline, add a collector to the end to materialize\n    // the output.\n    ds._collector = new Collector(this._graph);\n    pipeline.push(ds._collector);\n    ds._revises = pipeline.some(function(p) { return p.revises(); });\n  }\n\n  // Input node applies the datasource's delta, and propagates it to \n  // the rest of the pipeline. It receives touches to reflow data.\n  var input = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  input.evaluate = function(input) {\n    debug(input, [\"input\", ds._name]);\n\n    var delta = ds._input, \n        out = changeset.create(input),\n        rem;\n\n    // Delta might contain fields updated through API\n    dl.keys(delta.fields).forEach(function(f) { out.fields[f] = 1 });\n\n    if(input.reflow) {\n      out.mod = ds._data.slice();\n    } else {\n      // update data\n      if(delta.rem.length) {\n        rem = tuple.idMap(delta.rem);\n        ds._data = ds._data\n          .filter(function(x) { return rem[x._id] !== 1 });\n      }\n\n      if(delta.add.length) ds._data = ds._data.concat(delta.add);\n\n      // reset change list\n      ds._input = changeset.create();\n\n      out.add = delta.add; \n      out.mod = delta.mod;\n      out.rem = delta.rem;\n    }\n\n    return (out.facet = ds._facet, out);\n  };\n\n  pipeline.unshift(input);\n\n  // Output node captures the last changeset seen by this datasource\n  // (needed for joins and builds) and materializes any nested data.\n  // If this datasource is faceted, materializes the values in the facet.\n  var output = new Node(this._graph)\n    .router(true)\n    .collector(true);\n\n  output.evaluate = function(input) {\n    debug(input, [\"output\", ds._name]);\n    var output = changeset.create(input, true);\n\n    if(ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    output.data[ds._name] = 1;\n    return output;\n  };\n\n  pipeline.push(output);\n\n  this._pipeline = pipeline;\n  this._graph.connect(ds._pipeline);\n  return this;\n};\n\nproto.listener = function() { \n  var l = new Node(this._graph).router(true),\n      dest = this,\n      prev = this._revises ? null : undefined;\n\n  l.evaluate = function(input) {\n    dest._srcMap = dest._srcMap || {};  // to propagate tuples correctly\n    var map = dest._srcMap,\n        output  = changeset.create(input);\n\n    output.add = input.add.map(function(t) {\n      return (map[t._id] = tuple.derive(t, t._prev !== undefined ? t._prev : prev));\n    });\n    output.mod = input.mod.map(function(t) { return map[t._id]; });\n    output.rem = input.rem.map(function(t) { \n      var o = map[t._id];\n      map[t._id] = null;\n      return o;\n    });\n\n    return (dest._input = output);\n  };\n\n  l.addListener(this._pipeline[0]);\n  return l;\n};\n\nproto.addListener = function(l) {\n  if(l instanceof Datasource) {\n    if(this._collector) this._collector.addListener(l.listener());\n    else this._pipeline[0].addListener(l.listener());\n  } else {\n    this._pipeline[this._pipeline.length-1].addListener(l);      \n  }\n\n  return this;\n};\n\nproto.removeListener = function(l) {\n  this._pipeline[this._pipeline.length-1].removeListener(l);\n};\n\nproto.listeners = function(ds) {\n  return ds \n    ? this._collector ? this._collector.listeners() : this._pipeline[0].listeners()\n    : this._pipeline[this._pipeline.length-1].listeners();\n};\n\nmodule.exports = Datasource;","var dl = require('datalib'),\n    Heap = require('heap'),\n    Datasource = require('./Datasource'),\n    Signal = require('./Signal'),\n    changeset = require('./changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Graph() {\n}\n\nvar proto = Graph.prototype;\n\nproto.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nproto.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if(!arguments.length) return dl.keys(db).map(function(d) { return db[d]; });\n  if(arguments.length === 1) return db[name];\n  return (db[name] = new Datasource(this, name, facet).pipeline(pipeline));\n};\n\nproto.dataValues = function(names) {\n  var graph = this;\n  if (!arguments.length) names = dl.keys(this._data);\n  if (!dl.isArray(names)) return this._data[names].values();\n  return names.reduce(function(db, n) {\n    return (db[n] = graph._data[n].values(), db);\n  }, {});\n};\n\nfunction signal(name) {\n  var m = this, i, len;\n  if(!dl.isArray(name)) return this._signals[name];\n  return name.map(function(n) { m._signals[n]; });\n}\n\nproto.signal = function(name, init) {\n  var m = this;\n  if(arguments.length === 1) return signal.call(this, name);\n  return (this._signals[name] = new Signal(this, name, init));\n};\n\nproto.signalValues = function(names) {\n  var graph = this;\n  if(!arguments.length) names = dl.keys(this._signals);\n  if(!dl.isArray(names)) return this._signals[names].value();\n  return names.reduce(function(sg, n) {\n    return (sg[n] = graph._signals[n].value(), sg);\n  }, {});\n};\n\nproto.signalRef = function(ref) {\n  if(!dl.isArray(ref)) ref = dl.field(ref);\n  var value = this.signal(ref.shift()).value();\n  if(ref.length > 0) {\n    var fn = Function(\"s\", \"return s[\"+ref.map(dl.str).join(\"][\")+\"]\");\n    value = fn.call(null, value);\n  }\n\n  return value;\n};\n\nvar schedule = function(a, b) {\n  // If the nodes are equal, propagate the non-reflow pulse first,\n  // so that we can ignore subsequent reflow pulses. \n  if(a.rank == b.rank) return a.pulse.reflow ? 1 : -1;\n  else return a.rank - b.rank; \n};\n\nproto.propagate = function(pulse, node) {\n  var v, l, n, p, r, i, len, reflowed;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(schedule); \n\n  if(pulse.stamp) throw \"Pulse already has a non-zero stamp\"\n\n  pulse.stamp = ++this._stamp;\n  pq.push({ node: node, pulse: pulse, rank: node.rank() });\n\n  while (pq.size() > 0) {\n    v = pq.pop(), n = v.node, p = v.pulse, r = v.rank, l = n._listeners;\n    reflowed = p.reflow && n.last() >= p.stamp;\n\n    if(reflowed) continue; // Don't needlessly reflow ops.\n\n    // A node's rank might change during a propagation (e.g. instantiating\n    // a group's dataflow branch). Re-queue if it has. T\n    // TODO: use pq.replace or pq.poppush?\n    if(r != n.rank()) {\n      debug(p, ['Rank mismatch', r, n.rank()]);\n      pq.push({ node: n, pulse: p, rank: n.rank() });\n      continue;\n    }\n\n    p = this.evaluate(p, n);\n\n    // Even if we didn't run the node, we still want to propagate \n    // the pulse. \n    if (p !== this.doNotPropagate) {\n      for (i = 0, len = l.length; i < len; i++) {\n        pq.push({ node: l[i], pulse: p, rank: l[i]._rank });\n      }\n    }\n  }\n};\n\n// Connect a branch of dataflow nodes. \n// Dependencies get wired to the nearest collector. \nfunction forEachNode(branch, fn) {\n  var node, collector, i, len;\n  for(i=0, len=branch.length; i<len; ++i) {\n    node = branch[i];\n    if(node.collector()) collector = node;\n    fn(node, collector, i);\n  }\n}\n\nproto.connect = function(branch) {\n  debug({}, ['connecting']);\n  var graph = this;\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { \n        graph.data(d)\n          .revises(n.revises())\n          .addListener(c);\n      });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).addListener(c); });\n    }\n\n    if(i > 0) {\n      branch[i-1].addListener(branch[i]);\n    }\n  });\n\n  return branch;\n};\n\nproto.disconnect = function(branch) {\n  debug({}, ['disconnecting']);\n  var graph = this;\n\n  forEachNode(branch, function(n, c, i) {\n    var data = n.dependency(C.DATA),\n        signals = n.dependency(C.SIGNALS);\n\n    if(data.length > 0) {\n      data.forEach(function(d) { graph.data(d).removeListener(c); });\n    }\n\n    if(signals.length > 0) {\n      signals.forEach(function(s) { graph.signal(s).removeListener(c) });\n    }\n\n    n.disconnect();  \n  });\n\n  return branch;\n};\n\nproto.reevaluate = function(pulse, node) {\n  var reflowed = !pulse.reflow || (pulse.reflow && node.last() >= pulse.stamp),\n      run = !!pulse.add.length || !!pulse.rem.length || node.router();\n  run = run || !reflowed;\n  return run || node.reevaluate(pulse);\n};\n\nproto.evaluate = function(pulse, node) {\n  if(!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse\n};\n\nmodule.exports = Graph;","var dl = require('datalib'),\n    C = require('../util/constants'),\n    REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nvar node_id = 1;\n\nfunction Node(graph) {\n  if(graph) this.init(graph);\n  return this;\n}\n\nvar proto = Node.prototype;\n\nproto.init = function(graph) {\n  this._id = node_id++;\n  this._graph = graph;\n  this._rank = ++graph._rank; // For topologial sort\n  this._stamp = 0;  // Last stamp seen\n\n  this._listeners = [];\n  this._registered = {}; // To prevent duplicate listeners\n\n  this._deps = {\n    data:    [],\n    fields:  [],\n    scales:  [],\n    signals: [],\n  };\n\n  this._isRouter = false; // Responsible for propagating tuples, cannot ever be skipped\n  this._isCollector = false;  // Holds a materialized dataset, pulse to reflow\n  this._revises = false; // Does the operator require tuples' previous values? \n  return this;\n};\n\nproto.clone = function() {\n  var n = new Node(this._graph);\n  n.evaluate = this.evaluate;\n  n._deps = this._deps;\n  n._isRouter = this._isRouter;\n  n._isCollector = this._isCollector;\n  return n;\n};\n\nproto.rank = function() { return this._rank; };\n\nproto.last = function(stamp) { \n  if(!arguments.length) return this._stamp;\n  this._stamp = stamp;\n  return this;\n};\n\nproto.dependency = function(type, deps) {\n  var d = this._deps[type];\n  if(arguments.length === 1) return d;\n  if(deps === null) { // Clear dependencies of a certain type\n    while(d.length > 0) d.pop();\n  } else {\n    if(!dl.isArray(deps) && d.indexOf(deps) < 0) d.push(deps);\n    else d.push.apply(d, dl.array(deps));\n  }\n  return this;\n};\n\nproto.router = function(bool) {\n  if(!arguments.length) return this._isRouter;\n  this._isRouter = !!bool\n  return this;\n};\n\nproto.collector = function(bool) {\n  if(!arguments.length) return this._isCollector;\n  this._isCollector = !!bool;\n  return this;\n};\n\nproto.revises = function(bool) {\n  if(!arguments.length) return this._revises;\n  this._revises = !!bool;\n  return this;\n};\n\nproto.listeners = function() {\n  return this._listeners;\n};\n\nproto.addListener = function(l) {\n  if(!(l instanceof Node)) throw \"Listener is not a Node\";\n  if(this._registered[l._id]) return this;\n\n  this._listeners.push(l);\n  this._registered[l._id] = 1;\n  if(this._rank > l._rank) {\n    var q = [l];\n    while(q.length) {\n      var cur = q.splice(0,1)[0];\n      cur._rank = ++this._graph._rank;\n      q.push.apply(q, cur._listeners);\n    }\n  }\n\n  return this;\n};\n\nproto.removeListener = function (l) {\n  var foundSending = false;\n  for (var i = 0, len = this._listeners.length; i < len && !foundSending; i++) {\n    if (this._listeners[i] === l) {\n      this._listeners.splice(i, 1);\n      this._registered[l._id] = null;\n      foundSending = true;\n    }\n  }\n  \n  return foundSending;\n};\n\nproto.disconnect = function() {\n  this._listeners = [];\n  this._registered = {};\n};\n\nproto.evaluate = function(pulse) { return pulse; }\n\nproto.reevaluate = function(pulse) {\n  var node = this, reeval = false;\n  return REEVAL.some(function(prop) {\n    reeval = reeval || node._deps[prop].some(function(k) { return !!pulse[prop][k] });\n    return reeval;\n  });\n\n  return this;\n};\n\nmodule.exports = Node;","var Node = require('./Node'),\n    changeset = require('./changeset');\n\nfunction Signal(graph, name, init) {\n  Node.prototype.init.call(this, graph);\n  this._name  = name;\n  this._value = init;\n  this._handlers = [];\n  return this;\n};\n\nvar proto = (Signal.prototype = new Node());\n\nproto.name = function() { return this._name; };\n\nproto.value = function(val) {\n  if(!arguments.length) return this._value;\n  this._value = val;\n  return this;\n};\n\nproto.fire = function(cs) {\n  if(!cs) cs = changeset.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nproto.on = function(handler) {\n  var sg = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    return (handler(sg.name(), sg.value()), input);\n  };\n\n  this._handlers.push({ handler: handler, node: node });\n  return this.addListener(node);\n};\n\nproto.off = function(handler) {\n  var sg = this, h = this._handlers;\n  for(var i=h.length; --i>=0;) {\n    if(!handler || h[i].handler === handler) {\n      sg.removeListener(h.splice(i, 1)[0].node);\n    }\n  }\n  return this;\n};\n\nmodule.exports = Signal;","var C = require('../util/constants');\nvar REEVAL = [C.DATA, C.FIELDS, C.SCALES, C.SIGNALS];\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction reset_prev(x) {\n  x._prev = (x._prev === undefined) ? undefined : C.SENTINEL;\n}\n\nfunction finalize(cs) {\n  for(i=0, len=cs.add.length; i<len; ++i) reset_prev(cs.add[i]);\n  for(i=0, len=cs.mod.length; i<len; ++i) reset_prev(cs.mod[i]);\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.request = a ? a.request : null;\n  REEVAL.forEach(function(d) { b[d] = a ? a[d] : {}; });\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy,\n  finalize: finalize,\n};","var dl = require('datalib'),\n    C = require('../util/constants'),\n    tuple_id = 1;\n\n// Object.create is expensive. So, when ingesting, trust that the\n// datum is an object that has been appropriately sandboxed from \n// the outside environment. \nfunction ingest(datum, prev) {\n  datum = dl.isObject(datum) ? datum : {data: datum};\n  datum._id = tuple_id++;\n  datum._prev = (prev !== undefined) ? (prev || C.SENTINEL) : undefined;\n  return datum;\n}\n\nfunction derive(datum, prev) {\n  return ingest(Object.create(datum), prev);\n}\n\n// WARNING: operators should only call this once per timestamp!\nfunction set(t, k, v) {\n  var prev = t[k];\n  if(prev === v) return;\n  set_prev(t, k);\n  t[k] = v;\n}\n\nfunction set_prev(t, k) {\n  if(t._prev === undefined) return;\n  t._prev = (t._prev === C.SENTINEL) ? {} : t._prev;\n  t._prev[k] = t[k];\n}\n\nfunction has_prev(t) {\n  return t._prev && t._prev !== C.SENTINEL;\n}\n\nfunction reset() { tuple_id = 1; }\n\nfunction idMap(a) {\n  return a.reduce(function(m,x) {\n    return (m[x._id] = 1, m);\n  }, {});\n};\n\nmodule.exports = {\n  ingest: ingest,\n  derive: derive,\n  set:    set,\n  set_prev: set_prev,\n  has_prev: has_prev,\n  reset:  reset,\n  idMap:  idMap\n};","var dl = require('datalib');\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants');\n  var functions = (opt.functions || require('./functions'))(codegen);\n  var idWhiteList = opt.idWhiteList ? dl.toMap(opt.idWhiteList) : null;\n  var idBlackList = opt.idBlackList ? dl.toMap(opt.idBlackList) : null;\n  var memberDepth = 0;\n\n  // TODO generalize?\n  var DATUM = 'd';\n  var SIGNAL_PREFIX = 'sg.';\n  var signals = {};\n  var fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      fn: codegen(ast),\n      signals: dl.keys(signals),\n      fields: dl.keys(fields)\n    };\n    signals = {};\n    fields = {};\n    return retval;\n  }\n\n  function codegen(ast) {\n    if (ast instanceof String) return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error(\"Unsupported type: \" + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    \"Literal\": function(n) {\n        return n.raw;\n      },\n    \"Identifier\": function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            signals[id] = 1;\n            return SIGNAL_PREFIX + id; // HACKish...\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error(\"Illegal identifier: \" + id);\n        }\n        return id;\n      },\n    \"Program\": function(n) {\n        return n.body.map(codegen).join(\"\\n\");\n      },\n    \"MemberExpression\": function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === DATUM) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? \".\"+p : \"[\"+p+\"]\");\n      },\n    \"CallExpression\": function(n) {\n        if (n.callee.type !== \"Identifier\") {\n          throw new Error(\"Illegal callee type: \" + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error(\"Unrecognized function: \" + callee);\n        return fn instanceof Function\n          ? fn(args)\n          : fn + \"(\" + args.map(codegen).join(\",\") + \")\";\n      },\n    \"ArrayExpression\": function(n) {\n        return \"[\" + n.elements.map(codegen).join(\",\") + \"]\";\n      },\n    \"BinaryExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"UnaryExpression\": function(n) {\n        return \"(\" + n.operator + codegen(n.argument) + \")\";\n      },\n    \"UpdateExpression\": function(n) {\n        return \"(\" + (prefix\n          ? n.operator + codegen(n.argument)\n          : codegen(n.argument) + n.operator\n        ) + \")\";\n      },\n    \"ConditionalExpression\": function(n) {\n        return \"(\" + codegen(n.test)\n          + \"?\" + codegen(n.consequent)\n          + \":\" + codegen(n.alternate)\n          + \")\";\n      },\n    \"LogicalExpression\": function(n) {\n        return \"(\" + codegen(n.left) + n.operator + codegen(n.right) + \")\";\n      },\n    \"ObjectExpression\": function(n) {\n        return \"{\" + n.properties.map(codegen).join(\",\") + \"}\";\n      },\n    \"Property\": function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + \":\" + codegen(n.value);\n      },\n    \"ExpressionStatement\": function(n) {\n        return codegen(n.expression);\n      }\n  };\n  \n  return codegen_wrap;\n};","module.exports = {\n  \"NaN\":     \"NaN\",\n  \"E\":       \"Math.E\",\n  \"LN2\":     \"Math.LN2\",\n  \"LN10\":    \"Math.LN10\",\n  \"LOG2E\":   \"Math.LOG2E\",\n  \"LOG10E\":  \"Math.LOG10E\",\n  \"PI\":      \"Math.PI\",\n  \"SQRT1_2\": \"Math.SQRT1_2\",\n  \"SQRT2\":   \"Math.SQRT2\"\n};","var datalib = require('datalib');\n\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + \"(\" + obj + \")\";\n      if (dl.startsWith(cast, \"new \")) obj = \"(\" + obj + \")\";\n    }\n    return obj + \".\" + name + (type < 0 ? \"\" : type === 0\n      ? \"()\"\n      : \"(\" + args.slice(1).map(codegen).join(\",\") + \")\");\n  }\n  \n  var DATE = \"new Date\";\n  var STRING = \"String\";\n  var REGEXP = \"RegExp\";\n\n  return {\n    // MATH functions\n    \"isNaN\":    \"isNaN\",\n    \"isFinite\": \"isFinite\",\n    \"abs\":      \"Math.abs\",\n    \"acos\":     \"Math.acos\",\n    \"asin\":     \"Math.asin\",\n    \"atan\":     \"Math.atan\",\n    \"atan2\":    \"Math.atan2\",\n    \"ceil\":     \"Math.ceil\",\n    \"cos\":      \"Math.cos\",\n    \"exp\":      \"Math.exp\",\n    \"floor\":    \"Math.floor\",\n    \"log\":      \"Math.log\",\n    \"max\":      \"Math.max\",\n    \"min\":      \"Math.min\",\n    \"pow\":      \"Math.pow\",\n    \"random\":   \"Math.random\",\n    \"round\":    \"Math.round\",\n    \"sin\":      \"Math.sin\",\n    \"sqrt\":     \"Math.sqrt\",\n    \"tan\":      \"Math.tan\",\n\n    // DATE functions\n    \"now\":      \"Date.now\",\n    \"datetime\": \"new Date\",\n    \"date\": function(args) {\n        return fncall(\"getDate\", args, DATE, 0);\n      },\n    \"day\": function(args) {\n        return fncall(\"getDay\", args, DATE, 0);\n      },\n    \"year\": function(args) {\n        return fncall(\"getFullYear\", args, DATE, 0);\n      },\n    \"month\": function(args) {\n        return fncall(\"getMonth\", args, DATE, 0);\n      },\n    \"hours\": function(args) {\n        return fncall(\"getHours\", args, DATE, 0);\n      },\n    \"minutes\": function(args) {\n        return fncall(\"getMinutes\", args, DATE, 0);\n      },\n    \"seconds\": function(args) {\n        return fncall(\"getSeconds\", args, DATE, 0);\n      },\n    \"milliseconds\": function(args) {\n        return fncall(\"getMilliseconds\", args, DATE, 0);\n      },\n    \"time\": function(args) {\n        return fncall(\"getTime\", args, DATE, 0);\n      },\n    \"timezoneoffset\": function(args) {\n        return fncall(\"getTimezoneOffset\", args, DATE, 0);\n      },\n    \"utcdate\": function(args) {\n        return fncall(\"getUTCDate\", args, DATE, 0);\n      },\n    \"utcday\": function(args) {\n        return fncall(\"getUTCDay\", args, DATE, 0);\n      },\n    \"utcyear\": function(args) {\n        return fncall(\"getUTCFullYear\", args, DATE, 0);\n      },\n    \"utcmonth\": function(args) {\n        return fncall(\"getUTCMonth\", args, DATE, 0);\n      },\n    \"utchours\": function(args) {\n        return fncall(\"getUTCHours\", args, DATE, 0);\n      },\n    \"utcminutes\": function(args) {\n        return fncall(\"getUTCMinutes\", args, DATE, 0);\n      },\n    \"utcseconds\": function(args) {\n        return fncall(\"getUTCSeconds\", args, DATE, 0);\n      },\n    \"utcmilliseconds\": function(args) {\n        return fncall(\"getUTCMilliseconds\", args, DATE, 0);\n      },\n\n    // shared sequence functions\n    \"length\": function(args) {\n        return fncall(\"length\", args, null, -1);\n      },\n    \"indexof\": function(args) {\n        return fncall(\"indexOf\", args, null);\n      },\n    \"lastindexof\": function(args) {\n        return fncall(\"lastIndexOf\", args, null);\n      },\n\n    // STRING functions\n    \"parseFloat\": \"parseFloat\",\n    \"parseInt\": \"parseInt\",\n    \"upper\": function(args) {\n        return fncall(\"toUpperCase\", args, STRING, 0);\n      },\n    \"lower\": function(args) {\n        return fncall(\"toLowerCase\", args, STRING, 0);\n      },\n    \"slice\": function(args) {\n        return fncall(\"slice\", args, STRING);\n      },\n    \"substring\": function(args) {\n        return fncall(\"substring\", args, STRING);\n      },\n\n    // REGEXP functions\n    \"test\": function(args) {\n        return fncall(\"test\", args, REGEXP);\n      },\n    \n    // Control Flow functions\n    \"if\": function(args) {\n        if (args.length < 3)\n          throw new Error(\"Missing arguments to if function.\");\n        if (args.length > 3)\n        throw new Error(\"Too many arguments to if function.\");\n        var a = args.map(codegen);\n        return a[0]+\"?\"+a[1]+\":\"+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nmodule.exports = {\n  parse: function(input, opt) { return parser.parse(\"(\"+input+\")\", opt); },\n  code: function(opt) { return codegen(opt); }\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Expect the next token to match the specified keyword.\n  // If not, an exception will be thrown.\n\n  function expectKeyword(keyword) {\n      var token = lex();\n      if (token.type !== Token.Keyword || token.value !== keyword) {\n          throwUnexpected(token);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // Return true if provided expression is LeftHandSideExpression\n\n  function isLeftHandSide(expr) {\n      return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, param, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], token, property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpression() {\n      var expr, property, startToken;\n      assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n      startToken = lookahead;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else {\n              break;\n          }\n      }\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr, token, startToken = lookahead;\n\n      expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, right, list, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr, startToken = lookahead, expressions;\n\n      expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          labeledBody,\n          key,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    config = require('../util/config');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction axes(model, spec, axes, group) {\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model);\n    axis(def, index, axes[index], group);\n  });\n};\n\nfunction axis(def, index, axis, group) {\n  // axis scale\n  if (def.scale !== undefined) {\n    axis.scale(group.scale(def.scale));\n  }\n\n  // axis orientation\n  axis.orient(def.orient || ORIENT[def.type]);\n  // axis offset\n  axis.offset(def.offset || 0);\n  // axis layer\n  axis.layer(def.layer || \"front\");\n  // axis grid lines\n  axis.grid(def.grid || false);\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(def.titleOffset != null\n    ? def.titleOffset : config.axis.titleOffset);\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding\n  axis.tickPadding(def.tickPadding || config.axis.padding);\n\n  // axis tick size(s)\n  var size = [];\n  if (def.tickSize !== undefined) {\n    for (var i=0; i<3; ++i) size.push(def.tickSize);\n  } else {\n    var ts = config.axis.tickSize;\n    size = [ts, ts, ts];\n  }\n  if (def.tickSizeMajor != null) size[0] = def.tickSizeMajor;\n  if (def.tickSizeMinor != null) size[1] = def.tickSizeMinor;\n  if (def.tickSizeEnd   != null) size[2] = def.tickSizeEnd;\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // tick arguments\n  if (def.ticks != null) {\n    var ticks = dl.isArray(def.ticks) ? def.ticks : [def.ticks];\n    axis.ticks.apply(axis, ticks);\n  } else {\n    axis.ticks(config.axis.ticks);\n  }\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks\n      ? dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks\n      ? dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nmodule.exports = axes;","var dl = require('datalib'),\n    config = require('../util/config'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nvar parseData = function(model, spec, callback) {\n  var count = 0;\n\n  function loaded(d) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + d.url + \" \" + error);\n      } else {\n        model.data(d.name).values(dl.read(data, d.format));\n      }\n      if (--count === 0) callback();\n    }\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), loaded(d));\n    }\n    parseData.datasource(model, d);\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n};\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform||[]).map(function(t) { return parseTransforms(model, t) }),\n      mod = (d.modify||[]).map(function(m) { return parseModify(model, m, d) }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    ds.source(d.source)\n      .revises(ds.revises()) // If new ds revises, then it's origin must revise too.\n      .addListener(ds);  // Derived ds will be pulsed by its src rather than the model.\n    model.removeListener(ds.pipeline()[0]); \n  }\n\n  return ds;    \n};\n\nmodule.exports = parseData;\n","/*\n * Generated by PEG.js 0.8.0.\n *\n * http://pegjs.majda.cz/\n */\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction SyntaxError(message, expected, found, offset, line, column) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.offset   = offset;\n  this.line     = line;\n  this.column   = column;\n\n  this.name     = \"SyntaxError\";\n}\n\npeg$subclass(SyntaxError, Error);\n\nfunction parse(input) {\n  var options = arguments.length > 1 ? arguments[1] : {},\n\n      peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = peg$FAILED,\n      peg$c1 = \",\",\n      peg$c2 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n      peg$c3 = function(o, m) { return [o].concat(m) },\n      peg$c4 = function(o) { return [o] },\n      peg$c5 = \"[\",\n      peg$c6 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n      peg$c7 = \"]\",\n      peg$c8 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n      peg$c9 = \">\",\n      peg$c10 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n      peg$c11 = function(f1, f2, o) { return {start: f1, end: f2, middle: o}},\n      peg$c12 = [],\n      peg$c13 = function(s, f) { return (s.filters = f), s },\n      peg$c14 = function(s) { return s },\n      peg$c15 = null,\n      peg$c16 = function(t, e) { return { event: e, target: t } },\n      peg$c17 = /^[:a-zA-z0-9_\\-]/,\n      peg$c18 = { type: \"class\", value: \"[:a-zA-z0-9_\\\\-]\", description: \"[:a-zA-z0-9_\\\\-]\" },\n      peg$c19 = function(s) { return { signal: s.join(\"\") }},\n      peg$c20 = \"(\",\n      peg$c21 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n      peg$c22 = \")\",\n      peg$c23 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n      peg$c24 = function(m) { return { stream: m }},\n      peg$c25 = \".\",\n      peg$c26 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n      peg$c27 = \":\",\n      peg$c28 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n      peg$c29 = function(c) { return { type:'class', value: c } },\n      peg$c30 = \"#\",\n      peg$c31 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n      peg$c32 = function(id) { return { type:'id', value: id } },\n      peg$c33 = \"mousedown\",\n      peg$c34 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n      peg$c35 = \"mouseup\",\n      peg$c36 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n      peg$c37 = \"click\",\n      peg$c38 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n      peg$c39 = \"dblclick\",\n      peg$c40 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n      peg$c41 = \"wheel\",\n      peg$c42 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n      peg$c43 = \"keydown\",\n      peg$c44 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n      peg$c45 = \"keypress\",\n      peg$c46 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n      peg$c47 = \"keyup\",\n      peg$c48 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n      peg$c49 = \"mousewheel\",\n      peg$c50 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n      peg$c51 = \"mousemove\",\n      peg$c52 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n      peg$c53 = \"mouseout\",\n      peg$c54 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n      peg$c55 = \"mouseover\",\n      peg$c56 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n      peg$c57 = \"mouseenter\",\n      peg$c58 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n      peg$c59 = \"touchstart\",\n      peg$c60 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n      peg$c61 = \"touchmove\",\n      peg$c62 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n      peg$c63 = \"touchend\",\n      peg$c64 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n      peg$c65 = function(field) { return field  },\n      peg$c66 = /^['\"a-zA-Z0-9_.><=! \\t\\-]/,\n      peg$c67 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\", description: \"['\\\"a-zA-Z0-9_.><=! \\\\t\\\\-]\" },\n      peg$c68 = function(v) { return v.join(\"\") },\n      peg$c69 = /^[ \\t\\r\\n]/,\n      peg$c70 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n      peg$currPos          = 0,\n      peg$reportedPos      = 0,\n      peg$cachedPos        = 0,\n      peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$reportedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$reportedPos;\n  }\n\n  function line() {\n    return peg$computePosDetails(peg$reportedPos).line;\n  }\n\n  function column() {\n    return peg$computePosDetails(peg$reportedPos).column;\n  }\n\n  function expected(description) {\n    throw peg$buildException(\n      null,\n      [{ type: \"other\", description: description }],\n      peg$reportedPos\n    );\n  }\n\n  function error(message) {\n    throw peg$buildException(message, null, peg$reportedPos);\n  }\n\n  function peg$computePosDetails(pos) {\n    function advance(details, startPos, endPos) {\n      var p, ch;\n\n      for (p = startPos; p < endPos; p++) {\n        ch = input.charAt(p);\n        if (ch === \"\\n\") {\n          if (!details.seenCR) { details.line++; }\n          details.column = 1;\n          details.seenCR = false;\n        } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n          details.line++;\n          details.column = 1;\n          details.seenCR = true;\n        } else {\n          details.column++;\n          details.seenCR = false;\n        }\n      }\n    }\n\n    if (peg$cachedPos !== pos) {\n      if (peg$cachedPos > pos) {\n        peg$cachedPos = 0;\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n      }\n      advance(peg$cachedPosDetails, peg$cachedPos, pos);\n      peg$cachedPos = pos;\n    }\n\n    return peg$cachedPosDetails;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildException(message, expected, pos) {\n    function cleanupExpected(expected) {\n      var i = 1;\n\n      expected.sort(function(a, b) {\n        if (a.description < b.description) {\n          return -1;\n        } else if (a.description > b.description) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      while (i < expected.length) {\n        if (expected[i - 1] === expected[i]) {\n          expected.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n\n    function buildMessage(expected, found) {\n      function stringEscape(s) {\n        function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n        return s\n          .replace(/\\\\/g,   '\\\\\\\\')\n          .replace(/\"/g,    '\\\\\"')\n          .replace(/\\x08/g, '\\\\b')\n          .replace(/\\t/g,   '\\\\t')\n          .replace(/\\n/g,   '\\\\n')\n          .replace(/\\f/g,   '\\\\f')\n          .replace(/\\r/g,   '\\\\r')\n          .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n          .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n          .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n          .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n      }\n\n      var expectedDescs = new Array(expected.length),\n          expectedDesc, foundDesc, i;\n\n      for (i = 0; i < expected.length; i++) {\n        expectedDescs[i] = expected[i].description;\n      }\n\n      expectedDesc = expected.length > 1\n        ? expectedDescs.slice(0, -1).join(\", \")\n            + \" or \"\n            + expectedDescs[expected.length - 1]\n        : expectedDescs[0];\n\n      foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n      return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n    }\n\n    var posDetails = peg$computePosDetails(pos),\n        found      = pos < input.length ? input.charAt(pos) : null;\n\n    if (expected !== null) {\n      cleanupExpected(expected);\n    }\n\n    return new SyntaxError(\n      message !== null ? message : buildMessage(expected, found),\n      expected,\n      found,\n      pos,\n      posDetails.line,\n      posDetails.column\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsemerged();\n\n    return s0;\n  }\n\n  function peg$parsemerged() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseordered();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemerged();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c3(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseordered() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesep();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefiltered();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesep();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c1;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsesep();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsefiltered();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsesep();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c7;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesep();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 62) {\n                          s11 = peg$c9;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsesep();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseordered();\n                            if (s13 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c11(s3, s7, s13);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefiltered();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefiltered() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsestream();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsefilter();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefilter();\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestream() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseclass();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseid();\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$c15;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeventType();\n      if (s2 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c16(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c17.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c17.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c19(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c20;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsemerged();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c22;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c24(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseclass() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseid() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parseeventType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 9) === peg$c33) {\n      s0 = peg$c33;\n      peg$currPos += 9;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c35) {\n        s0 = peg$c35;\n        peg$currPos += 7;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c37) {\n          s0 = peg$c37;\n          peg$currPos += 5;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c39) {\n            s0 = peg$c39;\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c41) {\n              s0 = peg$c41;\n              peg$currPos += 5;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c43) {\n                s0 = peg$c43;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c45) {\n                  s0 = peg$c45;\n                  peg$currPos += 8;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c47) {\n                    s0 = peg$c47;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 10) === peg$c49) {\n                      s0 = peg$c49;\n                      peg$currPos += 10;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 9) === peg$c51) {\n                        s0 = peg$c51;\n                        peg$currPos += 9;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c53) {\n                          s0 = peg$c53;\n                          peg$currPos += 8;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c55) {\n                            s0 = peg$c55;\n                            peg$currPos += 9;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 10) === peg$c57) {\n                              s0 = peg$c57;\n                              peg$currPos += 10;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c59) {\n                                s0 = peg$c59;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 9) === peg$c61) {\n                                  s0 = peg$c61;\n                                  peg$currPos += 9;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 8) === peg$c63) {\n                                    s0 = peg$c63;\n                                    peg$currPos += 8;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefilter() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c65(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$c0;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    } else {\n      s1 = peg$c0;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$reportedPos = s0;\n      s1 = peg$c68(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsesep() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c69.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c70); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c69.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail({ type: \"end\", description: \"end of input\" });\n    }\n\n    throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n  }\n}\n\nmodule.exports = {\n  SyntaxError: SyntaxError,\n  parse:       parse\n};","var dl = require('datalib'),\n    expression = require('../expression');\n\nvar expr = (function() {\n  var parse = expression.parse;\n  var codegen = expression.code({\n    idWhiteList: ['d', 'e', 'i', 'p', 'sg']\n  });\n\n  return function(expr) {    \n    var value = codegen(parse(expr));\n    value.fn = Function('d', 'e', 'i', 'p', 'sg',\n      '\"use strict\"; return (' + value.fn + ');');\n    return value;\n  };\n})();\n\nexpr.eval = function(graph, fn, d, e, i, p, sg) {\n  sg = graph.signalValues(dl.array(sg));\n  return fn.call(null, d, e, i, p, sg);\n};\n\nmodule.exports = expr;","var dl = require('datalib'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nmodule.exports = function parseInteractors(model, spec, defFactory) {\n  var count = 0,\n      sg = {}, pd = {}, mk = {},\n      signals = [], predicates = [];\n\n  function loaded(i) {\n    return function(error, data) {\n      if (error) {\n        dl.error(\"LOADING FAILED: \" + i.url);\n      } else {\n        var def = dl.isObject(data) ? data : JSON.parse(data);\n        interactor(i.name, def);\n      }\n      if (--count == 0) inject();\n    }\n  }\n\n  function interactor(name, def) {\n    sg = {}, pd = {};\n    if (def.signals)    signals.push.apply(signals, nsSignals(name, def.signals));\n    if (def.predicates) predicates.push.apply(predicates, nsPredicates(name, def.predicates));\n    nsMarks(name, def.marks);\n  }\n\n  function inject() {\n    if (dl.keys(mk).length > 0) injectMarks(spec.marks);\n    spec.signals = dl.array(spec.signals);\n    spec.predicates = dl.array(spec.predicates);\n    spec.signals.unshift.apply(spec.signals, signals);\n    spec.predicates.unshift.apply(spec.predicates, predicates);\n    defFactory();\n  }\n\n  function injectMarks(marks) {\n    var m, r, i, len;\n    marks = dl.array(marks);\n\n    for(i = 0, len = marks.length; i < len; i++) {\n      m = marks[i];\n      if (r = mk[m.type]) {\n        marks[i] = dl.duplicate(r);\n        if (m.from) marks[i].from = m.from;\n        if (m.properties) {\n          [C.ENTER, C.UPDATE, C.EXIT].forEach(function(p) {\n            marks[i].properties[p] = dl.extend(r.properties[p], m.properties[p]);\n          });\n        }\n      } else if (m.marks) {  // TODO how to override properties of nested marks?\n        injectMarks(m.marks);\n      }\n    }    \n  }\n\n  function ns(n, s) { \n    if (dl.isString(s)) {\n      return s + \"_\" + n;\n    } else {\n      dl.keys(s).forEach(function(x) { \n        var regex = new RegExp('\\\\b'+x+'\\\\b', \"g\");\n        n = n.replace(regex, s[x]) \n      });\n      return n;\n    }\n  }\n\n  function nsSignals(name, signals) {\n    signals = dl.array(signals);\n    // Two passes to ns all signals, and then overwrite their definitions\n    // in case signal order is important.\n    signals.forEach(function(s) { s.name = sg[s.name] = ns(s.name, name); });\n    signals.forEach(function(s) {\n      (s.streams || []).forEach(function(t) {\n        t.type = ns(t.type, sg);\n        t.expr = ns(t.expr, sg);\n      });\n    });\n    return signals;\n  }\n\n  function nsPredicates(name, predicates) {\n    predicates = dl.array(predicates);\n    predicates.forEach(function(p) {\n      p.name = pd[p.name] = ns(p.name, name);\n\n      [p.operands, p.range].forEach(function(x) {\n        (x || []).forEach(function(o) {\n          if (o.signal) o.signal = ns(o.signal, sg);\n          else if (o.predicate) nsOperand(o);\n        })\n      });\n\n    });  \n    return predicates; \n  }\n\n  function nsOperand(o) {\n    o.predicate = pd[o.predicate];\n    dl.keys(o.input).forEach(function(k) {\n      var i = o.input[k];\n      if (i.signal) i.signal = ns(i.signal, sg);\n    });\n  }\n\n  function nsMarks(name, marks) {\n    (marks || []).forEach(function(m) { \n      nsProperties(m.properties.enter);\n      nsProperties(m.properties.update);\n      nsProperties(m.properties.exit);\n      mk[ns(m.name, name)] = m; \n    });\n  }\n\n  function nsProperties(propset) {\n    dl.keys(propset).forEach(function(k) {\n      var p = propset[k];\n      if (p.signal) p.signal = ns(p.signal, sg);\n      else if (p.rule) {\n        p.rule.forEach(function(r) { \n          if (r.signal) r.signal = ns(r.signal, sg);\n          if (r.predicate) nsOperand(r); \n        });\n      }\n    });\n  }\n\n  (spec.interactors || []).forEach(function(i) {\n    if (i.url) {\n      count += 1;\n      dl.load(dl.extend({url: i.url}, config.load), loaded(i));\n    }\n  });\n\n  if (count === 0) setTimeout(inject, 1);\n  return spec;\n}","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nmodule.exports = function parseMark(model, mark) {\n  var props = mark.properties,\n      group = mark.marks;\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g); });\n  }\n    \n  return mark;\n};","var parseMark = require('./mark');\n\nmodule.exports = function(model, spec, width, height) {\n  return {\n    type: \"group\",\n    width: width,\n    height: height,\n    scales: spec.scales || [],\n    axes: spec.axes || [],\n    // legends: spec.legends || [],\n    marks: (spec.marks || []).map(function(m) { return parseMark(model, m); })\n  };\n};","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    tuple = require('../dataflow/tuple'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nvar filter = function(field, value, src, dest) {\n  for(var i = src.length-1; i >= 0; --i) {\n    if(src[i][field] == value)\n      dest.push.apply(dest, src.splice(i, 1));\n  }\n};\n\nmodule.exports = function parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null, \n      signalName = signal ? signal[0] : null,\n      predicate = def.predicate ? model.predicate(def.predicate) : null,\n      reeval = (predicate === null),\n      node = new Node(model);\n\n  node.evaluate = function(input) {\n    if(predicate !== null) {\n      var db = {};\n      (predicate.data||[]).forEach(function(d) { db[d] = model.data(d).values(); });\n\n      // TODO: input\n      reeval = predicate.call(predicate, {}, db, model.signalValues(predicate.signals||[]), model._predicates);\n    }\n\n    debug(input, [def.type+\"ing\", reeval]);\n    if(!reeval) return input;\n\n    var datum = {}, \n        value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        prev = d.revises() ? null : undefined,\n        t = null;\n\n    datum[def.field] = value;\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples. \n    if(def.type == C.ADD) {\n      t = tuple.ingest(datum, prev);\n      input.add.push(t);\n      d._data.push(t);\n    } else if(def.type == C.REMOVE) {\n      filter(def.field, value, input.add, input.rem);\n      filter(def.field, value, input.mod, input.rem);\n      d._data = d._data.filter(function(x) { return x[def.field] !== value });\n    } else if(def.type == C.TOGGLE) {\n      var add = [], rem = [];\n      filter(def.field, value, input.rem, add);\n      filter(def.field, value, input.add, rem);\n      filter(def.field, value, input.mod, rem);\n      if(add.length == 0 && rem.length == 0) add.push(tuple.ingest(datum));\n\n      input.add.push.apply(input.add, add);\n      d._data.push.apply(d._data, add);\n      input.rem.push.apply(input.rem, rem);\n      d._data = d._data.filter(function(x) { return rem.indexOf(x) === -1 });\n    } else if(def.type == C.CLEAR) {\n      input.rem.push.apply(input.rem, input.add);\n      input.rem.push.apply(input.rem, input.mod);\n      input.add = [];\n      input.mod = [];\n      d._data  = [];\n    } \n\n    input.fields[def.field] = 1;\n    return input;\n  };\n\n  if(signalName) node.dependency(C.SIGNALS, signalName);\n  if(predicate)  node.dependency(C.SIGNALS, predicate.signals);\n  \n  return node;\n}","var dl = require('datalib');\n\nmodule.exports = function parsePadding(pad) {\n  if (pad == null) return \"auto\";\n  else if (dl.isString(pad)) return pad===\"strict\" ? \"strict\" : \"auto\";\n  else if (dl.isObject(pad)) return pad;\n  var p = dl.isNumber(pad) ? pad : 20;\n  return {top:p, left:p, right:p, bottom:p};\n}","var dl = require('datalib');\n\nmodule.exports = function parsePredicate(model, spec) {\n  var types = {\n    '=':  parseComparator,\n    '==': parseComparator,\n    '!=': parseComparator,\n    '>':  parseComparator,\n    '>=': parseComparator,\n    '<':  parseComparator,\n    '<=': parseComparator,\n    'and': parseLogical,\n    '&&':  parseLogical,\n    'or':  parseLogical,\n    '||':  parseLogical,\n    'in': parseIn\n  };\n\n  function parseSignal(signal, signals) {\n    var s = dl.field(signal),\n        code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n    signals[s.shift()] = 1;\n    return code;\n  };\n\n  function parseOperands(operands) {\n    var decl = [], defs = [],\n        signals = {}, db = {};\n\n    dl.array(operands).forEach(function(o, i) {\n      var signal, name = \"o\"+i, def = \"\";\n      \n      if(o.value !== undefined) def = dl.str(o.value);\n      else if(o.arg)    def = \"args[\"+dl.str(o.arg)+\"]\";\n      else if(o.signal) def = parseSignal(o.signal, signals);\n      else if(o.predicate) {\n        var pred = model.predicate(o.predicate),\n            p = \"predicates[\"+dl.str(o.predicate)+\"]\";\n\n        pred.signals.forEach(function(s) { signals[s] = 1; });\n        pred.data.forEach(function(d) { db[d] = 1 });\n\n        dl.keys(o.input).forEach(function(k) {\n          var i = o.input[k], signal;\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if(i.signal)   def += parseSignal(i.signal, signals);\n          else if(i.arg) def += \"args[\"+dl.str(i.arg)+\"]\";\n          def+=\", \";\n        });\n\n        def+= p+\".call(\"+p+\", args, db, signals, predicates)\";\n      }\n\n      decl.push(name);\n      defs.push(name+\"=(\"+def+\")\");\n    });\n\n    return {\n      code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n      signals: dl.keys(signals),\n      data: dl.keys(db)\n    }\n  };\n\n  function parseComparator(spec) {\n    var ops = parseOperands(spec.operands);\n    if(spec.type == '=') spec.type = '==';\n\n    return {\n      code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseLogical(spec) {\n    var ops = parseOperands(spec.operands),\n        o = [], i = 0, len = spec.operands.length;\n\n    while(o.push(\"o\"+i++)<len);\n    if(spec.type == 'and') spec.type = '&&';\n    else if(spec.type == 'or') spec.type = '||';\n\n    return {\n      code: ops.code + \"return \" + o.join(spec.type) + \";\",\n      signals: ops.signals,\n      data: ops.data\n    };\n  };\n\n  function parseIn(spec) {\n    var o = [spec.item], code = \"\";\n    if(spec.range) o.push.apply(o, spec.range);\n    if(spec.scale) {\n      code = parseScale(spec.scale, o);\n    }\n\n    var ops = parseOperands(o);\n    code = ops.code + code;\n\n    if(spec.data) {\n      var field = dl.field(spec.field).map(dl.str);\n      code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n      code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n    } else if(spec.range) {\n      // TODO: inclusive/exclusive range?\n      // TODO: inverting ordinal scales\n      if(spec.scale) code += \"o1 = scale(o1);\\no2 = scale(o2);\\n\";\n      code += \"return o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1\";\n    }\n\n    return {\n      code: code, \n      signals: ops.signals, \n      data: ops.data.concat(spec.data ? [spec.data] : [])\n    };\n  };\n\n  // Populate ops such that ultimate scale/inversion function will be in `scale` var. \n  function parseScale(spec, ops) {\n    var code = \"var scale = \", \n        idx  = ops.length;\n\n    if(dl.isString(spec)) {\n      ops.push({ value: spec });\n      code += \"this.root().scale(o\"+idx+\")\";\n    } else if(spec.arg) {  // Scale function is being passed as an arg\n      ops.push(spec);\n      code += \"o\"+idx;\n    } else if(spec.name) { // Full scale parameter {name: ..}\n      ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n      code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n      if(spec.scope) {\n        ops.push(spec.scope);\n        code += \"(o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\")\";\n      } else {\n        code += \"this.root().scale(o\"+idx+\")\";\n      }\n      code += \")\"\n    }\n\n    if(spec.invert === true) {  // Allow spec.invert.arg?\n      code += \".invert\"\n    }\n\n    return code+\";\\n\";\n  }\n\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](s),\n        pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0] }; // For global scales\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    tuple = require('../dataflow/tuple'),\n    config = require('../util/config');\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction compile(model, mark, spec) {\n  var code = \"\",\n      names = dl.keys(spec),\n      i, len, name, ref, vars = {}, \n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        reflow:  false\n      };\n      \n  code += \"var o = trans ? {} : item;\\n\"\n  \n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if(ref.rule) {\n      ref = rule(model, name, ref.rule);\n      code += \"\\n  \" + ref.code\n    } else {\n      ref = valueRef(name, ref);\n      code += \"this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(function(p) {\n      if(ref[p] != null) dl.array(ref[p]).forEach(function(k) { deps[p][k] = 1 });\n    });\n    deps.reflow = deps.reflow || ref.reflow;\n  }\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \"\n            + \"var t = o.x;\"\n            + \"this.tpl.set(o, 'x', o.x2);\"\n            + \"this.tpl.set(o, 'x2', t); \"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  this.tpl.set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'x', o.x2);\"\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \"\n            + \"var t = o.y;\"\n            + \"this.tpl.set(o, 'y', o.y2);\"\n            + \"this.tpl.set(o, 'y2', t);\"\n            + \"};\";\n      code += \"\\n  this.tpl.set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  this.tpl.set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  this.tpl.set(o, 'y', o.y2);\"\n    }\n  }\n  \n  if (hasPath(mark, vars)) code += \"\\n  item.touch();\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n\n  try {\n    var encoder = Function(\"item\", \"group\", \"trans\", \"db\", \n      \"signals\", \"predicates\", code);\n    encoder.tpl  = tuple;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      reflow:  deps.reflow\n    }\n  } catch (e) {\n    dl.error(e);\n    dl.log(code);\n  }\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark===\"area\" || mark===\"line\") &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nfunction rule(model, name, rules) {\n  var signals = [], scales = [], db = [],\n      inputs = [], code = \"\";\n\n  (rules||[]).forEach(function(r, i) {\n    var predName = r.predicate,\n        pred = model.predicate(predName),\n        p = \"predicates[\"+dl.str(predName)+\"]\",\n        input = [], args = name+\"_arg\"+i,\n        ref;\n\n    dl.keys(r.input).forEach(function(k) {\n      var ref = valueRef(i, r.input[k]);\n      input.push(dl.str(k)+\": \"+ref.val);\n      if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n      if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n    });\n\n    ref = valueRef(name, r);\n    if(ref.signals) signals.push.apply(signals, dl.array(ref.signals));\n    if(ref.scales)  scales.push.apply(scales, dl.array(ref.scales));\n\n    if(predName) {\n      signals.push.apply(signals, pred.signals);\n      db.push.apply(db, pred.data);\n      inputs.push(args+\" = {\"+input.join(', ')+\"}\");\n      code += \"if(\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\\n\" +\n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\";\n      code += rules[i+1] ? \"  } else \" : \"  }\";\n    } else {\n      code += \"{\\n\" + \n        \"    this.tpl.set(o, \"+dl.str(name)+\", \"+ref.val+\");\\n\"+\n        \"  }\";\n    }\n  });\n\n  code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return {code: code, signals: signals, scales: scales, data: db};\n}\n\nfunction valueRef(name, ref) {\n  if (ref == null) return null;\n\n  if (name===\"fill\" || name===\"stroke\") {\n    if (ref.c) {\n      return colorRef(\"hcl\", ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(\"hsl\", ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(\"lab\", ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(\"rgb\", ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null, \n      sgRef = {}, fRef = {}, sRef = {},\n      signals = [], fields = [], reflow = false;\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = \"signals[\"+sgRef.map(dl.str).join(\"][\")+\"]\"; \n    signals.push(sgRef.shift());\n  }\n\n  if(ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef  = fieldRef(ref.field);\n    val = fRef.val;\n  }\n\n  if (ref.scale !== undefined) {\n    sRef = scaleRef(ref.scale);\n    scale = sRef.val;\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if(val !== null || ref.band || ref.mult || ref.offset) {\n      val = scale + (ref.band ? \".rangeBand()\" : \n        \"(\"+(val !== null ? val : \"item.datum.data\")+\")\");\n    } else {\n      val = scale;\n    }\n  }\n  \n  // multiply, offset, return value\n  val = \"(\" + (ref.mult?(dl.number(ref.mult)+\" * \"):\"\") + val + \")\"\n    + (ref.offset ? \" + \" + dl.number(ref.offset) : \"\");\n\n  // Collate dependencies\n  return {\n    val: val,\n    signals: signals.concat(dl.array(fRef.signals)).concat(dl.array(sRef.signals)),\n    fields:  fields.concat(dl.array(fRef.fields)).concat(dl.array(sRef.fields)),\n    scales:  ref.scale ? (ref.scale.name || ref.scale) : null, // TODO: connect sRef'd scale?\n    reflow:  reflow || fRef.reflow || sRef.reflow\n  };\n}\n\nfunction colorRef(type, x, y, z) {\n  var xx = x ? valueRef(\"\", x) : config.color[type][0],\n      yy = y ? valueRef(\"\", y) : config.color[type][1],\n      zz = z ? valueRef(\"\", z) : config.color[type][2]\n      signals = [], scales = [];\n\n  [xx, yy, zz].forEach(function(v) {\n    if(v.signals) signals.push.apply(signals, v.signals);\n    if(v.scales)  scales.push(v.scales);\n  });\n\n  return {\n    val: \"(this.d3.\" + type + \"(\" + [xx.val, yy.val, zz.val].join(\",\") + ') + \"\")',\n    signals: signals,\n    scales: scales\n  };\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if(dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join(\"][\")};\n  } \n\n  // Resolve nesting/parent lookups\n  var l = ref.level,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join(\"group.mark.\") : \"\",\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      fields  = r.fields  || [],\n      signals = r.signals || [],\n      reflow  = r.reflow  || false; // Nested fieldrefs trigger full reeval of Encoder.\n\n  if(ref.datum) {\n    val = \"item.datum[\"+val+\"]\";\n    fields.push(ref.datum);\n  } else if(ref.group) {\n    val = scope+\"group[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.parent) {\n    val = scope+\"group.datum[\"+val+\"]\";\n    reflow = true;\n  } else if(ref.signal) {\n    val = \"signals[\"+val+\"]\";\n    signals.push(dl.field(ref.signal)[0]);\n    reflow = true;\n  }\n\n  return {val: val, fields: fields, signals: signals, reflow: reflow};\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null;\n\n  if(dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if(ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = \"group.scale(\"+scale+\")\";\n  if(ref.invert) scale += \".invert\";  // TODO: ordinal scales\n\n  return fr ? (fr.val = scale, fr) : {val: scale};\n}\n\nmodule.exports = compile;","var expr = require('./expr'),\n    C = require('../util/constants');\n\nmodule.exports = function parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    var signal = model.signal(s.name, s.init),\n        exp;\n\n    if(s.expr) {\n      exp = expr(s.expr);\n      signal.evaluate = function(input) {\n        var value = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n        if(spec.scale) value = model.scale(spec, value);\n        signal.value(value);\n        input.signals[s.name] = 1;\n        return input;\n      };\n      signal.dependency(C.SIGNALS, exp.signals);\n      exp.signals.forEach(function(dep) { model.signal(dep).addListener(signal); });\n    }\n  });\n\n  return spec;\n};","var dl = require('datalib'),\n    Model = require('../core/Model'), \n    View = require('../core/View'), \n    parsePadding = require('../parse/padding'),\n    parseMarks = require('../parse/marks'),\n    parseSignals = require('../parse/signals'),\n    parsePredicates = require('../parse/predicates'),\n    parseData = require('../parse/data'),\n    parseInteractors = require('../parse/interactors');\n\nmodule.exports = function parseSpec(spec, callback, viewFactory) {\n  // protect against subsequent spec modification\n  spec = dl.duplicate(spec);\n\n  viewFactory = viewFactory || View.factory;\n\n  var width = spec.width || 500,\n      height = spec.height || 500,\n      viewport = spec.viewport || null,\n      model = new Model();\n\n  parseInteractors(model, spec, function() {\n    model.defs({\n      width: width,\n      height: height,\n      viewport: viewport,\n      padding: parsePadding(spec.padding),\n      signals: parseSignals(model, spec.signals),\n      predicates: parsePredicates(model, spec.predicates),\n      marks: parseMarks(model, spec, width, height),\n      data: parseData(model, spec.data, function() { callback(viewFactory(model)); })\n    });\n  });\n}\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    changset = require('../dataflow/changeset'),\n    selector = require('./events'),\n    expr = require('./expr'),\n    C = require('../util/constants');\n\nvar START = \"start\", MIDDLE = \"middle\", END = \"end\";\n\nmodule.exports = function(view) {\n  var model = view.model(),\n      spec  = model.defs().signals,\n      register = {}, nodes = {};\n\n  function scale(spec, value) {\n    var def = spec.scale,\n        name  = def.name || def.signal || def,\n        scope = def.scope ? model.signalRef(def.scope.signal) : null;\n\n    if(!scope || !scope.scale) {\n      scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n    }\n\n    var scale = scope.scale(name);\n    if(!scale) return value;\n    return def.invert ? scale.invert(value) : scale(value);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = new Node(model);\n    n.evaluate = function(input) {\n      if(!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = expr.eval(model, exp.fn, null, null, null, null, exp.signals);\n      if(spec.scale) val = scale(spec, val);\n      sig.value(val);\n      input.signals[sig.name()] = 1;\n      input.reflow = true;\n      return input;  \n    };\n    n.dependency(C.SIGNALS, selector.signal);\n    n.addListener(sig);\n    model.signal(selector.signal).addListener(n);\n  };\n\n  function event(sig, selector, exp, spec) {\n    var filters = selector.filters || [],\n        target = selector.target;\n\n    if(target) filters.push(\"i.\"+target.type+\"==\"+dl.str(target.value));\n\n    register[selector.event] = register[selector.event] || [];\n    register[selector.event].push({\n      signal: sig,\n      exp: exp,\n      filters: filters.map(function(f) { return expr(f); }),\n      spec: spec\n    });\n\n    nodes[selector.event] = nodes[selector.event] || new Node(model);\n    nodes[selector.event].addListener(sig);\n  };\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(), \n        trueFn = expr(\"true\"),\n        s = {};\n\n    s[START]  = model.signal(name + START,  false);\n    s[MIDDLE] = model.signal(name + MIDDLE, false);\n    s[END]    = model.signal(name + END,    false);\n\n    var router = new Node(model);\n    router.evaluate = function(input) {\n      if(s[START].value() === true && s[END].value() === false) {\n        // TODO: Expand selector syntax to allow start/end signals into stream.\n        // Until then, prevent old middles entering stream on new start.\n        if(input.signals[name+START]) return model.doNotPropagate;\n\n        sig.value(s[MIDDLE].value());\n        input.signals[name] = 1;\n        return input;\n      }\n\n      if(s[END].value() === true) {\n        s[START].value(false);\n        s[END].value(false);\n      }\n\n      return model.doNotPropagate;\n    };\n    router.addListener(sig);\n\n    [START, MIDDLE, END].forEach(function(x) {\n      var val = (x == MIDDLE) ? exp : trueFn,\n          sp = (x == MIDDLE) ? spec : {};\n\n      if(selector[x].event) event(s[x], selector[x], val, sp);\n      else if(selector[x].signal) signal(s[x], selector[x], val, sp);\n      else if(selector[x].stream) mergedStream(s[x], selector[x].stream, val, sp);\n      s[x].addListener(router);\n    });\n  };\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if(s.event)       event(sig, s, exp, spec);\n      else if(s.signal) signal(sig, s, exp, spec);\n      else if(s.start)  orderedStream(sig, s, exp, spec);\n      else if(s.stream) mergedStream(sig, s.stream, exp, spec);\n    });\n  };\n\n  (spec || []).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if(sig.expr) return;  // Cannot have an expr and stream definition.\n\n    (sig.streams || []).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse. \n\n  // TODO: Filters, time intervals, target selectors\n  dl.keys(register).forEach(function(r) {\n    var handlers = register[r], \n        node = nodes[r];\n\n    view.on(r, function(evt, item) {\n      var cs = changset.create(null, true),\n          pad = view.padding(),\n          filtered = false,\n          val, h, i, m, d;\n\n      evt.preventDefault(); // Stop text selection\n      m = d3.mouse((d3.event=evt, view._el)); // Relative position within container\n      item = item||{};\n      d = item.datum||{};\n      var p = {x: m[0] - pad.left, y: m[1] - pad.top};\n\n      for(i = 0; i < handlers.length; i++) {\n        h = handlers[i];\n        filtered = h.filters.some(function(f) {\n          return !expr.eval(model, f.fn, d, evt, item, p, f.signals);\n        });\n        if(filtered) continue;\n        \n        val = expr.eval(model, h.exp.fn, d, evt, item, p, h.exp.signals); \n        if(h.spec.scale) val = scale(h.spec, val, item);\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n\n      model.propagate(cs, node);\n    });\n  })\n};","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nmodule.exports = function parseTransforms(model, def) {\n  var tx = new transforms[def.type](model);\n  \n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    if(k === 'transform' && def.type === 'facet') return;\n    (tx[k]).set(tx, def[k]);\n  });\n\n  return tx;\n};","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    marks = require('./marks');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._canvas = d3.select(el).select(\"canvas.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  \n  // add event listeners\n  var canvas = this._canvas, that = this;\n  events.forEach(function(type) {\n    canvas.addEventListener(type, function(evt) {\n      prototype[type].call(that, evt);\n    });\n  });\n  \n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// setup events\nvar events = [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"wheel\",\n  \"keydown\",\n  \"keypress\",\n  \"keyup\",\n  \"mousewheel\",\n  \"touchstart\"\n];\nevents.forEach(function(type) {\n  prototype[type] = function(evt) {\n    this.fire(type, evt);\n  };\n});\nevents.push(\"mousemove\");\nevents.push(\"mouseout\");\nevents.push(\"touchmove\");\nevents.push(\"touchend\");\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nprototype.touchmove = prototype.mousemove = function(evt) {\n  var pad = this._padding,\n      b = evt.target.getBoundingClientRect(),\n      x = evt.clientX - b.left,\n      y = evt.clientY - b.top,\n      a = this._active,\n      p = this.pick(this._model.scene(), x, y, x-pad.left, y-pad.top);\n\n  if (p === a) {\n    this.fire(\"mousemove\", evt);\n    if(evt.type == \"touchmove\") this.fire(\"touchmove\", evt);\n    return;\n  } else if (a) {\n    this.fire(\"mouseout\", evt);\n    if(evt.type == \"touchend\") this.fire(\"touchend\", evt);\n  }\n  this._active = p;\n  if (p) {\n    this.fire(\"mouseover\", evt);\n    if(evt.type == \"touchstart\") this.fire(\"touchstart\", evt);\n  }\n};\n\nprototype.touchend = prototype.mouseout = function(evt) {\n  if (this._active) {\n    this.fire(\"mouseout\", evt);\n    this.fire(\"touchend\", evt);\n  }\n  this._active = null;\n};\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire(\"mousewheel\", evt);\n};\n\n// fire an event\nprototype.fire = function(type, evt) {\n  var a = this._active,\n      h = this._handlers[type];\n  if (h) {\n    for (var i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers;\n  h = h[name] || (h[name] = []);\n  h.push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name];\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext(\"2d\");\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      marktype = scene.marktype,\n      picker = marks.pick[marktype];\n  return picker.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    Bounds = require('../../core/Bounds'),\n    config = require('../../util/config'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._ctx = null;\n  this._el = null;\n  this._imgload = 0;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n  \n  if (!el) return this; // early exit if no DOM element\n\n  // select canvas element\n  var canvas = d3.select(el)\n    .selectAll(\"canvas.marks\")\n    .data([1]);\n  \n  // create new canvas element if needed\n  canvas.enter()\n    .append(\"canvas\")\n    .attr(\"class\", \"marks\");\n  \n  // remove extraneous canvas if needed\n  canvas.exit().remove();\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  if (this._el) {\n    var canvas = d3.select(this._el).select(\"canvas.marks\");\n\n    // initialize canvas attributes\n    canvas\n      .attr(\"width\", width + pad.left + pad.right)\n      .attr(\"height\", height + pad.top + pad.bottom);\n\n    // get the canvas graphics context\n    var s;\n    this._ctx = canvas.node().getContext(\"2d\");\n    this._ctx._ratio = (s = scaleCanvas(canvas.node(), this._ctx) || 1);\n    this._ctx.setTransform(s, 0, 0, s, s*pad.left, s*pad.top);\n  }\n  \n  initializeLineDash(this._ctx);\n  return this;\n};\n\nfunction scaleCanvas(canvas, ctx) {\n  // get canvas pixel data\n  var devicePixelRatio = window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    var w = canvas.width, h = canvas.height;\n    // set actual and visible canvas size\n    canvas.setAttribute(\"width\", w * ratio);\n    canvas.setAttribute(\"height\", h * ratio);\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  return ratio;\n}\n\nfunction initializeLineDash(ctx) {\n  if (ctx.vgLineDash) return; // already set\n\n  var NODASH = [];\n  if (ctx.setLineDash) {\n    ctx.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    ctx.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (ctx.webkitLineDash !== undefined) {\n  \tctx.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    ctx.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (ctx.mozDash !== undefined) {\n    ctx.vgLineDash = function(dash) { this.mozDash = dash; };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  } else {\n    ctx.vgLineDash = function(dash) { /* unsupported */ };\n    ctx.vgLineDashOffset = function(off) { /* unsupported */ };\n  }\n}\n\nprototype.context = function(ctx) {\n  if (ctx) { this._ctx = ctx; return this; }\n  else return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.pendingImages = function() {\n  return this._imgload;\n};\n\nfunction translatedBounds(item, bounds) {\n  var b = new Bounds(bounds);\n  while ((item = item.mark.group) != null) {\n    b.translate(item.x || 0, item.y || 0);\n  }\n  return b;\n}\n  \nfunction getBounds(items) {\n  return !items ? null :\n    dl.array(items).reduce(function(b, item) {\n      return b.union(translatedBounds(item, item.bounds))\n              .union(translatedBounds(item, item['bounds:prev']));\n    }, new Bounds());  \n}\n\nfunction setBounds(g, bounds) {\n  var bbox = null;\n  if (bounds) {\n    bbox = (new Bounds(bounds)).round();\n    g.beginPath();\n    g.rect(bbox.x1, bbox.y1, bbox.width(), bbox.height());\n    g.clip();\n  }\n  return bbox;\n}\n\nprototype.render = function(scene, items) {\n  var g = this._ctx,\n      pad = this._padding,\n      w = this._width + pad.left + pad.right,\n      h = this._height + pad.top + pad.bottom,\n      bb = null, bb2;\n\n  // setup\n  this._scene = scene;\n  g.save();\n  bb = setBounds(g, getBounds(items));\n  g.clearRect(-pad.left, -pad.top, w, h);\n\n  // render\n  this.draw(g, scene, bb);\n\n  // render again to handle possible bounds change\n  if (items) {\n    g.restore();\n    g.save();\n    bb2 = setBounds(g, getBounds(items));\n    if (!bb.encloses(bb2)) {\n      g.clearRect(-pad.left, -pad.top, w, h);\n      this.draw(g, scene, bb2);\n    }\n  }\n  \n  // takedown\n  g.restore();\n  this._scene = null;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, bounds);\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 50);\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = renderer._scene,\n      image = null, url;\n\n  renderer._imgload += 1;\n  if (dl.isNode) {\n    image = new ((typeof window !== \"undefined\" ? window.canvas : typeof global !== \"undefined\" ? global.canvas : null).Image)();\n    dl.load(dl.extend({url: uri}, config.load), function(err, data) {\n      if (err) { dl.error(err); return; }\n      image.src = data;\n      image.loaded = true;\n      renderer._imgload -= 1;\n    });\n  } else {\n    image = new Image();\n    url = config.baseURL + uri;\n    image.onload = function() {\n      image.loaded = true;\n      renderer._imgload -= 1;\n      renderer.renderAsync(scene);\n    };\n    image.src = url;\n  }\n\n  return image;\n};\n\nmodule.exports = renderer;","module.exports = {\n  Handler:  require('./Handler'),\n  Renderer: require('./Renderer')\n};","var Bounds = require('../../core/Bounds'),\n    boundsCalc = require('../../util/bounds'),\n    config = require('../../util/config'),\n    path = require('./path');\n\nvar parsePath = path.parse,\n    renderPath = path.render,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    tmpBounds = new Bounds();\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\n// path generators\n\nfunction arcPath(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - Math.PI/2,\n      ea = (o.endAngle || 0) - Math.PI/2;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nfunction areaPath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.area(items)));\n  renderPath(g, p);\n}\n\nfunction linePath(g, items) {\n  var o = items[0],\n      m = o.mark,\n      p = m.pathCache || (m.pathCache = parsePath(path.line(items)));\n  renderPath(g, p);\n}\n\nfunction pathPath(g, o) {\n  if (o.path == null) return;\n  var p = o.pathCache || (o.pathCache = parsePath(o.path));\n  return renderPath(g, p, o.x, o.y);\n}\n\nfunction symbolPath(g, o) {\n  g.beginPath();\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  if (o.shape == null || o.shape === \"circle\") {\n    r = Math.sqrt(size/Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n  }\n  g.closePath();\n}\n\nfunction lineStroke(g, items) {\n  var o = items[0],\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  linePath(g, items);\n}\n\nfunction ruleStroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : config.render.lineWidth;\n  g.lineCap   = lc != null ? lc : config.render.lineCap;\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\n// drawing functions\n\nfunction drawPathOne(path, g, o, items) {\n  var fill = o.fill, stroke = o.stroke, opac, lc, lw;\n\n  path(g, items);\n\n  opac = o.opacity == null ? 1 : o.opacity;\n  if (opac == 0 || !fill && !stroke) return;\n\n  if (fill) {\n    g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n    g.fillStyle = color(g, o, fill);\n    g.fill();\n  }\n\n  if (stroke) {\n    lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n    if (lw > 0) {\n      g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n      g.strokeStyle = color(g, o, stroke);\n      g.lineWidth = lw;\n      g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n      g.vgLineDash(o.strokeDash || null);\n      g.vgLineDashOffset(o.strokeDashOffset || 0);\n      g.stroke();\n    }\n  }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (bounds && !bounds.intersects(item.bounds))\n      continue; // bounds check\n    drawPathOne(path, g, item, item);\n  }\n}\n\nfunction drawRect(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lc, lw, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillRect(x, y, w, h);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.strokeRect(x, y, w, h);\n      }\n    }\n  }\n}\n\nfunction drawRule(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, stroke, opac, lc, lw, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n    \n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : config.render.lineWidth;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(g, o, stroke);\n        g.lineWidth = lw;\n        g.lineCap = (lc = o.strokeCap) != null ? lc : config.render.lineCap;\n        g.vgLineDash(o.strokeDash || null);\n        g.vgLineDashOffset(o.strokeDashOffset || 0);\n        g.beginPath();\n        g.moveTo(x1, y1);\n        g.lineTo(x2, y2);\n        g.stroke();\n      }\n    }\n  }\n}\n\nfunction drawImage(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x, y, w, h, opac;\n    w = o.width || (o.image && o.image.width) || 0;\n    h = o.height || (o.image && o.image.height) || 0;\n    x = (o.x||0) - (o.align === \"center\"\n      ? w/2 : (o.align === \"right\" ? w : 0));\n    y = (o.y||0) - (o.baseline === \"middle\"\n      ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nfunction drawText(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items,\n      o, fill, stroke, opac, lw, x, y, r, t;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    g.font = fontString(o);\n    g.textAlign = o.align || \"left\";\n    g.textBaseline = o.baseline || \"alphabetic\";\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac == 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    if (r = o.radius) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = o.dx || 0;\n      y = o.dy || 0;\n    } else {\n      x += (o.dx || 0);\n      y += (o.dy || 0);\n    }\n\n    if (fill = o.fill) {\n      g.globalAlpha = opac * (o.fillOpacity==null ? 1 : o.fillOpacity);\n      g.fillStyle = color(g, o, fill);\n      g.fillText(o.text, x, y);\n    }\n\n    if (stroke = o.stroke) {\n      lw = (lw = o.strokeWidth) != null ? lw : 1;\n      if (lw > 0) {\n        g.globalAlpha = opac * (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n        g.strokeStyle = color(o, stroke);\n        g.lineWidth = lw;\n        g.strokeText(o.text, x, y);\n      }\n    }\n\n    if (o.angle) g.restore();\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  }\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (bounds && !bounds.intersects(scene.items[0].bounds))\n      return; // bounds check\n    drawPathOne(pathFunc, g, scene.items[0], scene.items);\n  }\n}\n\nfunction drawGroup(g, scene, bounds) {\n  if (!scene.items.length) return;\n  var items = scene.items, group, axes, legends,\n      renderer = this, gx, gy, gb, i, n, j, m;\n\n  drawRect(g, scene, bounds);\n\n  for (i=0, n=items.length; i<n; ++i) {\n    group = items[i];\n    axes = group.axisItems || [];\n    legends = group.legendItems || [];\n    gx = group.x || 0;\n    gy = group.y || 0;\n\n    // render group contents\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, group.width || 0, group.height || 0);\n      g.clip();\n    }\n    \n    if (bounds) bounds.translate(-gx, -gy);\n    \n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=group.items.length; j<m; ++j) {\n      renderer.draw(g, group.items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n    \n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction color(g, o, value) {\n  return (value.id)\n    ? gradient(g, value, o.bounds)\n    : value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\n// hit testing\n\nfunction pickGroup(g, scene, x, y, gx, gy) {\n  if (scene.items.length === 0 ||\n      scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return false;\n  }\n  var items = scene.items, subscene, group, hit, dx, dy,\n      handler = this, i, j;\n\n  for (i=items.length; --i>=0;) {\n    group = items[i];\n    dx = group.x || 0;\n    dy = group.y || 0;\n\n    g.save();\n    g.translate(dx, dy);\n    for (j=group.items.length; --j >= 0;) {\n      subscene = group.items[j];\n      if (subscene.interactive === false) continue;\n      hit = handler.pick(subscene, x, y, gx-dx, gy-dy);\n      if (hit) {\n        g.restore();\n        return hit;\n      }\n    }\n    g.restore();\n  }\n\n  return scene.interactive\n    ? pickAll(hitTests.group, g, scene, x, y, gx, gy)\n    : false;\n}\n\nfunction pickAll(test, g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var o, b, i;\n\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n\n  for (i=scene.items.length; --i >= 0;) {\n    o = scene.items[i]; b = o.bounds;\n    // first hit test against bounding box\n    if ((b && !b.contains(gx, gy)) || !b) continue;\n    // if in bounding box, perform more careful test\n    if (test(g, o, x, y, gx, gy)) return o;\n  }\n  return false;\n}\n\nfunction pickArea(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.area(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pickLine(g, scene, x, y, gx, gy) {\n  if (!scene.items.length) return false;\n  var items = scene.items,\n      o, b, i, di, dd, od, dx, dy;\n\n  b = items[0].bounds;\n  if (b && !b.contains(gx, gy)) return false;\n  if (g._ratio !== 1) {\n    x *= g._ratio;\n    y *= g._ratio;\n  }\n  if (!hitTests.line(g, items, x, y)) return false;\n  return items[0];\n}\n\nfunction pick(test) {\n  return function (g, scene, x, y, gx, gy) {\n    return pickAll(test, g, scene, x, y, gx, gy);\n  };\n}\n\nfunction textHit(g, o, x, y, gx, gy) {\n  if (!o.fontSize) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  var b = boundsCalc.text(o, tmpBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      x = o.x,\n      y = o.y,\n      px = cos*gx - sin*gy + (x - x*cos + y*sin),\n      py = sin*gx + cos*gy + (y - x*sin - y*cos);\n\n  return b.contains(px, py);\n}\n\nvar hitTests = {\n  text:   textHit,\n  rect:   function(g,o,x,y) { return true; }, // bounds test is sufficient\n  image:  function(g,o,x,y) { return true; }, // bounds test is sufficient\n  group:  function(g,o,x,y) { return o.fill || o.stroke; },\n  rule:   function(g,o,x,y) {\n            if (!g.isPointInStroke) return false;\n            ruleStroke(g,o); return g.isPointInStroke(x,y);\n          },\n  line:   function(g,s,x,y) {\n            if (!g.isPointInStroke) return false;\n            lineStroke(g,s); return g.isPointInStroke(x,y);\n          },\n  arc:    function(g,o,x,y) { arcPath(g,o);  return g.isPointInPath(x,y); },\n  area:   function(g,s,x,y) { areaPath(g,s); return g.isPointInPath(x,y); },\n  path:   function(g,o,x,y) { pathPath(g,o); return g.isPointInPath(x,y); },\n  symbol: function(g,o,x,y) { symbolPath(g,o); return g.isPointInPath(x,y); }\n};\n\nmodule.exports = {\n  draw: {\n    group:   drawGroup,\n    area:    drawOne(areaPath),\n    line:    drawOne(linePath),\n    arc:     drawAll(arcPath),\n    path:    drawAll(pathPath),\n    symbol:  drawAll(symbolPath),\n    rect:    drawRect,\n    rule:    drawRule,\n    text:    drawText,\n    image:   drawImage,\n    drawOne: drawOne, // expose for extensibility\n    drawAll: drawAll  // expose for extensibility\n  },\n  pick: {\n    group:   pickGroup,\n    area:    pickArea,\n    line:    pickLine,\n    arc:     pick(hitTests.arc),\n    path:    pick(hitTests.path),\n    symbol:  pick(hitTests.symbol),\n    rect:    pick(hitTests.rect),\n    rule:    pick(hitTests.rule),\n    text:    pick(hitTests.text),\n    image:   pick(hitTests.image),\n    pickAll: pickAll  // expose for extensibility\n  }\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../../core/Bounds');\n\n// Path parsing and rendering code taken from fabric.js -- Thanks!\nvar cmdLength = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    re = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)-/g, /\\s|,|###/];\n\nfunction parse(path) {\n  var result = [],\n      currentPath,\n      chunks,\n      parsed;\n\n  // First, break path into command sequence\n  path = path.slice().replace(re[0], '###$1').split(re[1]).slice(1);\n\n  // Next, parse each command in turn\n  for (var i=0, j, chunksParsed, len=path.length; i<len; i++) {\n    currentPath = path[i];\n    chunks = currentPath.slice(1).trim().replace(re[2],'$1###-').split(re[3]);\n    chunksParsed = [currentPath.charAt(0)];\n\n    for (var j = 0, jlen = chunks.length; j < jlen; j++) {\n      parsed = parseFloat(chunks[j]);\n      if (!isNaN(parsed)) {\n        chunksParsed.push(parsed);\n      }\n    }\n\n    var command = chunksParsed[0].toLowerCase(),\n        commandLength = cmdLength[command];\n\n    if (chunksParsed.length - 1 > commandLength) {\n      for (var k = 1, klen = chunksParsed.length; k < klen; k += commandLength) {\n        result.push([ chunksParsed[0] ].concat(chunksParsed.slice(k, k + commandLength)));\n      }\n    }\n    else {\n      result.push(chunksParsed);\n    }\n  }\n\n  return result;\n}\n\nfunction drawArc(g, x, y, coords, bounds, l, t) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    g.bezierCurveTo.apply(g, bez);\n    bounds.add(bez[0]-l, bez[1]-t);\n    bounds.add(bez[2]-l, bez[3]-t);\n    bounds.add(bez[4]-l, bez[5]-t);\n  }\n}\n\nfunction boundArc(x, y, coords, bounds) {\n  var rx = coords[0];\n  var ry = coords[1];\n  var rot = coords[2];\n  var large = coords[3];\n  var sweep = coords[4];\n  var ex = coords[5];\n  var ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  for (var i=0; i<segs.length; i++) {\n    var bez = segmentToBezier.apply(null, segs[i]);\n    bounds.add(bez[0], bez[1]);\n    bounds.add(bez[2], bez[3]);\n    bounds.add(bez[4], bez[5]);\n  }\n}\n\nvar arcToSegmentsCache = { },\n    segmentToBezierCache = { },\n    join = Array.prototype.join,\n    argsStr;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  argsStr = join.call(arguments);\n  if (arcToSegmentsCache[argsStr]) {\n    return arcToSegmentsCache[argsStr];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep == 1){\n    th_arc += 2*Math.PI;\n  } else if (th_arc > 0 && sweep == 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segments; i++) {\n    var th2 = th0 + i * th_arc / segments;\n    var th3 = th0 + (i+1) * th_arc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (arcToSegmentsCache[argsStr] = result);\n}\n\nfunction segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n  argsStr = join.call(arguments);\n  if (segmentToBezierCache[argsStr]) {\n    return segmentToBezierCache[argsStr];\n  }\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (segmentToBezierCache[argsStr] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nfunction render(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY,\n      bounds = new Bounds();\n  if (l == undefined) l = 0;\n  if (t == undefined) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ], bounds, l, t);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ], bounds, l, t);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n  return bounds.translate(l, t);\n}\n\nfunction bounds(path, bounds) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        bounds.add(x, y);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        bounds.add(x, y);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(x, y);\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        bounds.add(controlX, controlY);\n        bounds.add(x + current[1], y + current[2]);\n        bounds.add(tempX, tempY);\n\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        x = tempX;\n        y = tempY;\n        bounds.add(current[1], current[2]);\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        // set control point to 2nd one of this command\n        // \"... the first control point is assumed to be the reflection of the second control point on the previous command relative to the current point.\"\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n\n        x = tempX;\n        y = tempY;\n        bounds.add(controlX, controlY);\n        bounds.add(tempX, tempY);\n        break;\n\n      case 'a':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x,\n          current[7] + y\n        ], bounds);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        boundArc(x, y, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n          current[7]\n        ], bounds);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        break;\n    }\n    previous = current;\n  }\n  return bounds;\n}\n\nfunction area(items) {\n  var o = items[0];\n  var area = d3.svg.area()\n    .x(function(d) { return d.x; })\n    .y1(function(d) { return d.y; })\n    .y0(function(d) { return d.y + d.height; });\n  if (o.interpolate) area.interpolate(o.interpolate);\n  if (o.tension != null) area.tension(o.tension);\n  return area(items);\n}\n\nfunction line(items) {\n  var o = items[0];\n  var line = d3.svg.line()\n   .x(function(d) { return d.x; })\n   .y(function(d) { return d.y; });\n  if (o.interpolate) line.interpolate(o.interpolate);\n  if (o.tension != null) line.tension(o.tension);\n  return line(items);\n}\n\nmodule.exports = {\n  parse:  parse,\n  render: render,\n  bounds: bounds,\n  area:   area,\n  line:   line\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config'),\n    SVGBuilder = require('./svg');\n\nvar renderer = function() {\n  this._builder = null;\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._builder = new SVGBuilder();\n  return this.resize(width, height, pad);\n}\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  this._autopad = dl.isString(this._padding) ? 1 : 0;\n\n  var w = this._width, h = this._height, pad = this._padding;\n  \n  // (re-)configure builder size\n  this._builder.initialize(null, w, h, pad);\n\n  return this;\n};\n\nprototype.render = function(scene, items) {\n  // headless always draws the entire scene, ignoring items\n  this._builder.render(scene);\n  return this;\n};\n\nprototype.svg = function() {\n  return this._builder.svg();\n};\n\nmodule.exports = renderer;\n","module.exports = {\n  Renderer: require('./Renderer')\n};\n","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../../util/config');\n\nvar renderer = function() {\n  this._gid = 0; // group id counter for d3 dom compat\n  this._text = {\n    head: \"\",\n    root: \"\",\n    foot: \"\",\n    defs: \"\",\n    body: \"\"\n  };\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nfunction open(tag, attr, raw) {\n  var s = \"<\" + tag;\n  if (attr) {\n    for (var key in attr) {\n      var val = attr[key];\n      if (val != null) {\n        s += \" \" + key + '=\"' + val + '\"';\n      }\n    }\n  }\n  if (raw) s += \" \" + raw;\n  return s + \">\";\n}\n\nfunction close(tag) {\n  return \"</\" + tag + \">\";\n}\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, w, h, pad) {\n  var t = this._text;\n\n  t.head = open('svg', {\n    \"class\": 'marks',\n    width: w + pad.left + pad.right,\n    height: h + pad.top + pad.bottom,\n  }, config.svgNamespace);\n\n  t.root = open('g', {\n    transform: 'translate(' + pad.left + ',' + pad.top + ')'\n  });\n\n  t.foot = close('g') + close('svg');\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = \"\", grad, clip, i, j;\n\n  for (i=0; i<dgrad.length; ++i) {\n    var id = dgrad[i],\n        def = all.gradient[id],\n        stops = def.stops;\n\n    defs += open(\"linearGradient\", {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (j=0; j<stops.length; ++j) {\n      defs += open(\"stop\", {\n        offset: stops[j].offset,\n        \"stop-color\": stops[j].color\n      }) + close(\"stop\");\n    }\n    \n    defs += close(\"linearGradient\");\n  }\n  \n  for (i=0; i<dclip.length; ++i) {\n    var id = dclip[i],\n        def = all.clipping[id];\n\n    defs += open(\"clipPath\", {id: id});\n\n    defs += open(\"rect\", {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + close(\"rect\");\n\n    defs += close(\"clipPath\");\n  }\n  \n  if (defs.length > 0) {\n    return open(\"defs\") + defs + close(\"defs\");\n  } else {\n    return \"\"\n  }\n  return defs;\n};\n\nprototype.render = function(scene) {\n  this._gid = 0; // reset the group counter\n  this._text.body = this.draw(scene);\n  this._text.defs = this.buildDefs();\n};\n\nprototype.draw = function(scene) {\n  var meta = MARKS[scene.marktype];\n  if (!meta) {\n    return; // no known marktype (e.g., an interactor)\n  }\n  var tag  = meta[0],\n      attr = meta[1],\n      nest = meta[2] || false,\n      data = nest ? [scene.items] : scene.items,\n      defs = this._defs,\n      svg = \"\", i, sty;\n\n  var cls = cssClass(scene.def);\n\n  // style literals to exactly match the d3 dom\n  var styl = null;\n  if (cls === 'type-rule' || cls === 'type-path')\n    styl = 'style=\"pointer-events: none;\"';\n  else if (cls !== 'type-group')\n    styl = 'style=\"\"';\n\n  svg += open('g', {\n    'id': 'g' + ++this._gid, // d3 dom compat\n    'class': cssClass(scene.def)\n  }, styl);\n\n  for (i=0; i<data.length; ++i) {\n    var sty = tag === 'g' ? null : style(data[i], tag, defs);\n    svg += open(tag, attr(data[i], defs), sty);\n    if (tag === 'text') svg += escape_text(data[i].text);\n    if (tag === 'g') svg += this.drawGroup(data[i]);\n    svg += close(tag);\n  }\n\n  return svg + close('g');\n};\n\nfunction escape_text(s) {\n  s = (s == null ? \"\" : String(s));\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nfunction escape_font(s) {\n  return String(s).replace(/\\\"/g, \"'\");\n}\n\nvar MARKS = {\n  group:  ['g', group],\n  area:   ['path', area, true],\n  line:   ['path', line, true],\n  arc:    ['path', arc],\n  path:   ['path', path],\n  symbol: ['path', symbol],\n  rect:   ['rect', rect],\n  rule:   ['line', rule],\n  text:   ['text', text],\n  image:  ['image', image]\n};\n\nprototype.drawGroup = function(scene) {\n  var svg = \"\",\n      axes = scene.axisItems || [],\n      items = scene.items,\n      legends = scene.legendItems || [],\n      i, j, m;\n\n  svg += group_bg(scene);\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer === \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    svg += this.draw(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].def.layer !== \"back\") {\n      svg += this.draw(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    svg += this.draw(legends[j]);\n  }\n\n  return svg;\n};\n\n///\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n\n  var styl = o.mark.interactive === false ?\n    'style=\"pointer-events: none;\"' : \n    'style=\"\"';\n\n  return open('rect', {\n    'class': 'background'\n  }, styl) + close('rect');\n}\n\nfunction group(o, defs) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      attr = {transform: \"translate(\"+x+\",\"+y+\")\"};\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    defs.clipping[id] = c;\n    attr[\"clip-path\"] = \"url(#\"+id+\")\";\n  }\n\n  return attr;\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: arc_path(o)\n  };\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0],\n      path = o.orient === \"horizontal\" ? area_path_h : area_path_v;\n  path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: path(items)};\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  return {d: line_path(items)};\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: o.path\n  };\n}\n\nfunction rect(o) {\n  return {\n    x: o.x || 0,\n    y: o.y || 0,\n    width: o.width || 0,\n    height: o.height || 0\n  };\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: o.x2 != null ? o.x2 : x1,\n    y2: o.y2 != null ? o.y2 : y1\n  };\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  return {\n    transform: \"translate(\"+x+\",\"+y+\")\",\n    d: symbol_path(o)\n  };\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  return {\n    \"xlink:href\": url,\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  return {\n    x: x + dx,\n    y: y + dy,\n    'text-anchor': align,\n    transform: a ? \"rotate(\"+a+\" \"+x+\",\"+y+\")\" : null,\n    dy: base ? base : null\n  };\n}\n\n///\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return o.x + o.width || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n\nvar arc_path    = d3.svg.arc(),\n    area_path_v = d3.svg.area().x(x).y1(y).y0(yh),\n    area_path_h = d3.svg.area().y(y).x0(xw).x1(x),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\n\nvar styleProps = dl.keys(styles);\n\nfunction style(d, tag, defs) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return null;\n\n  var s = \"\";\n\n  if (tag === 'text') {\n    s += 'font: ' + fontString(o) + ';';\n  }\n  \n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") s += 'fill: none;';\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = \"url(\" + window.location.href + \"#\" + value.id + \")\";\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';'\n    }\n  }\n  \n  // not that we don't exclude blank styles for d3 dom compat\n  return 'style=\"'+s+'\"';\n}\n\nfunction fontString(o) {\n  var f = (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font && escape_font(o.font) || config.render.font);\n  return f;\n}\n\nmodule.exports = renderer;\n","var dl = require('datalib');\n\nvar handler = function(el, model) {\n  this._active = null;\n  this._handlers = {};\n  if (el) this.initialize(el);\n  if (model) this.model(model);\n};\n\nfunction svgHandler(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n\n    if (item) item = item.mark ? item : item[0];\n    handler.call(that._obj, evt, item);\n  };\n}\n\nfunction eventName(name) {\n  var i = name.indexOf(\".\");\n  return i < 0 ? name : name.slice(0,i);\n}\n\nvar prototype = handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = d3.select(el).node();\n  this._svg = d3.select(el).select(\"svg.marks\").node();\n  this._padding = pad;\n  this._obj = obj || null;\n  return this;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  this._model = model;\n  return this;\n};\n\nprototype.handlers = function() {\n  var h = this._handlers;\n  return dl.keys(h).reduce(function(a, k) {\n    return h[k].reduce(function(a, x) { return (a.push(x), a); }, a);\n  }, []);\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers,\n      dom = d3.select(this._svg).node();\n      \n  var x = {\n    type: type,\n    handler: handler,\n    svg: svgHandler.call(this, handler)\n  };\n  h = h[name] || (h[name] = []);\n  h.push(x);\n\n  dom.addEventListener(name, x.svg);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = eventName(type),\n      h = this._handlers[name],\n      dom = d3.select(this._svg).node();\n  if (!h) return;\n  for (var i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) {\n      dom.removeEventListener(name, h[i].svg);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = handler;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    marks = require('./marks');\n\nvar renderer = function() {\n  this._svg = null;\n  this._ctx = null;\n  this._el = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n};\n\nvar prototype = renderer.prototype;\n\nprototype.initialize = function(el, width, height, pad) {\n  this._el = el;\n\n  // remove any existing svg element\n  d3.select(el).select(\"svg.marks\").remove();\n\n  // create svg element and initialize attributes\n  this._svg = d3.select(el)\n    .append(\"svg\")\n    .attr(\"class\", \"marks\");\n  \n  // set the svg root group\n  this._ctx = this._svg.append(\"g\");\n  \n  return this.resize(width, height, pad);\n};\n\nprototype.resize = function(width, height, pad) {\n  this._width = width;\n  this._height = height;\n  this._padding = pad;\n  \n  this._svg\n    .attr(\"width\", width + pad.left + pad.right)\n    .attr(\"height\", height + pad.top + pad.bottom);\n    \n  this._ctx\n    .attr(\"transform\", \"translate(\"+pad.left+\",\"+pad.top+\")\");\n\n  return this;\n};\n\nprototype.context = function() {\n  return this._ctx;\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      all = this._defs,\n      dgrad = dl.keys(all.gradient),\n      dclip = dl.keys(all.clipping),\n      defs = svg.select(\"defs\"), grad, clip;\n\n  // get or create svg defs block\n  if (dgrad.length===0 && dclip.length==0) { defs.remove(); return; }\n  if (defs.empty()) defs = svg.insert(\"defs\", \":first-child\");\n  \n  grad = defs.selectAll(\"linearGradient\").data(dgrad, dl.identity);\n  grad.enter().append(\"linearGradient\").attr(\"id\", dl.identity);\n  grad.exit().remove();\n  grad.each(function(id) {\n    var def = all.gradient[id],\n        grd = d3.select(this);\n\n    // set gradient coordinates\n    grd.attr({x1: def.x1, x2: def.x2, y1: def.y1, y2: def.y2});\n\n    // set gradient stops\n    stop = grd.selectAll(\"stop\").data(def.stops);\n    stop.enter().append(\"stop\");\n    stop.exit().remove();\n    stop.attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });\n  });\n  \n  clip = defs.selectAll(\"clipPath\").data(dclip, dl.identity);\n  clip.enter().append(\"clipPath\").attr(\"id\", dl.identity);\n  clip.exit().remove();\n  clip.each(function(id) {\n    var def = all.clipping[id],\n        cr = d3.select(this).selectAll(\"rect\").data([1]);\n    cr.enter().append(\"rect\");\n    cr.attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", def.width)\n      .attr(\"height\", def.height);\n  });\n};\n\nprototype.render = function(scene, items) {\n  marks.current = this;\n\n  if (items) {\n    this.renderItems(dl.array(items));\n  } else {\n    this.draw(this._ctx, scene, -1);\n  }\n  this.updateDefs();\n\n delete marks.current;\n};\n\nprototype.renderItems = function(items) {\n  var item, node, type, nest, i, n;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    node = item._svg;\n    type = item.mark.marktype;\n\n    item = marks.nested[type] ? item.mark.items : item;\n    marks.update[type].call(node, item);\n    marks.style.call(node, item);\n  }\n}\n\nprototype.draw = function(ctx, scene, index) {\n  var marktype = scene.marktype,\n      renderer = marks.draw[marktype];\n  renderer.call(this, ctx, scene, index);\n};\n\nmodule.exports = renderer;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = require('../../util/config');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction yh(o)    { return o.y + o.height || 0; }\nfunction key(o)   { return o.key; }\nfunction size(o)  { return o.size==null ? 100 : o.size; }\nfunction shape(o) { return o.shape || \"circle\"; }\n    \nvar arc_path    = d3.svg.arc(),\n    area_path   = d3.svg.area().x(x).y1(y).y0(yh),\n    line_path   = d3.svg.line().x(x).y(y),\n    symbol_path = d3.svg.symbol().type(shape).size(size);\n\nvar mark_id = 0,\n    clip_id = 0;\n\nvar textAlign = {\n  \"left\":   \"start\",\n  \"center\": \"middle\",\n  \"right\":  \"end\"\n};\n\nvar styles = {\n  \"fill\":             \"fill\",\n  \"fillOpacity\":      \"fill-opacity\",\n  \"stroke\":           \"stroke\",\n  \"strokeWidth\":      \"stroke-width\",\n  \"strokeOpacity\":    \"stroke-opacity\",\n  \"strokeCap\":        \"stroke-linecap\",\n  \"strokeDash\":       \"stroke-dasharray\",\n  \"strokeDashOffset\": \"stroke-dashoffset\",\n  \"opacity\":          \"opacity\"\n};\nvar styleProps = dl.keys(styles);\n\nfunction style(d) {\n  var i, n, prop, name, value,\n      o = d.mark ? d : d.length ? d[0] : null;\n  if (o === null) return;\n\n  for (i=0, n=styleProps.length; i<n; ++i) {\n    prop = styleProps[i];\n    name = styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === \"fill\") this.style.setProperty(name, \"none\", null);\n      else this.style.removeProperty(name);\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        marks.current._defs.gradient[value.id] = value;\n        value = \"url(#\" + value.id + \")\";\n      }\n      this.style.setProperty(name, value+\"\", null);\n    }\n  }\n}\n\nfunction arc(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", arc_path(o));\n}\n\nfunction area(items) {\n  if (!items.length) return;\n  var o = items[0];\n  area_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", area_path(items));\n}\n\nfunction line(items) {\n  if (!items.length) return;\n  var o = items[0];\n  line_path\n    .interpolate(o.interpolate || \"linear\")\n    .tension(o.tension == null ? 0.7 : o.tension);\n  this.setAttribute(\"d\", line_path(items));\n}\n\nfunction path(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  if (o.path != null) this.setAttribute(\"d\", o.path);\n}\n\nfunction rect(o) {\n  this.setAttribute(\"x\", o.x || 0);\n  this.setAttribute(\"y\", o.y || 0);\n  this.setAttribute(\"width\", o.width || 0);\n  this.setAttribute(\"height\", o.height || 0);\n}\n\nfunction rule(o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0;\n  this.setAttribute(\"x1\", x1);\n  this.setAttribute(\"y1\", y1);\n  this.setAttribute(\"x2\", o.x2 != null ? o.x2 : x1);\n  this.setAttribute(\"y2\", o.y2 != null ? o.y2 : y1);\n}\n\nfunction symbol(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n  this.setAttribute(\"d\", symbol_path(o));\n}\n\nfunction image(o) {\n  var w = o.width || (o.image && o.image.width) || 0,\n      h = o.height || (o.image && o.image.height) || 0,\n      x = o.x - (o.align === \"center\"\n        ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = o.y - (o.baseline === \"middle\"\n        ? h/2 : (o.baseline === \"bottom\" ? h : 0)),\n      url = config.baseURL + o.url;\n  \n  this.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", url);\n  this.setAttribute(\"x\", x);\n  this.setAttribute(\"y\", y);\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n  \nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction text(o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      dx = o.dx || 0,\n      dy = o.dy || 0,\n      a = o.angle || 0,\n      r = o.radius || 0,\n      align = textAlign[o.align || \"left\"],\n      base = o.baseline===\"top\" ? \".9em\"\n           : o.baseline===\"middle\" ? \".35em\" : 0;\n\n  if (r) {\n    var t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  this.setAttribute(\"x\", x + dx);\n  this.setAttribute(\"y\", y + dy);\n  this.setAttribute(\"text-anchor\", align);\n  \n  if (a) this.setAttribute(\"transform\", \"rotate(\"+a+\" \"+x+\",\"+y+\")\");\n  else this.removeAttribute(\"transform\");\n  \n  if (base) this.setAttribute(\"dy\", base);\n  else this.removeAttribute(\"dy\");\n  \n  this.textContent = o.text;\n  this.style.setProperty(\"font\", fontString(o), null);\n}\n\nfunction group(o) {\n  var x = o.x || 0,\n      y = o.y || 0;\n  this.setAttribute(\"transform\", \"translate(\"+x+\",\"+y+\")\");\n\n  if (o.clip) {\n    var c = {width: o.width || 0, height: o.height || 0},\n        id = o.clip_id || (o.clip_id = \"clip\" + clip_id++);\n    marks.current._defs.clipping[id] = c;\n    this.setAttribute(\"clip-path\", \"url(#\"+id+\")\");\n  }\n}\n\nfunction group_bg(o) {\n  var w = o.width || 0,\n      h = o.height || 0;\n  this.setAttribute(\"width\", w);\n  this.setAttribute(\"height\", h);\n}\n\nfunction cssClass(def) {\n  var cls = \"type-\" + def.type;\n  if (def.name) cls += \" \" + def.name;\n  return cls;\n}\n\nfunction draw(tag, attr, nest) {\n  return function(g, scene, index) {\n    drawMark(g, scene, index, \"mark_\", tag, attr, nest);\n  };\n}\n\nfunction drawMark(g, scene, index, prefix, tag, attr, nest) {\n  var data = nest ? [scene.items] : scene.items,\n      evts = scene.interactive===false ? \"none\" : null,\n      grps = g.node().childNodes,\n      notG = (tag !== \"g\"),\n      p = (p = grps[index+1]) // +1 to skip group background rect\n        ? d3.select(p)\n        : g.append(\"g\")\n           .attr(\"id\", \"g\"+(++mark_id))\n           .attr(\"class\", cssClass(scene.def));\n\n  var id = p.attr(\"id\"),\n      s = \"#\" + id + \" > \" + tag,\n      m = p.selectAll(s).data(data),\n      e = m.enter().append(tag);\n\n  if (notG) {\n    p.style(\"pointer-events\", evts);\n    e.each(function(d) {\n      if (d.mark) d._svg = this;\n      else if (d.length) d[0]._svg = this;\n    });\n  } else {\n    e.append(\"rect\").attr(\"class\",\"background\").style(\"pointer-events\",evts);\n  }\n  \n  m.exit().remove();\n  m.each(attr);\n  if (notG) m.each(style);\n  else p.selectAll(s+\" > rect.background\").each(group_bg).each(style);\n  \n  return p;\n}\n\nfunction drawGroup(g, scene, index, prefix) {    \n  var p = drawMark(g, scene, index, prefix || \"group_\", \"g\", group),\n      c = p.node().childNodes, n = c.length, i, j, m;\n  \n  for (i=0; i<n; ++i) {\n    var items = c[i].__data__.items,\n        legends = c[i].__data__.legendItems || [],\n        axes = c[i].__data__.axisItems || [],\n        sel = d3.select(c[i]),\n        idx = 0;\n\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer === \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      this.draw(sel, items[j], idx++);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].def.layer !== \"back\") {\n        drawGroup.call(this, sel, axes[j], idx++, \"axis_\");\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      drawGroup.call(this, sel, legends[j], idx++, \"legend_\");\n    }\n  }\n}\n\nvar marks = module.exports = {\n  update: {\n    group:   rect,\n    area:    area,\n    line:    line,\n    arc:     arc,\n    path:    path,\n    symbol:  symbol,\n    rect:    rect,\n    rule:    rule,\n    text:    text,\n    image:   image\n  },\n  nested: {\n    \"area\": true,\n    \"line\": true\n  },\n  style: style,\n  draw: {\n    group:   drawGroup,\n    area:    draw(\"path\", area, true),\n    line:    draw(\"path\", line, true),\n    arc:     draw(\"path\", arc),\n    path:    draw(\"path\", path),\n    symbol:  draw(\"path\", symbol),\n    rect:    draw(\"rect\", rect),\n    rule:    draw(\"line\", rule),\n    text:    draw(\"text\", text),\n    image:   draw(\"image\", image),\n    draw:    draw // expose for extensibility\n  },\n  current: null\n};","var Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph).router(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"bounds\", this._mark.marktype]);\n\n  bounds.mark(this._mark);\n  if (this._mark.marktype === C.GROUP) \n    bounds.mark(this._mark, null, false);\n\n  input.reflow = true;\n  return input;\n};\n\nmodule.exports = Bounder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    Item  = require('./Item'),\n    parseData = require('../parse/data'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Builder() {    \n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n\n  this._revises = false;  // Should scenegraph items track _prev?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = !(def.interactive === false);\n  mark.items = [];\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if(def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain \n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== C.GROUP); \n  this._encoder = new Encoder(this._graph, this._mark);\n  this._bounder = new Bounder(this._graph, this._mark);\n\n  if(this._ds) { this._encoder.dependency(C.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(C.DATA, this._encoder.dependency(C.DATA));\n  this.dependency(C.SCALES, this._encoder.dependency(C.SCALES));\n  this.dependency(C.SIGNALS, this._encoder.dependency(C.SIGNALS));\n\n  return this;\n};\n\nproto.revises = function(p) {\n  if(!arguments.length) return this._revises;\n\n  // If we've not needed prev in the past, but a new inline ds needs it now\n  // ensure existing items have prev set.\n  if(!this._revises && p) {\n    this._items.forEach(function(d) { if(d._prev === undefined) d._prev = C.SENTINEL; });\n  }\n\n  this._revises = this._revises || p;\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here \n// because they need their group's data-joined context. \nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output;\n\n  if(geom) {\n    name = [\"vg\", this._parent_id, geom].join(\"_\");\n    spec = {\n      name: name,\n      transform: from.transform, \n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    name = [\"vg\", this._from, this._def.type, src.listeners(true).length].join(\"_\");\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n  var revises = this._ds.revises();\n\n  if(geom) {\n    sibling = this.sibling(geom).revises(revises);\n    if(sibling._isSuper) sibling.addListener(this._ds.listener());\n    else sibling._bounder.addListener(this._ds.listener());\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources. \n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    \n    var output = this._ds.source().revises(revises).last();\n        input  = changeset.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener());\n  }\n}\n\nproto.pipeline = function() {\n  return [this];\n};\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).addListener(builder);\n  });\n\n  if(this._parent) {\n    if(this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return this;\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if(!this._listeners.length) return this;\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  this._encoder.dependency(C.SCALES).forEach(function(s) {\n    builder._parent.scale(s).removeListener(builder);\n  });\n  return this;\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  debug(input, [\"building\", this._from, this._def.type]);\n\n  var output, fullUpdate, fcs, data;\n\n  if(this._ds) {\n    output = changeset.create(input);\n\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = dl.duplicate(output.data);\n    delete output.data[this._ds.name()];\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data = data;\n\n    // If a scale or signal in the update propset has been updated, \n    // send forward all items for reencoding if we do an early return.\n    if(fullUpdate) output.mod = this._mark.items.slice();\n\n    fcs = this._ds.last();\n    if(!fcs) {\n      output.reflow = true\n    } else if(fcs.stamp > this._stamp) {\n      output = joinDatasource.call(this, fcs, this._ds.values(), fullUpdate);\n    }\n  } else {\n    fullUpdate = this._encoder.reevaluate(input);\n    data = dl.isFunction(this._def.from) ? this._def.from() : [C.SENTINEL];\n    output = joinValues.call(this, input, data, fullUpdate);\n  }\n\n  output = this._graph.evaluate(output, this._encoder);\n  return this._isSuper ? this._graph.evaluate(output, this._bounder) : output;\n};\n\nfunction newItem() {\n  var prev = this._revises ? null : undefined,\n      item = tuple.ingest(new Item(this._mark), prev);\n\n  // For the root node's item\n  if(this._def.width)  tuple.set(item, \"width\",  this._def.width);\n  if(this._def.height) tuple.set(item, \"height\", this._def.height);\n  return item;\n};\n\nfunction join(data, keyf, next, output, prev, mod) {\n  var i, key, len, item, datum, enter;\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? C.ENTER : C.UPDATE;\n    item.datum = datum;\n    tuple.set(item, \"key\", key);\n    this._map[key] = item;\n    next.push(item);\n    if(enter) output.add.push(item);\n    else if(!mod || (mod && mod[datum._id])) output.mod.push(item);\n  }\n}\n\nfunction joinDatasource(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key || \"_id\"),\n      add = input.add, \n      mod = input.mod, \n      rem = input.rem,\n      next = [],\n      i, key, len, item, datum, enter;\n\n  // Build rems first, and put them at the head of the next items\n  // Then build the rest of the data values (which won't contain rem).\n  // This will preserve the sort order without needing anything extra.\n\n  for(i=0, len=rem.length; i<len; ++i) {\n    item = this._map[key = keyf(rem[i])];\n    item.status = C.EXIT;\n    next.push(item);\n    output.rem.push(item);\n    this._map[key] = null;\n  }\n\n  join.call(this, data, keyf, next, output, null, tuple.idMap(fullUpdate ? data : mod));\n\n  return (this._mark.items = next, output);\n}\n\nfunction joinValues(input, data, fullUpdate) {\n  var output = changeset.create(input),\n      keyf = keyFunction(this._def.key),\n      prev = this._mark.items || [],\n      next = [],\n      i, key, len, item, datum, enter;\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    item.status = C.EXIT;\n    if (keyf) this._map[item.key] = item;\n  }\n  \n  join.call(this, data, keyf, next, output, prev, fullUpdate ? tuple.idMap(data) : null);\n\n  for (i=0, len=prev.length; i<len; ++i) {\n    item = prev[i];\n    if (item.status === C.EXIT) {\n      tuple.set(item, \"key\", keyf ? item.key : this._items.length);\n      next.splice(0, 0, item);  // Keep item around for \"exit\" transition.\n      output.rem.push(item);\n    }\n  }\n  \n  return (this._mark.items = next, output);\n};\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s=\"\", i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += \"|\";\n      s += String(f[i](d));\n    }\n    return s;\n  }\n};\n\nmodule.exports = Builder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    bounds = require('../util/bounds'),\n    C = require('../util/constants'),\n    debug = require('../util/debug'),\n    EMPTY = {};\n\nfunction Encoder(graph, mark) {\n  var props = mark.def.properties || {},\n      update = props.update;\n\n  Node.prototype.init.call(this, graph)\n\n  this._mark  = mark;\n\n  if(update) {\n    this.dependency(C.DATA, update.data);\n    this.dependency(C.SCALES, update.scales);\n    this.dependency(C.SIGNALS, update.signals);\n    this.dependency(C.FIELDS, update.fields);\n  }\n\n  return this;\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  debug(input, [\"encoding\", this._mark.def.type]);\n  var graph = this._graph,\n      items = this._mark.items,\n      props = this._mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      preds  = this._graph.predicates(),\n      sg = graph.signalValues(),  // For expediency, get all signal values\n      db = graph.dataValues(), \n      req = input.request,\n      i, len, item, prop;\n\n  if(req) {\n    if(prop = props[req]) {\n      for(i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  // Items marked for removal are at the head of items. Process them first.\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    if(exit)   encode.call(this, exit,   item, input.trans, db, sg, preds); \n    if(input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if(!input.trans) item.remove();\n  }\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if(enter)  encode.call(this, enter,  item, input.trans, db, sg, preds);\n    if(update) encode.call(this, update, item, input.trans, db, sg, preds);\n    item.status = C.UPDATE;\n  }\n\n  if(update) {\n    for(i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds);\n    }\n  }\n\n  return input;\n};\n\nfunction encode(prop, item, trans, db, sg, preds) {\n  var enc = prop.encode;\n  enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n}\n\n// If a specified property set called, or update property set \n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var props = this._mark.def.properties || {},\n      update = props.update;\n\n  return pulse.request || \n    Node.prototype.reevaluate.call(this, pulse) || \n    (update ? update.reflow : false);\n};\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items) {\n  items = dl.array(items);\n  var preds = graph.predicates(), \n      db = graph.dataValues(),\n      sg = graph.signalValues(),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds);\n      bounds.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;","var dl = require('datalib'),\n    Node = require('../dataflow/Node'),\n    Collector = require('../dataflow/Collector'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  var builder = this;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) { \n    s = builder.scale(s.name, new Scale(graph, s, builder));\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    return (acc[x.scale] = 1, acc);\n  }, {});\n  this._recursor.dependency(C.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function(input) {\n  var output = Builder.prototype.evaluate.apply(this, arguments),\n      builder = this;\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    })\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for(; i<len; ++i) {\n    child = children[i];\n    if(child.type == C.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = this._def.marks && this._def.marks.length > 0,\n      hasAxes = this._def.axes && this._def.axes.length > 0,\n      i, len, group, pipeline, def, inline = false;\n\n  for(i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if(hasMarks) buildMarks.call(this, input, group);\n    if(hasAxes)  buildAxes.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node, \n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== C.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined); \n      inline = inline && (pipeline[pipeline.length-1].listeners().length == 1); // Reactive geom\n      c.inline = inline;\n\n      if(inline) c.builder.evaluate(input);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  for(i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n    // Remove temporary connection for marks that draw from a source\n    if(hasMarks) {\n      builder._children[group._id].forEach(function(c) {\n        if(c.type == C.MARK && !c.inline && builder._graph.data(c.from) !== undefined ) {\n          builder._recursor.removeListener(c.builder);\n        }\n      });\n    }\n\n    // Update axes data defs\n    if(hasAxes) {\n      parseAxes(builder._graph, builder._def.axes, group.axes, group);\n      group.axes.forEach(function(a, i) { a.def() });\n    }      \n  }\n\n  for(i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(function(c) { \n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect(); \n    });\n    delete builder._children[group._id];\n  }\n\n  return input;\n};\n\nfunction scale(name, scale) {\n  var group = this;\n  if(arguments.length === 2) return (group._scales[name] = scale, scale);\n  while(scale == null) {\n    scale = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if(!group) break;\n  }\n  return scale;\n}\n\nfunction buildGroup(input, group) {\n  debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};    \n  group.scale  = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n}\n\nfunction buildMarks(input, group) {\n  debug(input, [\"building marks\", group._id]);\n  var marks = this._def.marks,\n      listeners = [],\n      mark, from, inherit, i, len, m, b;\n\n  for(i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = \"vg_\"+group.datum._id;\n    group.items[i] = {group: group};\n    b = (mark.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({ \n      builder: b, \n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit), \n      type: C.MARK \n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axisDef: def};\n    b = (def.type === C.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(C.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: C.AXIS, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) (i===list.length-1) ? list.pop() : list.splice(i, 1);\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n  if (this.mark.pathCache) this.mark.pathCache = null;\n};\n\nmodule.exports = Item;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Node = require('../dataflow/Node'),\n    Aggregate = require('../transforms/Aggregate'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    config = require('../util/config'),\n    C = require('../util/constants');\n\nvar GROUP_PROPERTY = {width: 1, height: 1};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times. \n  if (this._updated) input.scales[this._def.name] = 1;\n  return changeset.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    deps = dl.array(deps);\n    for(var i=0, len=deps.length; i<len; ++i) {\n      this._graph[type == C.DATA ? C.DATA : C.SIGNAL](deps[i])\n        .addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + \":prev\",\n      s = instance.call(this, group.scale(name)),\n      m = s.type===C.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var type = this._def.type || C.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) dl.error(\"Unrecognized scale type: \" + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, sort, str, refs, dataDrivenRange = false;\n  \n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, C.RANGE, def.range, scale, group);\n  }\n  \n  // domain\n  domain = dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  if (dl.equal(prev.range, rng)) return;\n\n  str = typeof rng[0] === 'string';\n  if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n    scale.range(rng); // color or shape values\n  } else if (def.points) {\n    scale.rangePoints(rng, def.padding||0);\n  } else if (def.round || def.round===undefined) {\n    scale.rangeRoundBands(rng, def.padding||0);\n  } else {\n    scale.rangeBands(rng, def.padding||0);\n  }\n\n  prev.range = rng;\n  this._updated = true;\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      domain, interval;\n\n  // domain\n  domain = (def.type === C.QUANTILE)\n    ? dataRef.call(this, C.DOMAIN, def.domain, scale, group)\n    : domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  } \n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (def.range === \"height\") rng = rng.reverse();\n  if (dl.equal(prev.range, rng)) return;\n  scale[def.round && scale.rangeRound ? \"rangeRound\" : \"range\"](rng);\n  prev.range = rng;\n  this._updated = true;\n\n  // TODO: Support signals for these properties. Until then, only eval\n  // them once.\n  if (this._stamp > 0) return;\n  if (def.exponent && def.type===C.POWER) scale.exponent(def.exponent);\n  if (def.clamp) scale.clamp(true);\n  if (def.nice) {\n    if (def.type === C.TIME) {\n      interval = d3.time[def.nice];\n      if (!interval) dl.error(\"Unrecognized interval: \" + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction isUniques(scale) { \n  return scale.type === C.ORDINAL || scale.type === C.QUANTILE; \n}\n\nfunction getRefs(def) { \n  return def.fields || dl.array(def);\n}\n\nfunction getFields(ref, group) {\n  return dl.array(ref.field).map(function(f) {\n    if (f.parent) return dl.accessor(f.parent)(group.datum)\n    return f; // String or {\"signal\"}\n  });\n}\n\n// Scale datarefs can be computed over multiple schema types. \n// This function determines the type of aggregator created, and\n// what data is sent to it: values, tuples, or multi-tuples that must\n// be standardized into a consistent schema. \nfunction aggrType(def, scale) {\n  var refs = getRefs(def);\n\n  // If we're operating over only a single domain, send full tuples\n  // through for efficiency (fewer accessor creations/calls)\n  if(refs.length == 1 && dl.array(refs[0].field).length == 1) {\n    return Aggregate.TYPES.TUPLE;\n  }\n\n  // With quantitative scales, we only care about min/max.\n  if(!isUniques(scale)) return Aggregate.TYPES.VALUE;\n\n  // If we don't sort, then we can send values directly to aggrs as well\n  if(!def.sort) return Aggregate.TYPES.VALUE;\n\n  return Aggregate.TYPES.MULTI;\n}\n\nfunction getCache(which, def, scale, group) {\n  var refs = getRefs(def),\n      atype = aggrType(def, scale),\n      uniques = isUniques(scale),\n      sort = def.sort,\n      ck = \"_\"+which,\n      fields = getFields(refs[0], group),\n      singleDomain = refs.length == 1 && fields.length == 1,\n      i, rlen, j, flen, ref, field;\n\n  if(scale[ck]) return scale[ck];\n\n  var cache = scale[ck] = new Aggregate(this._graph).type(atype),\n      groupby, summarize;\n\n  if(uniques) {\n    if(atype === Aggregate.TYPES.VALUE) {\n      groupby = [{ name: C.GROUPBY, get: dl.identity }];\n      summarize = {\"*\": C.COUNT};\n    } else if(atype === Aggregate.TYPES.TUPLE) {\n      groupby = [{ name: C.GROUPBY, get: dl.$(fields[0]) }];\n      summarize = sort ? [{\n        name: C.VALUE,\n        get:  dl.$(ref.sort || sort.field),\n        ops: [sort.stat]\n      }] : {\"*\": C.COUNT};\n    } else {  // atype === Aggregate.TYPES.MULTI\n      groupby   = C.GROUPBY;\n      summarize = [{ name: C.VALUE, ops: [sort.stat] }]; \n    }\n  } else {\n    groupby = [];\n    summarize = [{\n      name: C.VALUE,\n      get:  singleDomain ? dl.$(fields[0]) : dl.identity,\n      ops: [C.MIN, C.MAX],\n      as:  [C.MIN, C.MAX]\n    }];\n  }\n\n  cache.groupby.set(cache, groupby)\n    .summarize.set(cache, summarize);\n\n  return cache;\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = getRefs(def),\n      atype = aggrType(def, scale),\n      cache = getCache.apply(this, arguments),\n      sort  = def.sort,\n      uniques = isUniques(scale),\n      i, rlen, j, flen, ref, fields, field;\n\n  for(i=0, rlen=refs.length; i<rlen; ++i) {\n    ref = refs[i];\n    from = ref.data || \"vg_\"+group.datum._id;\n    data = graph.data(from)\n      .revises(true)\n      .last();\n\n    if (data.stamp <= this._stamp) continue;\n\n    fields = getFields(ref, group);\n    for(j=0, flen=fields.length; j<flen; ++j) {\n      field = fields[j];\n\n      if(atype === Aggregate.TYPES.VALUE) {\n        cache.accessors(null, field);\n      } else if(atype === Aggregate.TYPES.MULTI) {\n        cache.accessors(field, ref.sort || sort.field);\n      } // Else (Tuple-case) is handled by the aggregator accessors by default\n\n      cache.evaluate(data);\n    }\n\n    this.dependency(C.DATA, from);\n    cache.dependency(C.SIGNALS).forEach(function(s) { self.dependency(C.SIGNALS, s) });\n  }\n\n  data = cache.aggr().result();\n  if (uniques) {\n    if (sort) {\n      sort = sort.order.signal ? graph.signalRef(sort.order.signal) : sort.order;\n      sort = (sort == C.DESC ? \"-\" : \"+\") + C.VALUE;\n      sort = dl.comparator(sort);\n      data = data.sort(sort);\n    // } else {  // \"First seen\" order\n    //   sort = dl.comparator(\"tpl._id\");\n    }\n\n    return data.map(function(d) { return d[C.GROUPBY]; });\n  } else {\n    data = data[0];\n    return !dl.isValid(data) ? [] : [data[C.MIN], data[C.MAX]];\n  }\n}\n\nfunction signal(v) {\n  var s = v.signal, ref;\n  if (!s) return v;\n  this.dependency(C.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], refs, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, C.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = signal.call(this, def.domainMin);\n      } else {\n        domain[0] = dataRef.call(this, C.DOMAIN+C.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = signal.call(this, def.domainMax);\n      } else {\n        domain[z] = dataRef.call(this, C.DOMAIN+C.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== C.LOG && def.type !== C.TIME && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      rng = [null, null];\n\n  if (def.range !== undefined) {\n    if (typeof def.range === 'string') {\n      if (GROUP_PROPERTY[def.range]) {\n        rng = [0, group[def.range]];\n      } else if (config.range[def.range]) {\n        rng = config.range[def.range];\n      } else {\n        dl.error(\"Unrecogized range: \"+def.range);\n        return rng;\n      }\n    } else if (dl.isArray(def.range)) {\n      rng = def.range.map(signal.bind(this));\n    } else if (dl.isObject(def.range)) {\n      return null; // early exit\n    } else {\n      rng = [0, def.range];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ? signal.call(this, def.rangeMin) : def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ? signal.call(this, def.rangeMax) : def.rangeMax;\n  }\n  \n  if (def.reverse !== undefined) {\n    var rev = def.reverse;\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n  \n  return rng;\n}\n\nmodule.exports = Scale;","var tuple = require('../dataflow/tuple'),\n    calcBounds = require('../util/bounds'),\n    C = require('../util/constants');\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease(\"cubic-in-out\");\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  \"text\": 1,\n  \"url\":  1\n};\n\nprototype.interpolate = function(item, values, stamp) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];      \n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        tuple.set(item, key, next);\n      } else if (typeof curr === \"number\" && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === C.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === C.EXIT) curr.remove = true;\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    calcBounds.item(item);\n\n    if (f === 1) {\n      if (curr.remove) item.remove();\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n};\n\nmodule.exports = Transition;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    dl = require('datalib'),\n    config = require('../util/config'),\n    tpl = require('../dataflow/tuple'),\n    parseMark = require('../parse/mark');\n\nfunction axs(model) {\n  var scale,\n      orient = config.axis.orient,\n      offset = 0,\n      titleOffset = config.axis.titleOffset,\n      axisDef = {},\n      layer = \"front\",\n      grid = false,\n      title = null,\n      tickMajorSize = config.axis.tickSize,\n      tickMinorSize = config.axis.tickSize,\n      tickEndSize = config.axis.tickSize,\n      tickPadding = config.axis.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormat = null,\n      tickSubdivide = 0,\n      tickArguments = [config.axis.ticks],\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines: null,\n        majorTicks: null,\n        minorTicks: null,\n        tickLabels: null,\n        domain: null,\n        title: null\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  };\n\n  axis.def = function() {\n    if(!axisDef.type) axis_def(scale);\n\n    // tick format\n    tickFormat = !tickFormatString ? null : ((scale.type === 'time')\n      ? d3.time.format(tickFormatString)\n      : d3.format(tickFormatString));\n\n    // generate data\n    // We don't _really_ need to model these as tuples as no further\n    // data transformation is done. So we optimize for a high churn rate. \n    var injest = function(d) { return {data: d}; };\n    var major = tickValues == null\n      ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain())\n      : tickValues;\n    var minor = vg_axisSubdivide(scale, major, tickSubdivide).map(injest);\n    major = major.map(injest);\n    var fmt = tickFormat==null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : String) : tickFormat;\n    major.forEach(function(d) { d.label = fmt(d.data); });\n    var tdata = title ? [title].map(injest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? major : []; };\n    axisDef.marks[1].from = function() { return major; };\n    axisDef.marks[2].from = function() { return minor; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    return axisDef;\n  };\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === \"ordinal\") {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+\":prev\", offset: 0.5};\n    }\n    range = vg_axisScaleRange(scale);\n\n    // setup axis marks\n    if (!m.gridLines)  m.gridLines  = vg_axisTicks();\n    if (!m.majorTicks) m.majorTicks = vg_axisTicks();\n    if (!m.minorTicks) m.minorTicks = vg_axisTicks();\n    if (!m.tickLabels) m.tickLabels = vg_axisTickLabels();\n    if (!m.domain) m.domain = vg_axisDomain();\n    if (!m.title)  m.title  = vg_axisTitle();\n    m.gridLines.properties.enter.stroke = {value: config.axis.gridColor};\n\n    // extend axis marks based on axis orientation\n    vg_axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity);\n    vg_axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize);\n    vg_axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize);\n    vg_axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    vg_axisDomainExtend(orient, m.domain, range, tickEndSize);\n    vg_axisTitleExtend(orient, m.title, range, titleOffset); // TODO get offset\n    \n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: \"group\",\n      interactive: false,\n      properties: { \n        enter: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: vg_axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  };\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in vg_axisOrients ? x + \"\" : config.axis.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.ticks = function() {\n    if (!arguments.length) return tickArguments;\n    tickArguments = arguments;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n  \n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n  \n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== +x) { titleOffset = +x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n  \n  axis.reset = function() { reset(); };\n\n  return axis;\n};\n\nvar vg_axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction vg_axisSubdivide(scale, ticks, m) {\n  subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = vg_axisScaleExtent(scale.domain()),\n        subticks,\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction vg_axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction vg_axisScaleRange(scale) {\n  return scale.rangeExtent\n    ? scale.rangeExtent()\n    : vg_axisScaleExtent(scale.range());\n}\n\nvar vg_axisAlign = {\n  bottom: \"center\",\n  top: \"center\",\n  left: \"right\",\n  right: \"left\"\n};\n\nvar vg_axisBaseline = {\n  bottom: \"top\",\n  top: \"bottom\",\n  left: \"middle\",\n  right: \"middle\"\n};\n\nfunction vg_axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === \"left\" || orient === \"top\") {\n    size *= -1;\n  }  \n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: \"center\"},\n      baseline: {value: vg_axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: vg_axisAlign[orient]},\n      baseline: {value: \"middle\"}\n    });\n  }\n}\n\nfunction vg_axisTicksExtend(orient, ticks, oldScale, newScale, size) {\n  var sign = (orient === \"left\" || orient === \"top\") ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === \"top\" || orient === \"bottom\")\n      ? {field: {group: \"height\", level: 2}, mult: -sign}\n      : {field: {group: \"width\",  level: 2}, mult: -sign};\n  } else {\n    size = {value: sign * size};\n  }\n  if (orient === \"top\" || orient === \"bottom\") {\n    dl.extend(ticks.properties.enter, {\n      x:  oldScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newScale,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newScale,\n    });        \n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldScale\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newScale\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newScale,\n    });\n  }\n}\n\nfunction vg_axisTitleExtend(orient, title, range, offset) {\n  var mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === \"top\" || orient === \"left\") ? -1 : 1;\n  \n  if (orient === \"bottom\" || orient === \"top\") {\n    dl.extend(title.properties.update, {\n      x: {value: mid},\n      y: {value: sign*offset},\n      angle: {value: 0}\n    });\n  } else {\n    dl.extend(title.properties.update, {\n      x: {value: sign*offset},\n      y: {value: mid},\n      angle: {value: -90}\n    });\n  }\n}\n\nfunction vg_axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === \"top\" || orient === \"left\") {\n    size = -1 * size;\n  }\n  if (orient === \"bottom\" || orient === \"top\") {\n    path = \"M\" + range[0] + \",\" + size + \"V0H\" + range[1] + \"V\" + size;\n  } else {\n    path = \"M\" + size + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction vg_axisUpdate(item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isObject(offset)) {\n    offset = -group.scale(offset.scale)(offset.value);\n  }\n\n  switch (orient) {\n    case \"left\":   { tpl.set(o, 'x', -offset); tpl.set(o, 'y', 0); break; }\n    case \"right\":  { tpl.set(o, 'x', width + offset); tpl.set(o, 'y', 0); break; }\n    case \"bottom\": { tpl.set(o, 'x', 0); tpl.set(o, 'y', height + offset); break; }\n    case \"top\":    { tpl.set(o, 'x', 0); tpl.set(o, 'y', -offset); break; }\n    default:       { tpl.set(o, 'x', 0); tpl.set(o, 'y', 0); }\n  }\n\n  if (trans) trans.interpolate(item, o);\n}\n\nfunction vg_axisTicks() {\n  return {\n    type: \"rule\",\n    interactive: false,\n    key: \"data\",\n    properties: {\n      enter: {\n        stroke: {value: config.axis.tickColor},\n        strokeWidth: {value: config.axis.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTickLabels() {\n  return {\n    type: \"text\",\n    interactive: true,\n    key: \"data\",\n    properties: {\n      enter: {\n        fill: {value: config.axis.tickLabelColor},\n        font: {value: config.axis.tickLabelFont},\n        fontSize: {value: config.axis.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: \"label\"}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction vg_axisTitle() {\n  return {\n    type: \"text\",\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.axis.titleFont},\n        fontSize: {value: config.axis.titleFontSize},\n        fontWeight: {value: config.axis.titleFontWeight},\n        fill: {value: config.axis.titleColor},\n        align: {value: \"center\"},\n        baseline: {value: \"middle\"},\n        text: {field: \"data\"}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction vg_axisDomain() {\n  return {\n    type: \"path\",\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axis.axisColor},\n        strokeWidth: {value: config.axis.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor'),\n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset'), \n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph)\n    .router(true).revises(true);\n\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"}\n  });\n\n  this._fieldsDef = [];\n  this._aggr = null;  // dl.Aggregator\n\n  this._type = TYPES.TUPLE; \n  this._acc = {groupby: dl.true, value: dl.true}\n  this._cache = {};     // And cache them as aggregators expect original tuples.\n\n  // Aggregator needs a full instantiation of the previous tuple. \n  // Cache them to reduce creation costs\n  this._prev = {}; \n\n  return this;\n}\n\nvar proto = (Aggregate.prototype = new Transform());\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1, \n  TUPLE: 2, \n  MULTI: 3\n};\n\nproto.summarize = {\n  set: function(transform, summarize) {\n    var i, len, f, fields, name, ops, signals = {};\n    if(!dl.isArray(fields = summarize)) { // Object syntax from dl\n      fields = [];\n      for (name in summarize) {\n        ops = dl.array(summarize[name]);\n        fields.push({name: name, ops: ops});\n      }\n    }\n\n    for(i=0, len=fields.length; i<len; ++i) {\n      f = fields[i];\n      if(f.name.signal) signals[f.name.signal] = 1;\n      dl.array(f.ops).forEach(function(o){ if(o.signal) signals[o.signal] = 1 });\n    }\n\n    transform._fieldsDef = fields;\n    transform._aggr = null;\n    transform.dependency(C.SIGNALS, dl.keys(signals));\n    return transform;\n  }\n};\n\nproto.type = function(type) { \n  return (this._type = type, this); \n};\n\n// Minimize accessor creations by checking names\nfunction accessor(curr, field) {\n  var cName  = dl.name(curr),\n      isFunc = dl.isFunction(field),\n      fName  = isFunc ? dl.name(field) : field;\n\n  return (cName == fName) ? curr :\n    isFunc ? field : dl.$(field);\n}\n\nproto.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = groupby ? accessor(acc.groupby, groupby) : dl.true;\n  acc.value = value ? accessor(acc.value, value) : dl.true;\n};\n\nfunction standardize(x) {\n  var acc = this._acc;\n  if(this._type === TYPES.TUPLE) {\n    return x;\n  } else if(this._type === TYPES.VALUE) {\n    return acc.value(x);\n  } else {\n    return this._cache[x._id] || (this._cache[x._id] = {\n      _id: x._id,\n      groupby: acc.groupby(x),\n      value: acc.value(x)\n    });\n  }\n}\n\nproto.aggr = function() {\n  if(this._aggr) return this._aggr;\n\n  var graph = this._graph,\n      groupby = this.groupby.get(graph).fields;\n\n  var fields = this._fieldsDef.map(function(field) {\n    var f  = dl.duplicate(field);\n    if(field.get) f.get = field.get;\n\n    f.name = f.name.signal ? graph.signalRef(f.name.signal) : f.name;\n    f.ops  = f.ops.signal ? graph.signalRef(f.ops.signal) : dl.array(f.ops).map(function(o) {\n      return o.signal ? graph.signalRef(o.signal) : o;\n    });\n\n    return f;\n  });\n\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  if(this._type !== TYPES.VALUE) aggr.key(\"_id\");\n  return aggr;\n};\n\nproto._reset = function(input, output) {\n  output.rem.push.apply(output.rem, this.aggr().result());\n  this.aggr().clear();\n  this._aggr = null;\n};\n\nfunction spoof_prev(x) {\n  var prev = this._prev[x._id] || (this._prev[x._id] = Object.create(x));\n  return dl.extend(prev, x._prev);\n}\n\nproto.transform = function(input, reset) {\n  debug(input, [\"aggregate\"]);\n\n  var output = changeset.create(input);\n  if(reset) this._reset(input, output);\n\n  var t = this,\n      tpl  = this._type === TYPES.TUPLE, // reduce calls to standardize\n      aggr = this.aggr();\n\n  input.add.forEach(function(x) {\n    aggr._add(tpl ? x : standardize.call(t, x));\n  });\n\n  input.mod.forEach(function(x) {\n    if(reset) {\n      aggr._add(tpl ? x : standardize.call(t, x));  // Signal change triggered reflow\n    } else if(tuple.has_prev(x)) {\n      var prev = spoof_prev.call(t, x);\n      aggr._mod(tpl ? x : standardize.call(t, x), \n        tpl ? prev : standardize.call(t, prev));\n    }\n  });\n\n  input.rem.forEach(function(x) {\n    var y = tuple.has_prev(x) ? spoof_prev.call(t, x) : x;\n    aggr._rem(tpl ? y : standardize.call(t, y));\n  });\n\n  return aggr.changes(input, output);\n}\n\nmodule.exports = Aggregate;","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector');\n\nfunction BatchTransform() {\n}\n\nvar proto = (BatchTransform.prototype = new Transform());\n\nproto.init = function(graph) {\n  Transform.prototype.init.call(this, graph);\n  this._collector = new Collector(graph);\n  return this;\n};\n\nproto.transform = function(input) {\n  // Materialize the current datasource.\n  // TODO: efficiently share collectors\n  this._collector.evaluate(input);\n  var data = this._collector.data();\n  return this.batchTransform(input, data);\n};\n\nproto.batchTransform = function(input, data) {\n};\n\nmodule.exports = BatchTransform;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Bin(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"field\"},\n    min: {type: \"value\"},\n    max: {type: \"value\"},\n    step: {type: \"value\"},\n    maxbins: {type: \"value\", default: 20}\n  });\n\n  this._output = {\"bin\": \"bin\"};\n  return this;\n}\n\nvar proto = (Bin.prototype = new Transform());\n\nproto.transform = function(input) {\n  var transform = this,\n      output = this._output.bin;\n      \n  var b = dl.bins({\n    min: this.min.get(),\n    max: this.max.get(),\n    step: this.step.get(),\n    maxbins: this.maxbins.get()\n  });\n\n  function update(d) {\n    var v = transform.field.get().accessor(d);\n    v = v == null ? null\n      : b.start + b.step * ~~((v - b.start) / b.step);\n    tuple.set(d, output, v, input.stamp);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  return input;\n};\n\nmodule.exports = Bin;\n","var Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset');\n\nfunction Cross(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    diagonal: {type: \"value\", default: \"true\"}\n  });\n\n  this._output = {\"left\": \"a\", \"right\": \"b\"};\n  this._collector = new Collector(graph);\n  this._lastRem  = null; // Most recent stamp that rem occured. \n  this._lastWith = null; // Last time we crossed w/withds.\n  this._ids   = {};\n  this._cache = {};\n\n  return this.router(true);\n}\n\nvar proto = (Cross.prototype = new Transform());\n\n// Each cached incoming tuple also has a stamp to track if we need to do\n// lazy filtering of removed tuples.\nfunction cache(x, t) {\n  var c = this._cache[x._id] = this._cache[x._id] || {c: [], s: this._stamp};\n  c.c.push(t);\n}\n\nfunction add(output, left, wdata, diag, x) {\n  var data = left ? wdata : this._collector.data(), // Left tuples cross w/right.\n      i = 0, len = data.length,\n      prev  = x._prev !== undefined ? null : undefined, \n      t, y, id;\n\n  for(; i<len; ++i) {\n    y = data[i];\n    id = left ? x._id+\"_\"+y._id : y._id+\"_\"+x._id;\n    if(this._ids[id]) continue;\n    if(x._id == y._id && !diag) continue;\n\n    t = tuple.ingest({}, prev);\n    t[this._output.left]  = left ? x : y;\n    t[this._output.right] = left ? y : x;\n    output.add.push(t);\n    cache.call(this, x, t);\n    cache.call(this, y, t);\n    this._ids[id] = 1;\n  }\n}\n\nfunction mod(output, left, x) {\n  var cross = this,\n      c = this._cache[x._id];\n\n  if(this._lastRem > c.s) {  // Removed tuples haven't been filtered yet\n    c.c = c.c.filter(function(y) {\n      var t = y[cross._output[left ? \"right\" : \"left\"]];\n      return cross._cache[t._id] !== null;\n    });\n    c.s = this._lastRem;\n  }\n\n  output.mod.push.apply(output.mod, c.c);\n}\n\nfunction rem(output, x) {\n  output.rem.push.apply(output.rem, this._cache[x._id].c);\n  this._cache[x._id] = null;\n  this._lastRem = this._stamp;\n}\n\nfunction upFields(input, output) {\n  if(input.add.length || input.rem.length) {\n    output.fields[this._output.left]  = 1; \n    output.fields[this._output.right] = 1;\n  }\n}\n\nproto.transform = function(input) {\n  debug(input, [\"crossing\"]);\n\n  // Materialize the current datasource. TODO: share collectors\n  this._collector.evaluate(input);\n\n  var w = this.with.get(this._graph),\n      diag = this.diagonal.get(this._graph),\n      selfCross = (!w.name),\n      data = this._collector.data(),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = changeset.create(input),\n      r = rem.bind(this, output); \n\n  input.rem.forEach(r);\n  input.add.forEach(add.bind(this, output, true, wdata, diag));\n\n  if(!selfCross && woutput.stamp > this._lastWith) {\n    woutput.rem.forEach(r);\n    woutput.add.forEach(add.bind(this, output, false, data, diag));\n    woutput.mod.forEach(mod.bind(this, output, false));\n    upFields.call(this, woutput, output);\n    this._lastWith = woutput.stamp;\n  }\n\n  // Mods need to come after all removals have been run.\n  input.mod.forEach(mod.bind(this, output, true));\n  upFields.call(this, input, output);\n\n  return output;\n};\n\nmodule.exports = Cross;","var Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar proto = (Facet.prototype = Object.create(Aggregate.prototype));\n\nproto.pipeline = {\n  set: function(facet, pipeline) {\n    facet._pipeline = pipeline;\n    return facet;\n  },\n  get: function(model, facet) {\n    var parse = require('../parse/transforms');\n    return facet._pipeline.map(function(t) { return parse(model, t) });\n  }\n};\n\nproto.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nmodule.exports = Facet;","var dl = require('datalib'),\n    tuple = require('../dataflow/tuple'),\n    changeset = require('../dataflow/changeset'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Facetor() {\n  Aggregator.constructor.call(this);\n  this._facet = null;\n}\n\nvar Aggregator = dl.groupby();\nvar proto = (Facetor.prototype = Object.create(Aggregator));\n\nproto.facet = function(f) {\n  if(!arguments.length) return this._facet;\n  return (this._facet = f, this);\n};\n\nproto._ingest = function(t) { \n  return tuple.ingest(t, null) \n};\n\nproto._assign = tuple.set;\n\nfunction disconnect_cell(facet) {\n  debug({}, [\"deleting cell\", this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nproto._newcell = function(x) {\n  var cell  = Aggregator._newcell.call(this, x),\n      facet = this._facet,\n      tuple = cell.tuple,\n      graph, pipeline;\n\n  if(this._facet !== null) {\n    graph = facet._graph;\n    pipeline = facet.pipeline.get(graph, facet);\n    cell.ds  = graph.data(\"vg_\"+tuple._id, pipeline, tuple);\n    cell.delete = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var t = Aggregator._newtuple.call(this, x);\n  if(this._facet !== null) {\n    tuple.set(t, \"key\", this._cellkey(x));\n  }\n  return t;\n};\n\nproto.clear = function() {\n  if(this._facet !== null) for (var k in this._cells) {\n    this._cells[k].delete(this._facet);\n  }\n  return Aggregator.clear.call(this);\n};\n\nproto._add = function(x) {\n  var cell = this._cell(x);\n  Aggregator._add.call(this, x);\n  if(this._facet !== null) cell.ds._input.add.push(x);\n};\n\nproto._mod = function(x, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(x);\n\n  Aggregator._mod.call(this, x, prev);\n  if(this._facet !== null) {  // Propagate tuples\n    if(cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x);\n  Aggregator._rem.call(this, x);\n  if(this._facet !== null) cell.ds._input.rem.push(x);  \n};\n\nproto.changes = function(input, output) {\n  var aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      if (flag === C.MOD_CELL) {\n        output.rem.push(cell.tuple);\n      }\n      if(this._facet !== null) cell.delete(this._facet);\n      delete this._cells[k];\n    } else {\n      if(this._facet !== null) {\n        // propagate sort, signals, fields, etc.\n        changeset.copy(input, cell.ds._input);\n      }\n\n      if (flag & C.ADD_CELL) {\n        output.add.push(cell.tuple);\n      } else if (flag & C.MOD_CELL) {\n        output.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return output;\n};\n\nmodule.exports = Facetor;","var Transform = require('./Transform'),\n    changeset = require('../dataflow/changeset'), \n    expr = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: \"expr\"} });\n\n  this._skip = {};\n  return this;\n}\n\nvar proto = (Filter.prototype = new Transform());\n\nfunction test(x) {\n  return expr.eval(this._graph, this.test.get(this._graph), \n    x, null, null, null, this.dependency(C.SIGNALS));\n};\n\nproto.transform = function(input) {\n  debug(input, [\"filtering\"]);\n  var output = changeset.create(input),\n      skip = this._skip,\n      f = this;\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test.call(f, x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test.call(f, x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;","var Transform = require('./Transform'),\n    debug = require('../util/debug'), \n    tuple = require('../dataflow/tuple'), \n    changeset = require('../dataflow/changeset');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: \"array<field>\"} \n  });\n\n  this._output = {key: \"key\", value: \"value\"};\n  this._cache = {};\n\n  return this.router(true).revises(true);\n}\n\nvar proto = (Fold.prototype = new Transform());\n\nfunction rst(input, output) { \n  for(var id in this._cache) output.rem.push.apply(output.rem, this._cache[id]);\n  this._cache = {};\n};\n\nfunction get_tuple(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] || (list[i] = tuple.derive(x, x._prev));\n};\n\nfunction fn(data, fields, accessors, out, stamp) {\n  var i = 0, dlen = data.length,\n      j, flen = fields.length,\n      d, t;\n\n  for(; i<dlen; ++i) {\n    d = data[i];\n    for(j=0; j<flen; ++j) {\n      t = get_tuple.call(this, d, j, flen);  \n      tuple.set(t, this._output.key, fields[j]);\n      tuple.set(t, this._output.value, accessors[j](d));\n      out.push(t);\n    }      \n  }\n};\n\nproto.transform = function(input, reset) {\n  debug(input, [\"folding\"]);\n\n  var fold = this,\n      on = this.fields.get(this._graph),\n      fields = on.fields, accessors = on.accessors,\n      output = changeset.create(input);\n\n  if(reset) rst.call(this, input, output);\n\n  fn.call(this, input.add, fields, accessors, output.add, input.stamp);\n  fn.call(this, input.mod, fields, accessors, reset ? output.add : output.mod, input.stamp);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if(input.add.length || input.rem.length || \n    fields.some(function(f) { return !!input.fields[f]; }))\n      output.fields[this._output.key] = 1, output.fields[this._output.value] = 1;\n  return output;\n};\n\nmodule.exports = Fold;","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: \"array<value>\", default: [500, 500]},\n    links: {type: \"data\"},\n    linkDistance: {type: \"field\", default: 20},\n    linkStrength: {type: \"field\", default: 1},\n    charge: {type: \"field\", default: 30},\n    chargeDistance: {type: \"field\", default: Infinity},\n    iterations: {type: \"value\", default: 500},\n    friction: {type: \"value\", default: 0.9},\n    theta: {type: \"value\", default: 0.8},\n    gravity: {type: \"value\", default: 0.1},\n    alpha: {type: \"value\", default: 0.1}\n  });\n\n  this._nodes = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  this._output = {\n    \"x\": \"layout:x\",\n    \"y\": \"layout:y\",\n    \"source\": \"_source\",\n    \"target\": \"_target\"\n  };\n\n  return this;\n}\n\nvar proto = (Force.prototype = new Transform());\n\nfunction get(transform, name) {\n  var v = transform[name].get(transform._graph);\n  return v.accessor\n    ? function(x) { return v.accessor(x.tuple); }\n    : v.field;\n}\n\nproto.transform = function(nodeInput) {\n  // get variables\n  var g = this._graph,\n      linkInput = this.links.get(g).source.last(),\n      layout = this._layout,\n      output = this._output,\n      nodes = this._nodes,\n      links = this._links,\n      iter = this.iterations.get(g);\n\n  // process added nodes\n  nodeInput.add.forEach(function(n) {\n    nodes.push({tuple: n});\n  });\n\n  // process added edges\n  linkInput.add.forEach(function(l) {\n    var link = {\n      tuple: l,\n      source: nodes[l.source],\n      target: nodes[l.target]\n    };\n    tuple.set(l, output.source, link.source.tuple);\n    tuple.set(l, output.target, link.target.tuple);\n    links.push(link);\n  });\n\n  // TODO process \"mod\" of edge source or target?\n\n  // configure layout\n  layout\n    .size(this.size.get(g))\n    .linkDistance(get(this, \"linkDistance\"))\n    .linkStrength(get(this, \"linkStrength\"))\n    .charge(get(this, \"charge\"))\n    .chargeDistance(get(this, \"chargeDistance\"))\n    .friction(this.friction.get(g))\n    .theta(this.theta.get(g))\n    .gravity(this.gravity.get(g))\n    .alpha(this.alpha.get(g))\n    .nodes(nodes)\n    .links(links);\n\n  // run layout\n  layout.start();\n  for (var i=0; i<iter; ++i) {\n    layout.tick();\n  }\n  layout.stop();\n\n  // copy layout values to nodes\n  nodes.forEach(function(n) {\n    tuple.set(n.tuple, output.x, n.x);\n    tuple.set(n.tuple, output.y, n.y);\n  });\n\n  // process removed nodes\n  if (nodeInput.rem.length > 0) {\n    var nodeIds = tuple.idMap(nodeInput.rem);\n    this._nodes = nodes.filter(function(n) { return !nodeIds[n.tuple._id]; });\n  }\n\n  // process removed edges\n  if (linkInput.rem.length > 0) {\n    var linkIds = tuple.idMap(linkInput.rem);\n    this._links = links.filter(function(l) { return !linkIds[l.tuple._id]; });\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nmodule.exports = Force;","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple'), \n    expression = require('../parse/expr'),\n    debug = require('../util/debug'),\n    C = require('../util/constants');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: \"value\"},\n    expr:  {type: \"expr\"}\n  });\n\n  return this;\n}\n\nvar proto = (Formula.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"formulating\"]);\n  var t = this, \n      g = this._graph,\n      field = this.field.get(g),\n      expr = this.expr.get(g),\n      deps = this.dependency(C.SIGNALS);\n  \n  function set(x) {\n    var val = expression.eval(g, expr, x, null, null, null, deps);\n    tuple.set(x, field, val);\n  }\n\n  input.add.forEach(set);\n  \n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: \"field\"},\n    lat: {type: \"field\"}\n  });\n\n  this._output = {\n    \"x\": \"geo:x\",\n    \"y\": \"geo:y\"\n  };\n  return this;\n}\n\nvar None\n\nGeo.Parameters = {\n  projection: {type: \"value\", default: \"mercator\"},\n  center:     {type: \"array[value]\"},\n  translate:  {type: \"array[value]\"},\n  rotate:     {type: \"array[value]\"},\n  scale:      {type: \"value\"},\n  precision:  {type: \"value\"},\n  clipAngle:  {type: \"value\"},\n  clipExtent: {type: \"value\"}\n};\n\nGeo.d3Projection = function() {\n  var g = this._graph,\n      p = this.projection.get(g),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === \"projection\" || !proj[name]) continue;\n    value = this[name].get(g);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar proto = (Geo.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      lon = this.lon.get(g).accessor,\n      lat = this.lat.get(g).accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll);\n    tuple.set(t, output.x, xy[0]);\n    tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Geo = require('./Geo'),\n    Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    value: {type: \"field\", default: null},\n  });\n\n  this._output = {\n    \"path\": \"geo:path\"\n  };\n  return this;\n}\n\nvar proto = (GeoPath.prototype = new Transform());\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      geojson = this.value.get(g).accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n","var Transform = require('./Transform'),\n    tuple = require('../dataflow/tuple');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    source:  {type: \"field\", default: \"_source\"},\n    target:  {type: \"field\", default: \"_target\"},\n    x:       {type: \"field\", default: \"layout:x\"},\n    y:       {type: \"field\", default: \"layout:y\"},\n    tension: {type: \"value\", default: 0.2},\n    shape:   {type: \"value\", default: \"line\"}\n  });\n\n  this._output = {\"path\": \"link:path\"};\n  return this;\n}\n\nvar proto = (LinkPath.prototype = new Transform());\n\nfunction line(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t);\n  return \"M\" + sx + \",\" + sy\n       + \"L\" + tx + \",\" + ty;\n}\n\nfunction curve(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + (sx+ix) + \",\" + (sy+iy)\n       + \" \" + (tx+iy) + \",\" + (ty-ix)\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalX(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sx + tx) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + m  + \",\" + sy\n       + \" \" + m  + \",\" + ty\n       + \" \" + tx + \",\" + ty;\n}\n\nfunction diagonalY(d, source, target, x, y, tension) {\n  var s = source(d), sx = x(s), sy = y(s),\n      t = target(d), tx = x(t), ty = y(t),\n      m = (sy + ty) / 2;\n  return \"M\" + sx + \",\" + sy\n       + \"C\" + sx + \",\" + m\n       + \" \" + tx + \",\" + m\n       + \" \" + tx + \",\" + ty;\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  diagonal:  diagonalX,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY\n};\n\nproto.transform = function(input) {\n  var g = this._graph,\n      output = this._output,\n      shape = shapes[this.shape.get(g)] || shapes.line,\n      source = this.source.get(g).accessor,\n      target = this.target.get(g).accessor,\n      x = this.x.get(g).accessor,\n      y = this.y.get(g).accessor,\n      tension = this.tension.get(g);\n  \n  function set(t) {\n    var path = shape(t, source, target, x, y, tension)\n    tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;","var dl = require('datalib'),\n    expr = require('../parse/expr'),\n    C = require('../util/constants');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i;\n\nfunction Parameter(name, type) {\n  this._name = name;\n  this._type = type;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar proto = Parameter.prototype;\n\nproto._get = function() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  if (isData) {\n    return isArray ? { names: this._value, sources: this._accessors } :\n      { name: this._value[0], source: this._accessors[0] };\n  } else if (isField) {\n    return isArray ? { fields: this._value, accessors: this._accessors } :\n      { field: this._value[0], accessor: this._accessors[0] };\n  } else {\n    return isArray ? this._value : this._value[0];\n  }\n};\n\nproto.get = function(graph) {\n  var isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return this._get();\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return this._get(); // TODO: support signal as dataTypes\n  }\n\n  for(s in this._signals) {\n    idx  = this._signals[s];\n    val  = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return this._get();\n};\n\nproto.set = function(transform, value) {\n  var param = this, \n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        transform.dependency(C.FIELDS,  e.fields);\n        transform.dependency(C.SIGNALS, e.signals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        param._accessors[i] = dl.accessor(v);\n        transform.dependency(C.FIELDS, v);\n      } else if (isData) {\n        param._resolution = true;\n        transform.dependency(C.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      param._accessors[i] = dl.accessor(v.field);\n      transform.dependency(C.FIELDS, v.field);\n      return v.field;\n    } else if (v.signal !== undefined) {\n      param._resolution = true;\n      param._signals[v.signal] = i;\n      transform.dependency(C.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return transform;\n};\n\nmodule.exports = Parameter;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    value:      {type: \"field\", default: null},\n    startAngle: {type: \"value\", default: 0},\n    endAngle:   {type: \"value\", default: 2 * Math.PI},\n    sort:       {type: \"value\", default: false}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n\n  return this;\n}\n\nvar proto = (Pie.prototype = new BatchTransform());\n\nfunction ones() { return 1; }\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      output = this._output,\n      value = this.value.get(g).accessor || ones,\n      start = this.startAngle.get(g),\n      stop = this.endAngle.get(g),\n      sort = this.sort.get(g);\n\n  var values = data.map(value),\n      a = start,\n      k = (stop - start) / d3.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    tuple.set(t, output.start, a);\n    tuple.set(t, output.mid, (a + 0.5 * v * k));\n    tuple.set(t, output.stop, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    expr = require('../parse/expr'),\n    debug = require('../util/debug');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: \"array<field>\"} });\n  return this.router(true);\n}\n\nvar proto = (Sort.prototype = new Transform());\n\nproto.transform = function(input) {\n  debug(input, [\"sorting\"]);\n\n  if(input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.by.get(this._graph).fields);\n  }\n\n  return input;\n};\n\nmodule.exports = Sort;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: \"array<field>\"},\n    sortby: {type: \"array<field>\"},\n    value: {type: \"field\"},\n    offset: {type: \"value\", default: \"zero\"}\n  });\n\n  this._output = {\n    \"start\": \"layout:start\",\n    \"stop\":  \"layout:stop\",\n    \"mid\":   \"layout:mid\"\n  };\n  return this;\n}\n\nvar proto = (Stack.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  var g = this._graph,\n      groupby = this.groupby.get(g).accessors,\n      sortby = dl.comparator(this.sortby.get(g).fields),\n      value = this.value.get(g).accessor,\n      offset = this.offset.get(g),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, value);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset===\"center\" ? (max - sum)/2 : 0,\n        scale = offset===\"normalize\" ? (1/sum) : 1,\n        i, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += value(x);\n      b = scale * v + off; // compute end point\n      tuple.set(x, output.start, a);\n      tuple.set(x, output.stop, b);\n      tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.stop] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, value) {\n  var groups = [],\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = (groupby.map(function(f) { return f(x); }));\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += value(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;","var Node = require('../dataflow/Node'),\n    Parameter = require('./Parameter'),\n    C = require('../util/constants');\n\nfunction Transform(graph) {\n  if(graph) Node.prototype.init.call(this, graph);\n  return this;\n}\n\nTransform.addParameters = function(proto, params) {\n  var p;\n  for (var name in params) {\n    p = params[name];\n    proto[name] = new Parameter(name, p.type);\n    if (p.hasOwnProperty('default')) proto[name].set(proto, p.default);\n  }\n  proto._parameters = params;\n};\n\nvar proto = (Transform.prototype = new Node());\n\nproto.clone = function() {\n  var n = Node.prototype.clone.call(this);\n  n.transform = this.transform;\n  n._parameters = this._parameters;\n  for(var k in this) { \n    if(n[k]) continue;\n    n[k] = this[k]; \n  }\n  return n;\n};\n\nproto.transform = function(input, reset) { return input; };\nproto.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp && this.dependency(C.SIGNALS).some(function(s) { \n    return !!input.signals[s] \n  });\n\n  return this.transform(input, reset);\n};\n\nproto.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","var dl = require('datalib'),\n    d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform'),\n    tuple = require('../dataflow/tuple');\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: \"array<field>\", default: [\"-value\"]},\n    children: {type: \"field\", default: \"children\"},\n    value: {type: \"field\", default: \"value\"},\n    // treemap parameters\n    size: {type: \"array<value>\", default: [500, 500]},\n    round: {type: \"value\", default: true},\n    sticky: {type: \"value\", default: false},\n    ratio: {type: \"value\", default: 0.5 * (1 + Math.sqrt(5))},\n    padding: {type: \"value\", default: null},\n    mode: {type: \"value\", default: \"squarify\"}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    \"x\":      \"layout:x\",\n    \"y\":      \"layout:y\",\n    \"width\":  \"layout:width\",\n    \"height\": \"layout:height\"\n  };\n  return this;\n}\n\nvar proto = (Treemap.prototype = new BatchTransform());\n\nproto.batchTransform = function(input, data) {\n  // get variables\n  var g = this._graph,\n      layout = this._layout,\n      output = this._output;\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.sort.get(g).fields))\n    .children(this.children.get(g).accessor)\n    .value(this.value.get(g).accessor)\n    .size(this.size.get(g))\n    .round(this.round.get(g))\n    .sticky(this.sticky.get(g))\n    .ratio(this.ratio.get(g))\n    .padding(this.padding.get(g))\n    .mode(this.mode.get(g))\n    .nodes(data[0]);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    tuple.set(n, output.x, n.x);\n    tuple.set(n, output.y, n.y);\n    tuple.set(n, output.width, n.dx);\n    tuple.set(n, output.height, n.dy);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;","var dl = require('datalib'),\n    Transform = require('./Transform'),\n    Collector = require('../dataflow/Collector'),\n    debug = require('../util/debug');\n\nfunction Zip(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: \"data\"},\n    as:  {type: \"value\"},\n    key: {type: \"field\", default: \"data\"},\n    withKey: {type: \"field\", default: null},\n    default: {type: \"value\"}\n  });\n\n  this._map = {};\n  this._collector = new Collector(graph);\n  this._lastJoin = 0;\n\n  return this.revises(true);\n}\n\nvar proto = (Zip.prototype = new Transform());\n\nfunction mp(k) {\n  return this._map[k] || (this._map[k] = []);\n};\n\nproto.transform = function(input) {\n  var w = this.with.get(this._graph),\n      wds = w.source,\n      woutput = wds.last(),\n      wdata = wds.values(),\n      key = this.key.get(this._graph),\n      withKey = this.withKey.get(this._graph),\n      as = this.as.get(this._graph),\n      dflt = this.default.get(this._graph),\n      map = mp.bind(this),\n      rem = {};\n\n  debug(input, [\"zipping\", w.name]);\n\n  if(withKey.field) {\n    if(woutput && woutput.stamp > this._lastJoin) {\n      woutput.rem.forEach(function(x) {\n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = dflt });\n        m[1] = null;\n      });\n\n      woutput.add.forEach(function(x) { \n        var m = map(withKey.accessor(x));\n        if(m[0]) m[0].forEach(function(d) { d[as] = x });\n        m[1] = x;\n      });\n      \n      // Only process woutput.mod tuples if the join key has changed.\n      // Other field updates will auto-propagate via prototype.\n      if(woutput.fields[withKey.field]) {\n        woutput.mod.forEach(function(x) {\n          var prev;\n          if(!x._prev || (prev = withKey.accessor(x._prev)) === undefined) return;\n          var prevm = map(prev);\n          if(prevm[0]) prevm[0].forEach(function(d) { d[as] = dflt });\n          prevm[1] = null;\n\n          var m = map(withKey.accessor(x));\n          if(m[0]) m[0].forEach(function(d) { d[as] = x });\n          m[1] = x;\n        });\n      }\n\n      this._lastJoin = woutput.stamp;\n    }\n  \n    input.add.forEach(function(x) {\n      var m = map(key.accessor(x));\n      x[as] = m[1] || dflt;\n      (m[0]=m[0]||[]).push(x);\n    });\n\n    input.rem.forEach(function(x) { \n      var k = key.accessor(x);\n      (rem[k]=rem[k]||{})[x._id] = 1;\n    });\n\n    if(input.fields[key.field]) {\n      input.mod.forEach(function(x) {\n        var prev;\n        if(!x._prev || (prev = key.accessor(x._prev)) === undefined) return;\n\n        var m = map(key.accessor(x));\n        x[as] = m[1] || dflt;\n        (m[0]=m[0]||[]).push(x);\n        (rem[prev]=rem[prev]||{})[x._id] = 1;\n      });\n    }\n\n    dl.keys(rem).forEach(function(k) { \n      var m = map(k);\n      if(!m[0]) return;\n      m[0] = m[0].filter(function(x) { return rem[k][x._id] !== 1 });\n    });\n  } else {\n    // We only need to run a non-key-join again if we've got any add/rem\n    // on input or woutput\n    if(input.add.length == 0 && input.rem.length == 0 && \n        woutput.add.length == 0 && woutput.rem.length == 0) return input;\n\n    // If we don't have a key-join, then we need to materialize both\n    // data sources to iterate through them. \n    this._collector.evaluate(input);\n\n    var data = this._collector.data(), \n        wlen = wdata.length, i;\n\n    for(i = 0; i < data.length; i++) { data[i][as] = wdata[i%wlen]; }\n  }\n\n  input.fields[as] = 1;\n  return input;\n};\n\nmodule.exports = Zip;","module.exports = {\n  aggregate:  require('./Aggregate'),\n  bin:        require('./Bin'),\n  cross:      require('./Cross'),\n  linkpath:   require('./LinkPath'),\n  facet:      require('./Facet'),\n  filter:     require('./Filter'),\n  fold:       require('./Fold'),\n  force:      require('./Force'),\n  formula:    require('./Formula'),\n  geo:        require('./Geo'),\n  geopath:    require('./GeoPath'),\n  pie:        require('./Pie'),\n  sort:       require('./Sort'),\n  stack:      require('./Stack'),\n  treemap:    require('./Treemap'),\n  zip:        require('./Zip')\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    Bounds = require('../core/Bounds'),\n    canvas = require('../render/canvas/path'),\n    config = require('./config');\n\nvar parse = canvas.parse,\n    boundPath = canvas.bounds,\n    areaPath = canvas.area,\n    linePath = canvas.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    gfx = null;\n\nfunction fontString(o) {\n  return (o.fontStyle ? o.fontStyle + \" \" : \"\")\n    + (o.fontVariant ? o.fontVariant + \" \" : \"\")\n    + (o.fontWeight ? o.fontWeight + \" \" : \"\")\n    + (o.fontSize != null ? o.fontSize : config.render.fontSize) + \"px \"\n    + (o.font || config.render.font);\n}\n\nfunction context() {\n  // TODO: how to check if nodeJS in requireJS?\n  return gfx || (gfx = (/*config.isNode\n    ? new (require(\"canvas\"))(1,1)\n    : */d3.select(\"body\").append(\"canvas\")\n        .attr(\"class\", \"vega_hidden\")\n        .attr(\"width\", 1)\n        .attr(\"height\", 1)\n        .style(\"display\", \"none\")\n        .node())\n    .getContext(\"2d\"));\n}\n\nfunction pathBounds(o, path, bounds) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    boundPath(path, bounds);\n    if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n      bounds.expand(o.strokeWidth);\n    }\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path\n    ? o.pathCache || (o.pathCache = parse(o.path))\n    : null;\n  return pathBounds(o, p, bounds);\n}\n\nfunction area(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction line(o, bounds) {\n  var items = o.mark.items, o = items[0];\n  var p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  return pathBounds(items[0], p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = (x + o.width) || 0,\n      h = (y + o.height) || 0;\n  bounds.set(x, y, w, h);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction image(o, bounds) {\n  var w = o.width || 0,\n      h = o.height || 0,\n      x = (o.x||0) - (o.align === \"center\"\n          ? w/2 : (o.align === \"right\" ? w : 0)),\n      y = (o.y||0) - (o.baseline === \"middle\"\n          ? h/2 : (o.baseline === \"bottom\" ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  );\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa%halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  bounds.set(cx+xmin, cy+ymin, cx+xmax, cy+ymax);\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case \"cross\":\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      bounds.set(x-t, y-r, x+t, y+r);\n      break;\n\n    case \"diamond\":\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"square\":\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case \"triangle-down\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case \"triangle-up\":\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n  if (o.stroke && o.opacity !== 0 && o.strokeWidth > 0) {\n    bounds.expand(o.strokeWidth);\n  }\n  return bounds;\n}\n\nfunction text(o, bounds, noRotate) {\n  var x = (o.x || 0) + (o.dx || 0),\n      y = (o.y || 0) + (o.dy || 0),\n      h = o.fontSize || config.render.fontSize,\n      a = o.align,\n      b = o.baseline,\n      r = o.radius || 0,\n      g = context(), w, t;\n\n  g.font = fontString(o);\n  g.textAlign = a || \"left\";\n  g.textBaseline = b || \"alphabetic\";\n  w = g.measureText(o.text || \"\").width;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal\n  if (a === \"center\") {\n    x = x - (w / 2);\n  } else if (a === \"right\") {\n    x = x - w;\n  } else {\n    // left by default, do nothing\n  }\n\n  /// TODO find a robust solution for heights.\n  /// These offsets work for some but not all fonts.\n\n  // vertical\n  if (b === \"top\") {\n    y = y + (h/5);\n  } else if (b === \"bottom\") {\n    y = y - h;\n  } else if (b === \"middle\") {\n    y = y - (h/2) + (h/10);\n  } else {\n    y = y - 4*h/5; // alphabetic by default\n  }\n  \n  bounds.set(x, y, x+w, y+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, o.x||0, o.y||0);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      legends = g.legendItems || [], j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    bounds.union(axes[j].bounds);\n  }\n  for (j=0, m=g.items.length; j<m; ++j) {\n    bounds.union(g.items[j].bounds);\n  }\n  if (includeLegends) {\n    for (j=0, m=legends.length; j<m; ++j) {\n      bounds.union(legends[j].bounds);\n    }\n    if (g.width != null && g.height != null) {\n      bounds.add(g.width, g.height);\n    }\n    if (g.x != null && g.y != null) {\n      bounds.add(0, 0);\n    }\n  }\n  bounds.translate(g.x||0, g.y||0);\n  return bounds;\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   text,\n  path:   path,\n  area:   area,\n  line:   line\n};\n\nfunction itemBounds(item, func, opt) {\n  func = func || methods[item.mark.marktype];\n  if (!item.bounds_prev) item['bounds:prev'] = new Bounds();\n  var b = item.bounds, pb = item['bounds:prev'];\n  if (b) pb.clear().union(b);\n  item.bounds = func(item, b ? b.clear() : new Bounds(), opt);\n  if (!b) pb.clear().union(item.bounds);\n  return item.bounds;\n}\n\nfunction markBounds(mark, bounds, opt) {\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      item, i, len;\n      \n  if (type===\"area\" || type===\"line\") {\n    if (items.length) {\n      items[0].bounds = func(items[0], bounds);\n    }\n  } else {\n    for (i=0, len=items.length; i<len; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  mark.bounds = bounds;\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  text,\n  group: group\n};","var d3 = (typeof window !== \"undefined\" ? window.d3 : typeof global !== \"undefined\" ? global.d3 : null),\n    config = {};\n\nconfig.debug = false;\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: \"\",\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// version and namepsaces for exported svg\nconfig.svgNamespace =\n  'version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" ' +\n  'xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  lineWidth: 1,\n  lineCap:   \"butt\",\n  font:      \"sans-serif\",\n  fontSize:  11\n};\n\n// default axis properties\nconfig.axis = {\n  orient: \"bottom\",\n  ticks: 10,\n  padding: 3,\n  axisColor: \"#000\",\n  gridColor: \"#d8d8d8\",\n  tickColor: \"#000\",\n  tickLabelColor: \"#000\",\n  axisWidth: 1,\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: \"sans-serif\",\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\",\n  titleOffset: 35\n};\n\n// default legend properties\nconfig.legend = {\n  orient: \"right\",\n  offset: 10,\n  padding: 3,\n  gradientStrokeColor: \"#888\",\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: \"#000\",\n  labelFontSize: 10,\n  labelFont: \"sans-serif\",\n  labelAlign: \"left\",\n  labelBaseline: \"middle\",\n  labelOffset: 8,\n  symbolShape: \"circle\",\n  symbolSize: 50,\n  symbolColor: \"#888\",\n  symbolStrokeWidth: 1,\n  titleColor: \"#000\",\n  titleFont: \"sans-serif\",\n  titleFontSize: 11,\n  titleFontWeight: \"bold\"\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10: [\n    \"#1f77b4\",\n    \"#ff7f0e\",\n    \"#2ca02c\",\n    \"#d62728\",\n    \"#9467bd\",\n    \"#8c564b\",\n    \"#e377c2\",\n    \"#7f7f7f\",\n    \"#bcbd22\",\n    \"#17becf\"\n  ],\n  category20: [\n    \"#1f77b4\",\n    \"#aec7e8\",\n    \"#ff7f0e\",\n    \"#ffbb78\",\n    \"#2ca02c\",\n    \"#98df8a\",\n    \"#d62728\",\n    \"#ff9896\",\n    \"#9467bd\",\n    \"#c5b0d5\",\n    \"#8c564b\",\n    \"#c49c94\",\n    \"#e377c2\",\n    \"#f7b6d2\",\n    \"#7f7f7f\",\n    \"#c7c7c7\",\n    \"#bcbd22\",\n    \"#dbdb8d\",\n    \"#17becf\",\n    \"#9edae5\"\n  ],\n  shapes: [\n    \"circle\",\n    \"cross\",\n    \"diamond\",\n    \"square\",\n    \"triangle-down\",\n    \"triangle-up\"\n  ]\n};\n\nmodule.exports = config;","module.exports = {\n  ADD_CELL: 1,\n  MOD_CELL: 2,\n\n  ID: \"_id\",\n\n  DATA: \"data\",\n  FIELDS:  \"fields\",\n  SCALES:  \"scales\",\n  SIGNAL:  \"signal\",\n  SIGNALS: \"signals\",\n\n  GROUP: \"group\",\n\n  ENTER: \"enter\",\n  UPDATE: \"update\",\n  EXIT: \"exit\",\n\n  SENTINEL: {\"sentinel\": 1},\n  SINGLETON: \"_singleton\",\n\n  ADD: \"add\",\n  REMOVE: \"remove\",\n  TOGGLE: \"toggle\",\n  CLEAR: \"clear\",\n\n  LINEAR: \"linear\",\n  ORDINAL: \"ordinal\",\n  LOG: \"log\",\n  POWER: \"pow\",\n  TIME: \"time\",\n  QUANTILE: \"quantile\",\n\n  DOMAIN: \"domain\",\n  RANGE: \"range\",\n\n  MARK: \"mark\",\n  AXIS: \"axis\",\n\n  COUNT: \"count\",\n  GROUPBY: \"groupby\",\n  MIN: \"min\",\n  MAX: \"max\",\n  VALUE: \"value\",\n\n  SORT: \"sort\",\n  ASC: \"asc\",\n  DESC: \"desc\"\n};","var config = require('./config');\nvar ts;\n\nmodule.exports = function(input, args) {\n  if (!config.debug) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  args.unshift(input.stamp||-1);\n  args.unshift(Date.now() - ts);\n  if(input.add) args.push(input.add.length, input.mod.length, input.rem.length, !!input.reflow);\n  log.apply(console, args);\n  ts = Date.now();\n};"],"sourceRoot":"/source/"}